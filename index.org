#+TITLE: Monitoring Data Entry for Haryana Surveys
#+AUTHOR: SSER
#+OPTIONS: H:3 ^:{}
#+LATEX_HEADER: \usepackage{booktabs}
#+LATEX_HEADER: \usepackage{tabularx}
#+TODO: TODO EDIT CHECK | DONE
#+PROPERTY: header-args:R :session haryana :eval never-export
#+SETUPFILE: https://fniessen.github.io/org-html-themes/setup/theme-readtheorg.setup
#+HTML_HEAD: <style>#content{max-width:1200px;} </style>
#+MACRO: hlmacro (eval (org-table-insert-hline))



* Preliminaries                                                    :noexport:

#+NAME: load-libraries
#+BEGIN_SRC R :results silent :exports none
require(RPostgreSQL)
require(ggplot2)
require(data.table)
  addhead<-function(d1,v1,v2) {
        CJ(unique(v1),unique(v2))->tabhead
         c(1:nrow(tabhead))->tabhead$rank
         ave(tabhead$rank,tabhead$V1,FUN=rank)->tabhead$rank
         ave(tabhead$rank,tabhead$V1,FUN=length)->tabhead$len
         tabhead$V1[tabhead$rank!=1]<-""
         ifelse(tabhead$V1=="","",paste("<",tabhead$len,"colc>",tabhead$V1,sep=""))->tabhead$V1
         transpose(tabhead[,c(1:2)])->tabhead
         as.data.frame(rbind(tabhead,d1,fill=TRUE))->tabhead2
         levels(tabhead2[,ncol(tabhead2)])<-c(levels(tabhead2[,ncol(tabhead2)]),names(tabhead2)[length(names(tabhead2))],"{{{hlmacro}}}")
         names(tabhead2)[length(names(tabhead2))] ->tabhead2[1,ncol(tabhead2)]
         "{{{hlmacro}}}"->tabhead2[2,ncol(tabhead2)]
         tabhead2[,c(ncol(tabhead2),1:ncol(tabhead2)-1)]->tabhead2
#         tabhead2[2,1]<-""
        tabhead2
    }

#+END_SRC

#+NAME: open-database-connection
#+BEGIN_SRC R :results silent :exports none
source("sserconnect.R")
#+END_SRC

#+NAME: read-data-code
#+BEGIN_SRC R :results silent :exports none
  dbListTables(surveypg)->t

  data.table(dbReadTable(surveypg,"ruralsurvey_household"))->household
  data.table(dbReadTable(surveypg,"ruralsurvey_sampledesign"))->sampledesign
  data.table(dbReadTable(surveypg,"ruralsurvey_member"))->member
  data.table(dbReadTable(surveypg,"ruralsurvey_codecaste"))->castes
  data.table(dbReadTable(surveypg,"ruralsurvey_codevillage"))->villages
  data.table(dbReadTable(surveypg,"ruralsurvey_coderelationship"))->relationship


  data.table(dbReadTable(surveypg,"ruralsurvey_codeoccupationcategory"))->occupationcode

  data.table(dbReadTable(surveypg,"ruralsurvey_occupations_household_members"))->occupations
  data.table(dbReadTable(surveypg,"ruralsurvey_current_ownership_holdings"))->ownershipholding
  data.table(dbReadTable(surveypg,"ruralsurvey_irrigation_ownership_holdings"))->irrigation
  sampledesign[,id:=NULL]
  merge(household,sampledesign,by.x=c("village_id","stratum_number"),by.y=c("village_id","stratum"),all.x=T)->household
  household[is.na(multiplier),multiplier:=1]
  #dbDisconnect(surveypg)

#+END_SRC

#+NAME: list-tables-code
#+BEGIN_SRC R :results value :exports none
  dbListTables(surveypg)->t
#+END_SRC

#+NAME: list-tables
#+RESULTS: list-tables-code
| ruralsurvey_asset_ownership_inventories                         |
| auth_user                                                       |
| django_migrations                                               |
| django_session                                                  |
| ruralsurvey_agricultural_labouring_out                          |
| django_content_type                                             |
| ruralsurvey_access_to_education_questions                       |
| django_admin_log                                                |
| auth_group                                                      |
| auth_user_user_permissions                                      |
| ruralsurvey_code_purpose_of_borrowing                           |
| ruralsurvey_codevillage                                         |
| ruralsurvey_current_ownership_holdings                          |
| ruralsurvey_irrigation_ownership_holdings                       |
| ruralsurvey_land_tenancy_mortgage                               |
| ruralsurvey_agricultural_non_agricultura_labour_services        |
| ruralsurvey_input_use_for_crops_crop_number                     |
| auth_group_permissions                                          |
| ruralsurvey_household                                           |
| auth_user_groups                                                |
| auth_permission                                                 |
| ruralsurvey_codeoccupationcategory                              |
| ruralsurvey_asset_ownership_other                               |
| ruralsurvey_assets                                              |
| ruralsurvey_member                                              |
| ruralsurvey_animal_resources_for_last_one_year_sale_disposal    |
| ruralsurvey_animal_resources_work_done_by_household_members     |
| ruralsurvey_animal_resources_sale_production                    |
| ruralsurvey_asset_ownership_land_buildings                      |
| ruralsurvey_annual_consumption_of_major_items_of_food           |
| ruralsurvey_codecaste                                           |
| ruralsurvey_asset_ownership_electrical                          |
| ruralsurvey_asset_ownership_furniture                           |
| ruralsurvey_animal_resources_milk                               |
| ruralsurvey_agricultural_loans_borrowed_last_year_and_repaid    |
| ruralsurvey_animal_resources_feed                               |
| ruralsurvey_animal_resources_for_last_one_year_inventory        |
| ruralsurvey_animal_resources_other_costs                        |
| ruralsurvey_access_to_education_children                        |
| ruralsurvey_acquisition_and_loss_of_major_assets                |
| ruralsurvey_access_to_food_in_school_or_anganwadi               |
| ruralsurvey_code_commodity                                      |
| ruralsurvey_code_asset_furniture                                |
| ruralsurvey_child_help                                          |
| ruralsurvey_code_card_type                                      |
| ruralsurvey_code_asset                                          |
| ruralsurvey_code_asset_others                                   |
| ruralsurvey_code_asset_transport                                |
| ruralsurvey_code_asset_inventories                              |
| ruralsurvey_asset_ownership_transport                           |
| ruralsurvey_bank_post_office_accounts                           |
| ruralsurvey_code_asset_electrical                               |
| ruralsurvey_business_and_artisan_earnings_household_members     |
| ruralsurvey_business_and_artisan_earnings                       |
| ruralsurvey_code_cooking_energy_source                          |
| ruralsurvey_code_credit_institutions                            |
| ruralsurvey_code_food                                           |
| ruralsurvey_codeanimaltype                                      |
| ruralsurvey_code_source_of_borrowing                            |
| ruralsurvey_code_reasons_for_sale                               |
| ruralsurvey_codeeducationalinstitution                          |
| ruralsurvey_code_materials                                      |
| ruralsurvey_codeinputtype                                       |
| ruralsurvey_code_source_of_lighting                             |
| ruralsurvey_codeitem                                            |
| ruralsurvey_code_payer                                          |
| ruralsurvey_code_reason_no_treatment                            |
| ruralsurvey_codeinputcategory                                   |
| ruralsurvey_code_others_irrigation_other_nature_ex              |
| ruralsurvey_codemodeoftransport                                 |
| ruralsurvey_code_informal_saving_institions                     |
| ruralsurvey_comments_and_investigators                          |
| ruralsurvey_codereligion                                        |
| ruralsurvey_consumption_of_frequent_food_week                   |
| ruralsurvey_codevariety                                         |
| ruralsurvey_codeseasons                                         |
| ruralsurvey_codesampletype                                      |
| ruralsurvey_coderentunit                                        |
| ruralsurvey_codeplaceofbirth                                    |
| ruralsurvey_coderelationship                                    |
| ruralsurvey_codeownershiptype                                   |
| ruralsurvey_codetenurialstatus                                  |
| ruralsurvey_costs                                               |
| ruralsurvey_codepowersource                                     |
| ruralsurvey_housing                                             |
| ruralsurvey_experience_of_food_insecurity                       |
| ruralsurvey_impact_of_specified_events_on_access_to_livelihoods |
| ruralsurvey_expenditure_on_education                            |
| ruralsurvey_housing_materials                                   |
| ruralsurvey_housing_q                                           |
| ruralsurvey_for_long_term_agricultural_workers                  |
| ruralsurvey_freedom_of_employment                               |
| ruralsurvey_income_from_hiring_out_machinery                    |
| ruralsurvey_land_leased_in_fixed_rent                           |
| ruralsurvey_input_use_for_crops                                 |
| ruralsurvey_incidence_of_inpatient_treatment                    |
| ruralsurvey_land_leased_out_fixed_rent                          |
| ruralsurvey_land_leased_out_share_rent                          |
| ruralsurvey_labour_days_employed_and_wage_rates_agri            |
| ruralsurvey_land_mortgaged_in                                   |
| ruralsurvey_income_from_salaries                                |
| ruralsurvey_occupations_household_members                       |
| ruralsurvey_means_of_prod                                       |
| ruralsurvey_membership_in_self_help_groups                      |
| ruralsurvey_non_agricultural_manual_labouring_out               |
| ruralsurvey_nrega_job_cards                                     |
| ruralsurvey_outstanding_loans                                   |
| ruralsurvey_other_costs_incurred_last_year                      |
| ruralsurvey_payments_made_to_managers_and_long_term_workers_gen |
| ruralsurvey_land_mortgaged_out                                  |
| ruralsurvey_medical_insurance                                   |
| ruralsurvey_ration_cards                                        |
| ruralsurvey_ration_question                                     |
| ruralsurvey_sampledesign                                        |
| ruralsurvey_scholarships_pensions_rents_remittances             |
| ruralsurvey_use_of_informal_institutions_for_savings            |
| ruralsurvey_purchases_from_the_public_distribution_system       |
| ruralsurvey_wells_ownership                                     |
| ruralsurvey_work_done_by_household_members_under_nrega          |
| ruralsurvey_source_of_water_for_domestic_use                    |
| ruralsurvey_codecrop                                            |
| ruralsurvey_code_quantity_unit                                  |
| ruralsurvey_code_description_of_buyer_lessee                    |
| ruralsurvey_codecropcommodity                                   |
| ruralsurvey_codecontractduration                                |
| ruralsurvey_codeplaces                                          |
| ruralsurvey_codeirrigationsource                                |
| ruralsurvey_crop_sales                                          |
| ruralsurvey_cropping_pattern_schedule_production_and_sales      |
| ruralsurvey_incidence_of_diseases_over_last_one_month           |
| ruralsurvey_housing_assistance                                  |
| ruralsurvey_team_members                                        |
| ruralsurvey_payments_made_to_managers_and_long_term_workers     |


* Overall Decisions

This section records any overall decisions that are taken.

**** TODO Decide on how to deal with ranges
**** TODO Fix social group for each caste
+ Each caste belongs to a unique social group. This needs to be correctly identified and informed to all data operators.
**** TODO Sample weights
+ Vikas needs to check the sampling scripts and get the sampling weights.
**** DONE Standard values of assets                                :Vikas:
CLOSED: [2018-11-11 Sun 05:56]
***** Compute unit price from available data, and provide a table of summary statistics for each type of asset

* Database Corrections                                                :Vikas:
***** TODO FIES filter on names
***** TODO Comments on FIES questions
***** TODO Crops filter
***** DONE CodePlaces
***** DONE Make a block/page-wise table of data operators
CLOSED: [2018-11-11 Sun 06:59]

***** Type of contract in labouring out should be foreign key

** Corrections in design of land tables                           :noexport:

#+NAME: separate-irrigation
#+BEGIN_SRC R 
  drv <- dbDriver("PostgreSQL")

    surveypg <- dbConnect(drv, dbname = "ssersurveydata",
                     host = "localhost", port = 5432,)

    dbListTables(surveypg)

    ave(ownershipholding$id,ownershipholding$sno_id,FUN=rank)->ownershipholding$parcel_number
    names(ownershipholding)
    ownershipholding[,c(1,16,9:12,15,14)]->irrigation
  irrigation[is.na(irrigation_src_type)&is.na(comments),irrigation_src_type:="Unirrigated"]

  sql_truncate <- paste("TRUNCATE ", "ruralsurvey_irrigation_ownership_holdings")
  res <- dbSendQuery(conn=surveypg, statement=sql_truncate)
  dbWriteTable(surveypg,"ruralsurvey_irrigation_ownership_holdings",irrigation,row.names=FALSE,append=TRUE)
    dbReadTable(surveypg,"ruralsurvey_irrigation_ownership_holdings")
    dbDisconnect(surveypg)
#+END_SRC

#+NAME: combine-leases
#+BEGIN_SRC R
  drv <- dbDriver("PostgreSQL")

  surveypg <- dbConnect(drv, dbname = "ssersurveydata",
                     host = "localhost", port = 5432,)

  dbListTables(surveypg)

  as.data.table(dbReadTable(surveypg,"ruralsurvey_land_leased_in_fixed_rent"))->leasecontracts
  leasecontracts$transfer_in_out<-"In"
  leasecontracts$contract_type<-"Fixed rent"

  as.data.table(dbReadTable(surveypg,"ruralsurvey_land_leased_out_fixed_rent"))->leaseoutfixed
  leaseoutfixed$transfer_in_out<-"Out"
  leaseoutfixed$contract_type<-"Fixed rent"

  names(leasecontracts)[c(1:6)]->names(leaseoutfixed)[c(1:6)]
  names(leaseoutfixed)[names(leaseoutfixed)=="loans_from_owner"]<-"loans_from_to_partner"
  names(leaseoutfixed)[names(leaseoutfixed)=="tenant_caste_id"]<-"partner_caste_id"
  names(leaseoutfixed)[names(leaseoutfixed)=="tenant_occupation_id"]<-"partner_occupation_id"
  names(leaseoutfixed)[names(leaseoutfixed)=="kind_unit_id"]<-"crop_qty_unit_id"
  names(leaseoutfixed)[names(leaseoutfixed)=="kind"]<-"crop_qty"
  paste("SYO: ",leaseoutfixed$syo,"; ",leaseoutfixed$comments,sep="")->leaseoutfixed$comments
  leaseoutfixed[,syo:=NULL]

  rbindlist(list(leasecontracts,leaseoutfixed), use.names=TRUE, fill=TRUE, idcol=TRUE)->a
  a[,.id:=NULL]
  #ownershipholding[,c(1,16,9:12,15,14)]->irrigation
  #irrigation[is.na(irrigation_src_type)&is.na(comments),irrigation_src_type:="Unirrigated"]



  ave(a$id,a$sno_id,FUN=rank)->a$parcel_number

  a[,c(41,2,3,39,40,4,5,7,19,17,16,18)]->a1

  sql_truncate <- paste("TRUNCATE ", "ruralsurvey_land_tenancy_mortgage") ##unconditional DELETE FROM…
  res <- dbSendQuery(conn=surveypg, statement=sql_truncate)
  dbWriteTable(surveypg,"ruralsurvey_land_tenancy_mortgage",a1,row.names=FALSE,append=TRUE)

  a->a2
  a2[,transfer_in_out:=NULL]
  a2[,contract_type:=NULL]
  a2[,id:=NULL]
  sql_truncate <- paste("TRUNCATE ", "ruralsurvey_land_leased_in_fixed_rent") ##unconditional DELETE FROM…
  res <- dbSendQuery(conn=surveypg, statement=sql_truncate)
  dbWriteTable(surveypg,"ruralsurvey_land_leased_in_fixed_rent",a2,row.names=FALSE,append=TRUE)




  dbDisconnect(surveypg)
#+END_SRC

* Inconsistencies in Data                                       :Sonia:Jesim:

** Tests to be done

*** Land, cropping pattern, production, input use
**** Match operational holding
**** Boxplots of per acre yield for different crops
**** Boxplots of input use per acre for different crops
*** Animal resources
*** 
** TODO Households for which data are missing for critical variables

This section lists data gaps that are critical. Sonia to attend to these, in consultation with Jesim, where required.

#+NAME: identifying-missing-data
#+BEGIN_SRC R :results value :exports results :colnames yes :hline yes

  data.table(dbReadTable(surveypg,"ruralsurvey_codeoccupationcategory"))->codeoccupation
  codeoccupation[order(id)]->codeoccupation
  factor(codeoccupation$id)->codeoccupation$id2
  levels(codeoccupation$id2)<-codeoccupation$occupation_category
  codeoccupation[,.(id,occupation_category=id2)]->codeoccupation
  data.table(dbReadTable(surveypg,"ruralsurvey_occupations_household_members"))->occupations
  merge(occupations,codeoccupation,by.x="occupation_category_id",by.y="id")->occupations
  member[,c(1,3,4,5,16)]->t
  merge(occupations,t,by.x=c("sno_id","name_id"),by.y=c("sno_id","id"),all.y=T)->occupations
  household[,c(1,2,3,12,24,25,26)]->t
  merge(occupations,t,by.x="sno_id",by.y="id")->occupations
  merge(occupations,castes,by.x="caste_tribe_id",by.y="id")->occupations
  merge(occupations,villages,by.x="village_id",by.y="id")->occupations
  occupations[is.na(id)&age>7,.(village_name,household_number,person_number,name,sex,age)]
#+END_SRC

#+NAME: missing-occupations
#+CAPTION: These persons have no information on occupations
#+RESULTS: identifying-missing-data
| village_name     | household_number | name        | sex | age |
|------------------+------------------+-------------+-----+-----|
| Cheher Kalan     |              101 | Amarchand   | M   |  74 |
| Cheher Kalan     |              101 | Chamha Devi | F   |  70 |
| Cheher Kalan     |               45 | Tanuj Kumar | M   |   8 |
| Birdhana         |              106 | Jamnadash   | M   |  75 |
| Jamalpur Shekhan |               55 | Raj Kumar   | M   |   8 |
| Jamalpur Shekhan |               14 | Sanjana     | F   |   9 |

#+NAME: missing-data-code
#+BEGIN_SRC R :results value :exports results :colnames yes :hline yes
  merge(household,villages,by.x="village_id",by.y="id")->t
  merge(member,t,by.x="sno_id",by.y="id")->t
  merge(t,relationship,by.x="relationship_id",by.y="id")->t
  t[is.na(marital_status),.(village_name,household_number,age.x,blankfield="marital_status",detail=relationship)][order(village_name,household_number)]
#+END_SRC

#+NAME: missing-data-code
#+CAPTION: Households with data missing for critical variables
#+RESULTS: missing-data-code
| village_name     | household_number | age.x | blankfield     | detail        |
|------------------+------------------+-------+----------------+---------------|
| Birdhana         |               63 |    31 | marital_status | Son           |
| Birdhana         |               71 |    24 | marital_status | Son           |
| Birdhana         |               71 |    23 | marital_status | Son           |
| Birdhana         |              101 |    27 | marital_status | Son           |
| Cheher Kalan     |               27 |    23 | marital_status | Son           |
| Cheher Kalan     |               27 |    14 | marital_status | Son           |
| Cheher Kalan     |               45 |    10 | marital_status | Granddaughter |
| Cheher Kalan     |               45 |     8 | marital_status | Grandson      |
| Jamalpur Shekhan |               31 |    34 | marital_status | Son           |
| Jamalpur Shekhan |               37 |   nil | marital_status | Mother        |
| Jamalpur Shekhan |               51 |   nil | marital_status | Grandson      |
| Jamalpur Shekhan |               51 |   nil | marital_status | Grandson      |
| Jamalpur Shekhan |               51 |   nil | marital_status | Grandson      |
| Jamalpur Shekhan |               51 |   nil | marital_status | Grandson      |
| Jamalpur Shekhan |               56 |   4.5 | marital_status | Granddaughter |
| Jamalpur Shekhan |               56 |    10 | marital_status | Grandson      |
| Jamalpur Shekhan |               73 |    80 | marital_status | Mother        |

** Data categorisation issues
**** TODO Majhabi Sikh and Rai Sikh are perhaps same
**** TODO Jhimar and Dhinvar are same
**** TODO Lohar categorised as both BC and SC

**** TODO Change occupation category "Deals in livestock" to "Livestock trader" (if that is what is implied)
** Abnormal asset prices

#+NAME: asset_outlier_code
#+BEGIN_SRC R :results value :exports results :colnames yes :hline yes

  dbReadTable(surveypg,"ruralsurvey_asset_ownership_other")->t0
  dbReadTable(surveypg,"ruralsurvey_code_asset_others")->code
  merge(t0,code,by.x="asset_id",by.y="id")->t0

  dbReadTable(surveypg,"ruralsurvey_asset_ownership_transport")->t1
  dbReadTable(surveypg,"ruralsurvey_code_asset_transport")->code
  merge(t1,code,by.x="asset_id",by.y="id")->t1

  dbReadTable(surveypg,"ruralsurvey_asset_ownership_electrical")->t2
  dbReadTable(surveypg,"ruralsurvey_code_asset_electrical")->code
  merge(t2,code,by.x="asset_id",by.y="id")->t2

  dbReadTable(surveypg,"ruralsurvey_asset_ownership_furniture")->t3
  dbReadTable(surveypg,"ruralsurvey_code_asset_furniture")->code
  merge(t3,code,by.x="asset_id",by.y="id")->t3


  dbReadTable(surveypg,"ruralsurvey_asset_ownership_inventories")->t4
  dbReadTable(surveypg,"ruralsurvey_code_asset_inventories")->code
  merge(t4,code,by.x="asset_id",by.y="id")->t4

  data.table(rbind(t0,t1,t2,t3))->t
  merge(household,villages,by.x="village_id",by.y="id")->h
  merge(t,h,by.x="sno_id",by.y="id")->t
  t$value/t$no->t$price
  t[!is.na(price)]->t
  t[asset=="Scooter/motorcycle"][price>100000][,.(village_name,household_number,asset,price)]->t1
  rbind(t1,t[asset=="Refrigerator"][price>10000][,.(village_name,household_number,asset,price)])->t1
  rbind(t1,t[asset=="Almirah/cupboard"][price>10000][,.(village_name,household_number,asset,price)])->t1
  rbind(t1,t[asset=="Tape recorder/Two-in-one"][price>5000][,.(village_name,household_number,asset,price)])->t1
  t1
#+END_SRC

#+name: asset_outlier
#+CAPTION: Abnormal values of asset prices
#+RESULTS: asset_outlier_code
| village_name     | household_number | asset              |  price |
|------------------+------------------+--------------------+--------|
| Cheher Kalan     |               50 | Scooter/motorcycle | 125000 |
| Cheher Kalan     |               22 | Refrigerator       |  20000 |
| Khandrai         |                1 | Refrigerator       |  25000 |
| Jamalpur Shekhan |               67 | Refrigerator       |  14000 |
| Jamalpur Shekhan |                9 | Almirah/cupboard   |  35000 |

**** Match homestead land with housing information. Check if value of house and land are recorded.

* Progress of Data Entry

#+NAME: tablerows-code 
#+BEGIN_SRC sql :engine postgresql :dbhost localhost :dbuser ssersurveyuser :database ssersurveydata :colnames yes :exports results
SELECT relname,n_live_tup
FROM pg_stat_user_tables
ORDER BY n_live_tup DESC;
#+END_SRC

#+NAME: tablerows
#+CAPTION: Number of rows in each database table
#+RESULTS: tablerows-code
b| relname                                                         | n_live_tup |
|-----------------------------------------------------------------+------------|
| django_admin_log                                                |       5571 |
| ruralsurvey_occupations_household_members                       |       2538 |
| ruralsurvey_asset_ownership_electrical                          |       2095 |
| ruralsurvey_member                                              |       1747 |
| ruralsurvey_housing_materials                                   |       1590 |
| ruralsurvey_asset_ownership_furniture                           |       1048 |
| ruralsurvey_asset_ownership_inventories                         |        998 |
| ruralsurvey_asset_ownership_other                               |        873 |
| auth_group_permissions                                          |        579 |
| ruralsurvey_source_of_water_for_domestic_use                    |        457 |
| ruralsurvey_asset_ownership_land_buildings                      |        444 |
| auth_permission                                                 |        387 |
| ruralsurvey_asset_ownership_transport                           |        340 |
| auth_user_user_permissions                                      |        321 |
| ruralsurvey_housing                                             |        313 |
| ruralsurvey_household                                           |        307 |
| ruralsurvey_current_ownership_holdings                          |        145 |
| ruralsurvey_irrigation_ownership_holdings                       |        145 |
| django_content_type                                             |        129 |
| ruralsurvey_cropping_pattern_schedule_production_and_sales      |        120 |
| ruralsurvey_codeeducationalinstitution                          |        100 |
| ruralsurvey_housing_q                                           |         80 |
| ruralsurvey_codeplaces                                          |         76 |
| ruralsurvey_crop_sales                                          |         74 |
| ruralsurvey_codeplaceofbirth                                    |         73 |
| ruralsurvey_land_tenancy_mortgage                               |         64 |
| ruralsurvey_land_leased_in_fixed_rent                           |         64 |
| ruralsurvey_codeoccupationcategory                              |         62 |
| ruralsurvey_housing_assistance                                  |         51 |
| django_migrations                                               |         42 |
| ruralsurvey_scholarships_pensions_rents_remittances             |         42 |
| ruralsurvey_codecaste                                           |         41 |
| ruralsurvey_codevariety                                         |         35 |
| ruralsurvey_business_and_artisan_earnings_household_members     |         33 |
| ruralsurvey_land_leased_out_fixed_rent                          |         31 |
| ruralsurvey_non_agricultural_manual_labouring_out               |         27 |
| ruralsurvey_code_asset_electrical                               |         24 |
| ruralsurvey_code_materials                                      |         24 |
| ruralsurvey_purchases_from_the_public_distribution_system       |         23 |
| ruralsurvey_business_and_artisan_earnings                       |         22 |
| ruralsurvey_code_asset_inventories                              |         22 |
| ruralsurvey_coderelationship                                    |         21 |
| ruralsurvey_income_from_salaries                                |         21 |
| ruralsurvey_codeitem                                            |         21 |
| django_session                                                  |         19 |
| ruralsurvey_code_source_of_borrowing                            |         16 |
| ruralsurvey_codeinputtype                                       |         15 |
| ruralsurvey_assets                                              |         14 |
| ruralsurvey_animal_resources_milk                               |         13 |
| ruralsurvey_code_purpose_of_borrowing                           |         13 |
| auth_user                                                       |         13 |
| ruralsurvey_codecrop                                            |         11 |
| ruralsurvey_code_asset_others                                   |         11 |
| ruralsurvey_code_quantity_unit                                  |         11 |
| ruralsurvey_nrega_job_cards                                     |         10 |
| ruralsurvey_code_asset_furniture                                |         10 |
| ruralsurvey_team_members                                        |          9 |
| ruralsurvey_code_asset_transport                                |          8 |
| ruralsurvey_work_done_by_household_members_under_nrega          |          8 |
| ruralsurvey_costs                                               |          8 |
| ruralsurvey_coderentunit                                        |          8 |
| ruralsurvey_codesampletype                                      |          7 |
| ruralsurvey_code_commodity                                      |          7 |
| ruralsurvey_code_cooking_energy_source                          |          7 |
| ruralsurvey_codereligion                                        |          7 |
| ruralsurvey_experience_of_food_insecurity                       |          6 |
| ruralsurvey_codeirrigationsource                                |          6 |
| ruralsurvey_code_asset                                          |          6 |
| ruralsurvey_animal_resources_work_done_by_household_members     |          6 |
| ruralsurvey_code_reasons_for_sale                               |          6 |
| ruralsurvey_code_others_irrigation_other_nature_ex              |          5 |
| ruralsurvey_codeinputcategory                                   |          5 |
| ruralsurvey_code_reason_no_treatment                            |          5 |
| ruralsurvey_agricultural_labouring_out                          |          5 |
| ruralsurvey_consumption_of_frequent_food_week                   |          4 |
| ruralsurvey_codetenurialstatus                                  |          4 |
| ruralsurvey_codecropcommodity                                   |          4 |
| ruralsurvey_annual_consumption_of_major_items_of_food           |          4 |
| ruralsurvey_codevillage                                         |          4 |
| ruralsurvey_code_description_of_buyer_lessee                    |          4 |
| ruralsurvey_code_card_type                                      |          4 |
| ruralsurvey_animal_resources_for_last_one_year_inventory        |          4 |
| ruralsurvey_land_leased_out_share_rent                          |          4 |
| ruralsurvey_animal_resources_feed                               |          3 |
| ruralsurvey_code_payer                                          |          3 |
| ruralsurvey_codeanimaltype                                      |          3 |
| ruralsurvey_codeseasons                                         |          3 |
| auth_user_groups                                                |          3 |
| ruralsurvey_codeownershiptype                                   |          2 |
| auth_group                                                      |          2 |
| ruralsurvey_code_informal_saving_institions                     |          2 |
| ruralsurvey_codepowersource                                     |          2 |
| ruralsurvey_comments_and_investigators                          |          2 |
| ruralsurvey_input_use_for_crops                                 |          2 |
| ruralsurvey_bank_post_office_accounts                           |          1 |
| ruralsurvey_incidence_of_inpatient_treatment                    |          1 |
| ruralsurvey_code_credit_institutions                            |          1 |
| ruralsurvey_ration_cards                                        |          1 |
| ruralsurvey_other_costs_incurred_last_year                      |          1 |
| ruralsurvey_for_long_term_agricultural_workers                  |          1 |
| ruralsurvey_agricultural_non_agricultura_labour_services        |          1 |
| ruralsurvey_codemodeoftransport                                 |          1 |
| ruralsurvey_outstanding_loans                                   |          1 |
| ruralsurvey_input_use_for_crops_crop_number                     |          1 |
| ruralsurvey_impact_of_specified_events_on_access_to_livelihoods |          1 |
| ruralsurvey_ration_question                                     |          1 |
| ruralsurvey_expenditure_on_education                            |          1 |
| ruralsurvey_means_of_prod                                       |          0 |
| ruralsurvey_wells_ownership                                     |          0 |
| ruralsurvey_animal_resources_for_last_one_year_sale_disposal    |          0 |
| ruralsurvey_access_to_food_in_school_or_anganwadi               |          0 |
| ruralsurvey_codecontractduration                                |          0 |
| ruralsurvey_membership_in_self_help_groups                      |          0 |
| ruralsurvey_code_source_of_lighting                             |          0 |
| ruralsurvey_animal_resources_sale_production                    |          0 |
| ruralsurvey_use_of_informal_institutions_for_savings            |          0 |
| ruralsurvey_access_to_education_questions                       |          0 |
| ruralsurvey_freedom_of_employment                               |          0 |
| ruralsurvey_payments_made_to_managers_and_long_term_workers_gen |          0 |
| ruralsurvey_animal_resources_other_costs                        |          0 |
| ruralsurvey_payments_made_to_managers_and_long_term_workers     |          0 |
| ruralsurvey_land_mortgaged_in                                   |          0 |
| ruralsurvey_incidence_of_diseases_over_last_one_month           |          0 |
| ruralsurvey_labour_days_employed_and_wage_rates_agri            |          0 |
| ruralsurvey_child_help                                          |          0 |
| ruralsurvey_medical_insurance                                   |          0 |
| ruralsurvey_code_food                                           |          0 |
| ruralsurvey_land_mortgaged_out                                  |          0 |
| ruralsurvey_acquisition_and_loss_of_major_assets                |          0 |
| ruralsurvey_agricultural_loans_borrowed_last_year_and_repaid    |          0 |
| ruralsurvey_access_to_education_children                        |          0 |
| ruralsurvey_income_from_hiring_out_machinery                    |          0 |

* Emerging patterns

This section will provide a compilation of tables and graphs on different aspects of social and economic conditions in the village.



** Caste Composition

#+NAME: caste-composition-code
#+BEGIN_SRC R :results value :exports results :colnames yes :hline yes
  merge(household,villages,by.x="village_id",by.y="id")->t
  merge(t,castes,by.x="caste_tribe_id",by.y="id")->t
  t[,.(Number=round(sum(multiplier))),keyby=.(village_name,if_sc_st,caste_tribe)][CJ(unique(village_name),unique(if_sc_st),unique(caste_tribe))][,as.list(Number),by=.(if_sc_st,caste_tribe)]->t1
  t1[!(is.na(V1)&is.na(V3)&is.na(V3)&is.na(V4))]->t1
  names(t1)[c(3:ncol(t1))]<-sort(unique(t$village_name))
  names(t1)[c(1:2)]<-c("Social group","Caste")
  t1
#+END_SRC

#+NAME: caste-composition-code
#+CAPTION: Caste composition of households in the villages
#+RESULTS: caste-composition-code
| Social group | Caste              | Birdhana | Cheher Kalan | Gijji | Jamalpur Shekhan | Khandrai |
|--------------+--------------------+----------+--------------+-------+------------------+----------|
| BC           | Bairagi            |      nil | nil          | 17    | nil              | nil      |
| BC           | Bhatra sikh        |      nil | nil          | nil   | 1                | nil      |
| BC           | Chhipi             |      nil | nil          | 4     | nil              | nil      |
| BC           | Jhimar/Dhinwar     |       31 | nil          | nil   | nil              | 47       |
| BC           | Kamboj             |       68 | nil          | nil   | 37               | nil      |
| BC           | Kamboj Sikh        |      nil | nil          | nil   | 11               | nil      |
| BC           | Khati              |      nil | 30           | 8     | 18               | 9        |
| BC           | Kumhar             |       31 | 10           | 4     | nil              | 14       |
| BC           | Lodhi              |        1 | nil          | nil   | nil              | nil      |
| BC           | Lohar              |       32 | 5            | 1     | 1                | nil      |
| BC           | Mali               |       31 | nil          | nil   | nil              | nil      |
| BC           | Manihar            |      nil | nil          | 1     | nil              | nil      |
| BC           | Nai                |       62 | 25           | nil   | 55               | nil      |
| BC           | Rebari             |      254 | nil          | nil   | nil              | nil      |
| BC           | Saini              |      nil | nil          | nil   | 408              | nil      |
| BC           | Teli               |        1 | nil          | nil   | nil              | nil      |
| Other        | Baniya             |       31 | 9            | nil   | nil              | nil      |
| Other        | Bishnoi            |       68 | nil          | nil   | nil              | nil      |
| Other        | Garg               |      nil | nil          | nil   | 11               | nil      |
| Other        | Jat                |       60 | 423          | 27    | 43               | 322      |
| Other        | Jat sikh           |      nil | nil          | nil   | 54               | nil      |
| Other        | Khati              |      nil | nil          | nil   | 18               | nil      |
| Other        | Mehta/Arora/Khatri |       38 | nil          | nil   | 34               | nil      |
| Other        | Sunar              |        5 | 3            | nil   | nil              | nil      |
| SC           | Bairagi            |      nil | nil          | 3     | nil              | nil      |
| SC           | Balmiki            |      nil | nil          | 8     | 153              | 4        |
| SC           | Bawaria            |      nil | nil          | nil   | 0                | 4        |
| SC           | Bazigar            |       32 | nil          | nil   | 111              | nil      |
| SC           | Chamar             |      125 | 44           | 22    | 174              | 70       |
| SC           | Dhanak             |      109 | 29           | 24    | nil              | 256      |
| SC           | Jat                |      nil | nil          | 1     | nil              | nil      |
| SC           | Mazhabi Sikh       |        1 | nil          | nil   | nil              | nil      |
| SC           | Meena              |        1 | nil          | nil   | nil              | nil      |
| SC           | Nayak              |       32 | nil          | nil   | nil              | nil      |
| SC           | Od                 |       33 | nil          | nil   | 509              | nil      |
| SC           | Rai Sikh           |      576 | nil          | nil   | nil              | nil      |

** Occupations



+ More male workers are identified as peasants than women.
+ More women participating in maintenance of animal resources than participating in farm operations on household operational holdings. More women participate in maintenance of animal resources than men, though participation of men is far from being negligible.
+ A rather small proportion of workers are engaged in non-agricultural manual labour.


#+NAME: occupation-preliminary-code
#+BEGIN_SRC R :results silent :exports none
  data.table(dbReadTable(surveypg,"ruralsurvey_codeoccupationcategory"))->codeoccupation
    codeoccupation[order(id)]->codeoccupation
    factor(codeoccupation$id)->codeoccupation$id2
    levels(codeoccupation$id2)<-codeoccupation$occupation_category
    codeoccupation[,.(id,occupation_category=id2)]->codeoccupation
    data.table(dbReadTable(surveypg,"ruralsurvey_occupations_household_members"))->occupations
    merge(occupations,codeoccupation,by.x="occupation_category_id",by.y="id")->occupations
    household[,c(1,2,3,12,24,25,26,38)]->t
    merge(occupations,t,by.x="sno_id",by.y="id")->occupations
    merge(occupations,castes,by.x="caste_tribe_id",by.y="id")->occupations
    merge(occupations,villages,by.x="village_id",by.y="id")->occupations
    member[,c(1,3,4,5,16)]->t
  merge(occupations,t,by.x=c("sno_id","name_id"),by.y=c("sno_id","id"))->occupations
  #merge(occupations,sampledesign,by.x=c("village_id","stratum_number"),by.y=c("village_id","stratum"),all.x=T)->occupations
    levels(occupations$occupation_category)[levels(occupations$occupation_category)=="Sweetmeat seller/Halwai"]<-"Self-employed, business owner"
    levels(occupations$occupation_category)[levels(occupations$occupation_category)=="Shopkeeper"]<-"Self-employed, business owner"
    levels(occupations$occupation_category)[levels(occupations$occupation_category)=="Trader/Merchant"]<-"Self-employed, business owner"
    levels(occupations$occupation_category)[levels(occupations$occupation_category)=="Caterer"]<-"Self-employed, business owner"
    levels(occupations$occupation_category)[levels(occupations$occupation_category)=="Private tutor"]<-"Self-employed, business owner"
    levels(occupations$occupation_category)[levels(occupations$occupation_category)=="Private school owner"]<-"Self-employed, business owner"
    levels(occupations$occupation_category)[levels(occupations$occupation_category)=="Coaching centre owner"]<-"Self-employed, business owner"
    levels(occupations$occupation_category)[levels(occupations$occupation_category)=="Street vendor/seller"]<-"Self-employed, business owner"
    levels(occupations$occupation_category)[levels(occupations$occupation_category)=="Milk dairy owner"]<-"Self-employed, business owner"
    levels(occupations$occupation_category)[levels(occupations$occupation_category)=="Deals in livestock"]<-"Self-employed, business owner"
    levels(occupations$occupation_category)[levels(occupations$occupation_category)=="Livestock trader"]<-"Self-employed, business owner"
    levels(occupations$occupation_category)[levels(occupations$occupation_category)=="Doctor"]<-"Self-employed, business owner"
    levels(occupations$occupation_category)[levels(occupations$occupation_category)=="Advocate/Lawyer"]<-"Self-employed, business owner"
    levels(occupations$occupation_category)[levels(occupations$occupation_category)=="Factory/business owner"]<-"Self-employed, business owner"
    levels(occupations$occupation_category)[levels(occupations$occupation_category)=="Mechanic"]<-"Self-employed, business owner"
    levels(occupations$occupation_category)[levels(occupations$occupation_category)=="Moneylender"]<-"Self-employed, business owner"
    levels(occupations$occupation_category)[levels(occupations$occupation_category)=="Retired pensioner"]<-"Recipient of pension/remittance"
    levels(occupations$occupation_category)[levels(occupations$occupation_category)=="Widow pension beneficiary"]<-"Recipient of pension/remittance"
    levels(occupations$occupation_category)[levels(occupations$occupation_category)=="Welfare pension beneficiary"]<-"Recipient of pension/remittance"
    levels(occupations$occupation_category)[levels(occupations$occupation_category)=="Barber"]<-"Caste occupations/artisans"
    levels(occupations$occupation_category)[levels(occupations$occupation_category)=="Blacksmith"]<-"Caste occupations/artisans"
    levels(occupations$occupation_category)[levels(occupations$occupation_category)=="Cobbler"]<-"Caste occupations/artisans"
    levels(occupations$occupation_category)[levels(occupations$occupation_category)=="Weaver"]<-"Caste occupations/artisans"
    levels(occupations$occupation_category)[levels(occupations$occupation_category)=="Dhobi/launderer"]<-"Caste occupations/artisans"
    levels(occupations$occupation_category)[levels(occupations$occupation_category)=="Potmaker"]<-"Caste occupations/artisans"
    levels(occupations$occupation_category)[levels(occupations$occupation_category)=="Mason"]<-"Caste occupations/artisans"
    levels(occupations$occupation_category)[levels(occupations$occupation_category)=="Artisan"]<-"Caste occupations/artisans"
    levels(occupations$occupation_category)[levels(occupations$occupation_category)=="Tailor"]<-"Caste occupations/artisans"
    levels(occupations$occupation_category)[levels(occupations$occupation_category)=="Carpenter"]<-"Caste occupations/artisans"
    levels(occupations$occupation_category)[levels(occupations$occupation_category)=="Goldsmith"]<-"Caste occupations/artisans"
    levels(occupations$occupation_category)[levels(occupations$occupation_category)=="Electrician"]<-"Caste occupations/artisans"
    levels(occupations$occupation_category)[levels(occupations$occupation_category)=="Plumber"]<-"Caste occupations/artisans"

    levels(occupations$occupation_category)[levels(occupations$occupation_category)=="Salaried government employee (other)"]<-"Salaried government employee"
    levels(occupations$occupation_category)[levels(occupations$occupation_category)=="Army service"]<-"Salaried government employee"
    levels(occupations$occupation_category)[levels(occupations$occupation_category)=="Police"]<-"Salaried government employee"
    levels(occupations$occupation_category)[levels(occupations$occupation_category)=="Village officials"]<-"Salaried government employee"
    levels(occupations$occupation_category)[levels(occupations$occupation_category)=="Teachers"]<-"Salaried government employee"
    levels(occupations$occupation_category)[levels(occupations$occupation_category)=="Salaried private office worker"]<-"Salaried private employee"
    levels(occupations$occupation_category)[levels(occupations$occupation_category)=="Salaried private worker (other)"]<-"Salaried private employee"
    levels(occupations$occupation_category)[levels(occupations$occupation_category)=="Driver"]<-"Salaried private employee"

    levels(occupations$occupation_category)[levels(occupations$occupation_category)=="Construction labour"]<-"Non-agricultural manual labour"
    levels(occupations$occupation_category)[levels(occupations$occupation_category)=="Sweeper/cleaner"]<-"Non-agricultural manual labour"
    levels(occupations$occupation_category)[levels(occupations$occupation_category)=="Casual non-agricultural labour (other)"]<-"Non-agricultural manual labour"
    levels(occupations$occupation_category)[levels(occupations$occupation_category)=="NREGA workers/Labour in other public works"]<-"Non-agricultural manual labour"
    levels(occupations$occupation_category)[levels(occupations$occupation_category)=="Domestic work"]<-"Non-agricultural manual labour"
    levels(occupations$occupation_category)[levels(occupations$occupation_category)=="Too old to work"]<-"Unable to work because of age or poor health"
    levels(occupations$occupation_category)[levels(occupations$occupation_category)=="Unable to work because of medical reasons"]<-"Unable to work because of age or poor health"
    levels(occupations$occupation_category)[levels(occupations$occupation_category)=="Child not going to school or work"]<-"Unable to work because of age or poor health"
    levels(occupations$occupation_category)[levels(occupations$occupation_category)=="Agricultural machinery operator"]<-"Agricultural labour"
    levels(occupations$occupation_category)[levels(occupations$occupation_category)=="Specialised agricultural labour"]<-"Agricultural labour"
    levels(occupations$occupation_category)[levels(occupations$occupation_category)=="Longterm agricultural worker - Siri"]<-"Agricultural labour"
    levels(occupations$occupation_category)[levels(occupations$occupation_category)=="Longterm agricultural worker - other"]<-"Agricultural labour"
    levels(occupations$occupation_category)[levels(occupations$occupation_category)=="Tenant peasant"]<-"Peasant"
    levels(occupations$occupation_category)[levels(occupations$occupation_category)=="Apprentice"]<-"Student"

  factor(occupations$occupation_category,levels=c("Landlord","Peasant","Tending animals","Agricultural labour","Non-agricultural manual labour","Salaried government employee","Salaried private employee","Self-employed, business owner","Caste occupations/artisans","Recipient of pension/remittance","Apprentice","Collection of CPRs","Unemployed","Student","Housework","Unable to work because of age or poor health","Other"))->occupations$occupation_category

#+END_SRC

#+NAME: occupation-table1-code
#+BEGIN_SRC R :results value :exports results :colnames no
  household[,c(1,2,3,26,38)]->t1
  merge(member,t1,by.x="sno_id",by.y="id")->t1
  merge(t1,villages,by.x="village_id",by.y="id")->t1
  t1[village_name=="Birdhana" & stratum_number==10,village_name:="Birdhana Dhanis"]
  t1[as.numeric(age)>=7,.(population=sum(multiplier)),keyby=.(village_name,sex)]->t1
  occupations[village_name=="Birdhana" & stratum_number==10,village_name:="Birdhana Dhanis"]
  occupations[as.numeric(age)>=7,.(numberofworkers=sum(multiplier)),keyby=.(village_name,sex,occupation_category)]->t
  merge(t,t1,by=c("village_name","sex")) ->t
  round(t$numberofworkers*100/t$population,1)->t$numberofworkers
  setkey(t,village_name,sex,occupation_category)
  t[CJ(unique(village_name),unique(sex),unique(occupation_category))][,as.list(numberofworkers),by=.(occupation_category)]->t1
  names(t1)[1]<-c("Occupation categories")
  addhead(t1,occupations$village_name,occupations$sex)
#+END_SRC

#+NAME: occupation
#+CAPTION: Proportion of population engaged in different occupations, persons aged 7 years and above, by sex and village (per cent)
#+RESULTS: occupation-table1-code
| Occupation categories                        | <2colc>Birdhana |      | <2colc>Birdhana Dhanis |      | <2colc>Cheher Kalan |      | <2colc>Gijji |      | <2colc>Jamalpur Shekhan |      | <2colc>Khandrai |      |
| {{{hlmacro}}}                                |               F |    M | F                      |    M |                   F |    M |            F |    M |                       F |    M |               F |    M |
| Landlord                                     |             nil |  0.3 | nil                    |  nil |                 nil |  2.8 |          nil |  nil |                     nil |    0 |             nil |  0.1 |
| Peasant                                      |             9.7 | 28.4 | 27.3                   |   50 |                18.3 | 33.5 |         12.6 | 19.7 |                     8.5 | 13.6 |            12.1 | 23.1 |
| Tending animals                              |            38.7 | 20.4 | 52.7                   | 33.9 |                41.9 | 24.7 |         32.5 | 20.1 |                    27.8 | 14.7 |            28.2 | 14.7 |
| Agricultural labour                          |            17.9 | 13.8 | 10.9                   | 14.3 |                10.1 | 17.7 |         12.6 | 10.2 |                    24.4 | 17.1 |            13.5 | 10.2 |
| Non-agricultural manual labour               |             7.6 | 21.5 | 3.6                    | 12.5 |                10.3 |  5.6 |          8.1 | 18.4 |                    13.7 | 22.1 |               5 | 20.7 |
| Salaried government employee                 |             1.2 |  2.7 | nil                    |  1.8 |                   4 |  6.6 |          1.6 |  6.1 |                     1.1 |  2.3 |             4.6 |  5.8 |
| Salaried private employee                    |             0.8 | 11.3 | nil                    |  7.1 |                 0.2 |  2.2 |          1.2 | 20.7 |                     nil | 10.2 |             0.3 |  7.3 |
| Self-employed, business owner                |             0.7 | 19.9 | nil                    |  1.8 |                 0.4 |  4.5 |          1.6 | 11.9 |                     5.2 | 18.2 |             4.3 | 12.5 |
| Caste occupations/artisans                   |             4.1 |  2.9 | nil                    |  nil |                   1 |  5.6 |          1.2 |    2 |                       5 |  5.4 |               2 |  0.7 |
| Recipient of pension/remittance              |            13.2 |  7.5 | 3.6                    | 12.5 |                14.8 |   22 |         16.3 | 13.3 |                    11.8 |  7.6 |               4 |  nil |
| Unemployed                                   |             nil |  0.1 | nil                    |  nil |                 nil |  6.2 |          0.4 |  3.4 |                     nil |  0.3 |               1 |  nil |
| Student                                      |            29.1 |   27 | 30.9                   | 33.9 |                35.5 | 28.2 |         27.6 | 28.9 |                    22.6 | 29.2 |            30.7 | 33.2 |
| Housework                                    |            59.1 |  1.5 | 63.6                   |  1.8 |                36.6 |    1 |         79.7 |  2.7 |                    48.6 |  1.5 |            69.8 |  1.1 |
| Unable to work because of age or poor health |             1.6 |  2.6 | nil                    |  nil |                 3.9 |  4.2 |          0.4 |  5.4 |                     1.4 |  2.3 |             2.2 |  6.3 |
| Other                                        |             nil |  0.8 | nil                    |  nil |                 nil |  0.2 |          nil |  0.7 |                     0.3 |  2.6 |             nil |  0.2 |

**** TODO Check if all women who participate in labour on household operational holding are indeed recorded as peasants.

** Land relations
*** [[file:land-contracts.org][Analysis of land contracts]]
** Food security
** Cropping pattern, Production, Input use
** Labour Deployment
** Employment
** Livestock
** Housing and Sanitation
** Health and Education
** Assets and Indebtedness

#+INCLUDE: assets.org

* Kill Connections                                                 :noexport:

#+NAME: kill-ssh-connections
#+BEGIN_SRC R :results silent :exports none
  dbDisconnect(surveypg)
  GrepResults<-system2("ps",c("ax | grep 'ssh -L 3333'| grep 'singdehri'"),stdout=TRUE)
  Processes<-as.numeric(sub(" .*","",GrepResults)) 
  tools::pskill(Processes)
#+END_SRC


