#+TITLE: Monitoring Data Entry for Haryana Surveys
#+AUTHOR: SSER
#+OPTIONS: H:3 ^:{}
#+LATEX_HEADER: \usepackage{booktabs}
#+LATEX_HEADER: \usepackage{tabularx}
#+TODO: TODO EDIT CHECK | DONE
#+PROPERTY: header-args:R :session haryana :eval never-export

* Preliminaries                                                    :noexport:

#+NAME: load-libraries
#+BEGIN_SRC R :results silent :exports none
  require(RPostgreSQL)
  require(ggplot2)
  require(data.table)
  GrepResults<-system2("ps",c("ax | grep 'ssh -L 3333'| grep 'singdehri'"),stdout=TRUE)
  Processes<-as.numeric(sub(" .*","",GrepResults)) 
  tools::pskill(Processes)
  system2("ssh", c("-L3333:localhost:5432", "-N", "-T", "singdehri.sser.in"), wait=FALSE)
#+END_SRC

#+NAME: open-database-connection
#+BEGIN_SRC R :results silent :exports none
  require(RPostgreSQL)
  GrepResults<-system2("ps",c("ax | grep 'ssh -L 3333'| grep 'singdehri'"),stdout=TRUE)
  Processes<-as.numeric(sub(" .*","",GrepResults)) 
  tools::pskill(Processes)
  system2("ssh", c("-L3333:localhost:5432", "-N", "-T", "singdehri.sser.in"), wait=FALSE)
  drv <- dbDriver("PostgreSQL")
  surveypg <- dbConnect(drv, dbname = "ssersurveydata",
                   host = "localhost", port = 3333, user="vaishali")
#+END_SRC

#+NAME: read-data-code
#+BEGIN_SRC R :results silent :exports none
  drv <- dbDriver("PostgreSQL")

  surveypg <- dbConnect(drv, dbname = "ssersurveydata",
                   host = "localhost", port = 3333, user="ssersurveyuser")

  dbListTables(surveypg)->t
  data.table(dbReadTable(surveypg,"ruralsurvey_household"))->household

  data.table(dbReadTable(surveypg,"ruralsurvey_member"))->member
  data.table(dbReadTable(surveypg,"ruralsurvey_codecaste"))->castes
  data.table(dbReadTable(surveypg,"ruralsurvey_codevillage"))->villages
  data.table(dbReadTable(surveypg,"ruralsurvey_coderelationship"))->relationship


  data.table(dbReadTable(surveypg,"ruralsurvey_codeoccupationcategory"))->occupationcode

  data.table(dbReadTable(surveypg,"ruralsurvey_occupations_household_members"))->occupations
  data.table(dbReadTable(surveypg,"ruralsurvey_current_ownership_holdings"))->ownershipholding
  data.table(dbReadTable(surveypg,"ruralsurvey_irrigation_ownership_holdings"))->irrigation
  #dbDisconnect(surveypg)

#+END_SRC

* Overall Decisions

This section records any overall decisions that are taken.

**** TODO Decide on how to deal with ranges
**** TODO Fix social group for each caste
+ Each caste belongs to a unique social group. This needs to be correctly identified and informed to all data operators.
**** TODO Sample weights
+ Vikas needs to check the sampling scripts and get the sampling weights.
**** DONE Standard values of assets                                :Vikas:
CLOSED: [2018-11-11 Sun 05:56]
***** Compute unit price from available data, and provide a table of summary statistics for each type of asset

* Database corrections                                                :Vikas:
***** TODO FIES filter on names
***** TODO Comments on FIES questions
***** TODO Crops filter
***** DONE CodePlaces
***** DONE Make a block/page-wise table of data operators
CLOSED: [2018-11-11 Sun 06:59]

***** Type of contract in labouring out should be foreign key

** Corrections in design of land tables

#+NAME: separate-irrigation
#+BEGIN_SRC R
  drv <- dbDriver("PostgreSQL")

    surveypg <- dbConnect(drv, dbname = "ssersurveydata",
                     host = "localhost", port = 5432,)

    dbListTables(surveypg)

    ave(ownershipholding$id,ownershipholding$sno_id,FUN=rank)->ownershipholding$parcel_number
    names(ownershipholding)
    ownershipholding[,c(1,16,9:12,15,14)]->irrigation
  irrigation[is.na(irrigation_src_type)&is.na(comments),irrigation_src_type:="Unirrigated"]

  sql_truncate <- paste("TRUNCATE ", "ruralsurvey_irrigation_ownership_holdings")
  res <- dbSendQuery(conn=surveypg, statement=sql_truncate)
  dbWriteTable(surveypg,"ruralsurvey_irrigation_ownership_holdings",irrigation,row.names=FALSE,append=TRUE)
    dbReadTable(surveypg,"ruralsurvey_irrigation_ownership_holdings")
    dbDisconnect(surveypg)
#+END_SRC

#+NAME: combine-leases
#+BEGIN_SRC R
  drv <- dbDriver("PostgreSQL")

  surveypg <- dbConnect(drv, dbname = "ssersurveydata",
                     host = "localhost", port = 5432,)

  dbListTables(surveypg)

  as.data.table(dbReadTable(surveypg,"ruralsurvey_land_leased_in_fixed_rent"))->leasecontracts
  leasecontracts$transfer_in_out<-"In"
  leasecontracts$contract_type<-"Fixed rent"

  as.data.table(dbReadTable(surveypg,"ruralsurvey_land_leased_out_fixed_rent"))->leaseoutfixed
  leaseoutfixed$transfer_in_out<-"Out"
  leaseoutfixed$contract_type<-"Fixed rent"

  names(leasecontracts)[c(1:6)]->names(leaseoutfixed)[c(1:6)]
  names(leaseoutfixed)[names(leaseoutfixed)=="loans_from_owner"]<-"loans_from_to_partner"
  names(leaseoutfixed)[names(leaseoutfixed)=="tenant_caste_id"]<-"partner_caste_id"
  names(leaseoutfixed)[names(leaseoutfixed)=="tenant_occupation_id"]<-"partner_occupation_id"
  names(leaseoutfixed)[names(leaseoutfixed)=="kind_unit_id"]<-"crop_qty_unit_id"
  names(leaseoutfixed)[names(leaseoutfixed)=="kind"]<-"crop_qty"
  paste("SYO: ",leaseoutfixed$syo,"; ",leaseoutfixed$comments,sep="")->leaseoutfixed$comments
  leaseoutfixed[,syo:=NULL]

  rbindlist(list(leasecontracts,leaseoutfixed), use.names=TRUE, fill=TRUE, idcol=TRUE)->a
  a[,.id:=NULL]
  #ownershipholding[,c(1,16,9:12,15,14)]->irrigation
  #irrigation[is.na(irrigation_src_type)&is.na(comments),irrigation_src_type:="Unirrigated"]



  ave(a$id,a$sno_id,FUN=rank)->a$parcel_number

  a[,c(41,2,3,39,40,4,5,7,19,17,16,18)]->a1

  sql_truncate <- paste("TRUNCATE ", "ruralsurvey_land_tenancy_mortgage") ##unconditional DELETE FROM…
  res <- dbSendQuery(conn=surveypg, statement=sql_truncate)
  dbWriteTable(surveypg,"ruralsurvey_land_tenancy_mortgage",a1,row.names=FALSE,append=TRUE)

  a->a2
  a2[,transfer_in_out:=NULL]
  a2[,contract_type:=NULL]
  a2[,id:=NULL]
  sql_truncate <- paste("TRUNCATE ", "ruralsurvey_land_leased_in_fixed_rent") ##unconditional DELETE FROM…
  res <- dbSendQuery(conn=surveypg, statement=sql_truncate)
  dbWriteTable(surveypg,"ruralsurvey_land_leased_in_fixed_rent",a2,row.names=FALSE,append=TRUE)




  dbDisconnect(surveypg)
#+END_SRC
* Inconsistencies in Data                                       :Sonia:Jesim:
** TODO Households for which data are missing for critical variables

This section lists data gaps that are critical. Sonia to attend to these, in consultation with Jesim, where required.

#+NAME: missing-data-code
#+BEGIN_SRC R :results value :exports results :colnames yes :hline yes
  merge(household,villages,by.x="village_id",by.y="id")->t
  merge(member,t,by.x="sno_id",by.y="id")->t
  merge(t,relationship,by.x="relationship_id",by.y="id")->t
  t[is.na(marital_status),.(village_name,household_number,age.x,blankfield="marital_status",detail=relationship)][order(village_name,household_number)]
#+END_SRC

#+NAME: missing-data-code
#+CAPTION: Households with data missing for critical variables
#+RESULTS: missing-data-code
| village_name     | household_number | age.x | blankfield     | detail          |
|------------------+------------------+-------+----------------+-----------------|
| Birdhana         |               63 |    31 | marital_status | Son             |
| Birdhana         |               71 |    24 | marital_status | Son             |
| Birdhana         |               71 |    23 | marital_status | Son             |
| Birdhana         |              101 |    27 | marital_status | Son             |
| Cheher Kalan     |               10 |    76 | marital_status | Self            |
| Cheher Kalan     |               10 |    19 | marital_status | Granddaughter   |
| Cheher Kalan     |               10 |    15 | marital_status | Granddaughter   |
| Cheher Kalan     |               10 |    15 | marital_status | Granddaughter   |
| Cheher Kalan     |               10 |    13 | marital_status | Granddaughter   |
| Cheher Kalan     |               10 |    17 | marital_status | Grandson        |
| Cheher Kalan     |               10 |    42 | marital_status | Daughter-in-law |
| Cheher Kalan     |               11 |     4 | marital_status | Son             |
| Cheher Kalan     |               15 |  0.25 | marital_status | Granddaughter   |
| Cheher Kalan     |               19 |    19 | marital_status | Son             |
| Cheher Kalan     |               24 |    40 | marital_status | Son             |
| Cheher Kalan     |               24 |    20 | marital_status | Grandson        |
| Cheher Kalan     |               24 |    23 | marital_status | Grandson        |
| Cheher Kalan     |               24 |     9 | marital_status | Grandson        |
| Cheher Kalan     |               24 |    30 | marital_status | Daughter-in-law |
| Cheher Kalan     |               24 |    37 | marital_status | Daughter-in-law |
| Cheher Kalan     |               26 |     0 | marital_status | Granddaughter   |
| Cheher Kalan     |               27 |    23 | marital_status | Son             |
| Cheher Kalan     |               27 |    14 | marital_status | Son             |
| Cheher Kalan     |               28 |     7 | marital_status | Son             |
| Cheher Kalan     |               28 |     6 | marital_status | Son             |
| Cheher Kalan     |               29 |    11 | marital_status | Son             |
| Cheher Kalan     |               29 |     4 | marital_status | Daughter        |
| Cheher Kalan     |               37 |    16 | marital_status | Granddaughter   |
| Cheher Kalan     |               37 |     2 | marital_status | Granddaughter   |
| Cheher Kalan     |               41 |   5.6 | marital_status | Granddaughter   |
| Cheher Kalan     |               41 |   2.1 | marital_status | Grandson        |
| Cheher Kalan     |               42 |    17 | marital_status | Son             |
| Cheher Kalan     |               42 |    20 | marital_status | Daughter        |
| Cheher Kalan     |               42 |    15 | marital_status | Daughter        |
| Cheher Kalan     |               43 |     1 | marital_status | Granddaughter   |
| Cheher Kalan     |               43 |     9 | marital_status | Grandson        |
| Cheher Kalan     |               43 |     8 | marital_status | Grandson        |
| Cheher Kalan     |               43 |     3 | marital_status | Grandson        |
| Cheher Kalan     |               43 |     3 | marital_status | Grandson        |
| Cheher Kalan     |               45 |    10 | marital_status | Granddaughter   |
| Cheher Kalan     |               45 |     8 | marital_status | Grandson        |
| Cheher Kalan     |               46 |     6 | marital_status | Granddaughter   |
| Cheher Kalan     |               46 |     3 | marital_status | Granddaughter   |
| Cheher Kalan     |               46 |     4 | marital_status | Grandson        |
| Cheher Kalan     |               46 |    13 | marital_status | Grandson        |
| Cheher Kalan     |               46 |    25 | marital_status | Daughter-in-law |
| Cheher Kalan     |               47 |    12 | marital_status | Son             |
| Cheher Kalan     |               47 |    10 | marital_status | Son             |
| Cheher Kalan     |               47 |    15 | marital_status | Daughter        |
| Cheher Kalan     |               49 |    50 | marital_status | Brother         |
| Cheher Kalan     |               50 |    20 | marital_status | Granddaughter   |
| Cheher Kalan     |               50 |     2 | marital_status | Granddaughter   |
| Cheher Kalan     |               50 |     5 | marital_status | Grandson        |
| Cheher Kalan     |               51 |    50 | marital_status | Son             |
| Cheher Kalan     |               51 |    17 | marital_status | Granddaughter   |
| Cheher Kalan     |               51 |    23 | marital_status | Grandson        |
| Cheher Kalan     |               51 |    14 | marital_status | Grandson        |
| Cheher Kalan     |               51 |    40 | marital_status | Daughter-in-law |
| Cheher Kalan     |               52 |   0.3 | marital_status | Grandson        |
| Cheher Kalan     |               53 |    16 | marital_status | Daughter        |
| Cheher Kalan     |               53 |    11 | marital_status | Daughter        |
| Jamalpur Shekhan |                3 |    13 | marital_status | Grandson        |
| Jamalpur Shekhan |                3 |     9 | marital_status | Grandson        |
| Jamalpur Shekhan |                6 |     4 | marital_status | Daughter        |
| Jamalpur Shekhan |                8 |    14 | marital_status | Grandson        |
| Jamalpur Shekhan |                8 |    12 | marital_status | Grandson        |
| Jamalpur Shekhan |               10 |   0.4 | marital_status | Granddaughter   |
| Jamalpur Shekhan |               12 |    18 | marital_status | Son             |
| Jamalpur Shekhan |               12 |    16 | marital_status | Son             |
| Jamalpur Shekhan |               14 |     6 | marital_status | Daughter        |
| Jamalpur Shekhan |               29 |     3 | marital_status | Granddaughter   |
| Jamalpur Shekhan |               29 |   1.5 | marital_status | Grandson        |
| Jamalpur Shekhan |               31 |    34 | marital_status | Son             |
| Jamalpur Shekhan |               31 |   2.2 | marital_status | Grandson        |
| Jamalpur Shekhan |               34 |     6 | marital_status | Granddaughter   |
| Jamalpur Shekhan |               34 |     2 | marital_status | Grandson        |
| Jamalpur Shekhan |               37 |   nil | marital_status | Mother          |
| Jamalpur Shekhan |               38 |    55 | marital_status | Self            |
| Jamalpur Shekhan |               38 |    18 | marital_status | Son             |
| Jamalpur Shekhan |               41 |     5 | marital_status | Granddaughter   |
| Jamalpur Shekhan |               41 |     3 | marital_status | Grandson        |
| Jamalpur Shekhan |               43 |    90 | marital_status | Self            |
| Jamalpur Shekhan |               50 |    35 | marital_status | Son             |
| Jamalpur Shekhan |               51 |   nil | marital_status | Grandson        |
| Jamalpur Shekhan |               51 |   nil | marital_status | Grandson        |
| Jamalpur Shekhan |               51 |   nil | marital_status | Grandson        |
| Jamalpur Shekhan |               51 |   nil | marital_status | Grandson        |
| Jamalpur Shekhan |               54 |    33 | marital_status | Son             |
| Jamalpur Shekhan |               54 |   2.5 | marital_status | Granddaughter   |
| Jamalpur Shekhan |               54 |    28 | marital_status | Grandson        |
| Jamalpur Shekhan |               54 |   nil | marital_status | Grandson        |
| Jamalpur Shekhan |               54 |   1.5 | marital_status | Grandson        |
| Jamalpur Shekhan |               55 |     6 | marital_status | Granddaughter   |
| Jamalpur Shekhan |               55 |    10 | marital_status | Grandson        |
| Jamalpur Shekhan |               55 |     8 | marital_status | Grandson        |
| Jamalpur Shekhan |               56 |   4.6 | marital_status | Granddaughter   |
| Jamalpur Shekhan |               56 |    10 | marital_status | Grandson        |
| Jamalpur Shekhan |               59 |    11 | marital_status | Son             |
| Jamalpur Shekhan |               67 |     8 | marital_status | Granddaughter   |
| Jamalpur Shekhan |               67 |     6 | marital_status | Grandson        |
| Jamalpur Shekhan |               67 |     4 | marital_status | Grandson        |
| Jamalpur Shekhan |               73 |    80 | marital_status | Mother          |

** Data categorisation issues
**** TODO Majhabi Sikh and Rai Sikh are perhaps same
**** TODO Jhimar and Dhinvar are same
**** TODO Lohar categorised as both BC and SC

** Abnormal asset prices

#+NAME: asset_outlier_code
#+BEGIN_SRC R :results value :exports results :colnames yes :hline yes

  dbReadTable(surveypg,"ruralsurvey_asset_ownership_other")->t0
  dbReadTable(surveypg,"ruralsurvey_code_asset_others")->code
  merge(t0,code,by.x="asset_id",by.y="id")->t0

  dbReadTable(surveypg,"ruralsurvey_asset_ownership_transport")->t1
  dbReadTable(surveypg,"ruralsurvey_code_asset_transport")->code
  merge(t1,code,by.x="asset_id",by.y="id")->t1

  dbReadTable(surveypg,"ruralsurvey_asset_ownership_electrical")->t2
  dbReadTable(surveypg,"ruralsurvey_code_asset_electrical")->code
  merge(t2,code,by.x="asset_id",by.y="id")->t2

  dbReadTable(surveypg,"ruralsurvey_asset_ownership_furniture")->t3
  dbReadTable(surveypg,"ruralsurvey_code_asset_furniture")->code
  merge(t3,code,by.x="asset_id",by.y="id")->t3


  dbReadTable(surveypg,"ruralsurvey_asset_ownership_inventories")->t4
  dbReadTable(surveypg,"ruralsurvey_code_asset_inventories")->code
  merge(t4,code,by.x="asset_id",by.y="id")->t4

  data.table(rbind(t0,t1,t2,t3))->t
  merge(household,villages,by.x="village_id",by.y="id")->h
  merge(t,h,by.x="sno_id",by.y="id")->t
  t$value/t$no->t$price
  t[!is.na(price)]->t
  t[asset=="Scooter/motorcycle"][price>100000][,.(village_name,household_number,asset,price)]->t1
  rbind(t1,t[asset=="Refrigerator"][price>10000][,.(village_name,household_number,asset,price)])->t1
  rbind(t1,t[asset=="Almirah/cupboard"][price>10000][,.(village_name,household_number,asset,price)])->t1
  rbind(t1,t[asset=="Tape recorder/Two-in-one"][price>5000][,.(village_name,household_number,asset,price)])->t1
  t1
#+END_SRC

#+name: asset_outlier
#+CAPTION: Abnormal values of asset prices
#+RESULTS: asset_outlier_code
| village_name     | household_number | asset              |  price |
|------------------+------------------+--------------------+--------|
| Cheher Kalan     |               50 | Scooter/motorcycle | 125000 |
| Cheher Kalan     |               22 | Refrigerator       |  20000 |
| Khandrai         |                1 | Refrigerator       |  25000 |
| Jamalpur Shekhan |               67 | Refrigerator       |  14000 |
| Jamalpur Shekhan |                9 | Almirah/cupboard   |  35000 |

**** Match homestead land with housing information. Check if value of house and land are recorded.

* Emerging patterns

This section will provide a compilation of tables and graphs on different aspects of social and economic conditions in the village.

** Caste Composition

#+NAME: caste-composition-code
#+BEGIN_SRC R :results value :exports results :colnames yes :hline yes
  merge(household,villages,by.x="village_id",by.y="id")->t
    merge(t,castes,by.x="caste_tribe_id",by.y="id")->t
  t[,.(Number=length(household_number)),keyby=.(village_name,if_sc_st,caste_tribe)][CJ(unique(village_name),unique(if_sc_st),unique(caste_tribe))][,as.list(Number),by=.(if_sc_st,caste_tribe)]->t1
    t1[!(is.na(V1)&is.na(V3)&is.na(V3)&is.na(V4))]->t1
    names(t1)[c(3:6)]<-unique(t$village_name)
    names(t1)[c(1:2)]<-c("Social group","Caste")
    t1
#+END_SRC

#+NAME: caste-composition-code
#+CAPTION: Caste representation in the sample
#+RESULTS: caste-composition-code
| Social group | Caste          | Birdhana | Jamalpur Shekhan | Khandrai | Cheher Kalan |
|--------------+----------------+----------+------------------+----------+--------------|
| BC           | Bhatra sikh    |      nil | nil              | 1        | nil          |
| BC           | Jhimar/Dhinwar |        1 | nil              | nil      | 3            |
| BC           | Jogi           |      nil | nil              | nil      | 1            |
| BC           | Kamboj         |        5 | nil              | 3        | nil          |
| BC           | Khati          |      nil | 9                | 1        | 2            |
| BC           | Kumhar         |        1 | 2                | nil      | 5            |
| BC           | Lodhi          |        1 | nil              | nil      | nil          |
| BC           | Lohar          |        2 | 1                | 1        | nil          |
| BC           | Mali           |        1 | nil              | nil      | nil          |
| BC           | Nai            |        2 | 5                | 3        | nil          |
| BC           | Rebari         |       10 | nil              | nil      | nil          |
| BC           | Saini          |      nil | nil              | 14       | nil          |
| BC           | Teli           |        1 | nil              | nil      | nil          |
| BC           | Yadav          |      nil | nil              | nil      | 1            |
| Other        | Arora          |        3 | nil              | 3        | nil          |
| Other        | Baniya         |        1 | 3                | nil      | nil          |
| Other        | Bishnoi        |       11 | nil              | nil      | nil          |
| Other        | Brahmin        |      nil | 6                | nil      | 1            |
| Other        | Garg           |      nil | nil              | 1        | nil          |
| Other        | Jat            |       12 | 10               | 9        | 23           |
| Other        | Khati          |      nil | nil              | 3        | nil          |
| Other        | Mehta          |        6 | nil              | nil      | nil          |
| Other        | Sunar          |        1 | 1                | nil      | nil          |
| SC           | Balmiki        |      nil | nil              | 7        | 1            |
| SC           | Bawaria        |      nil | nil              | 1        | 1            |
| SC           | Bazigar        |        2 | nil              | 7        | nil          |
| SC           | Chamar         |       13 | 7                | 8        | 17           |
| SC           | Dhanak         |        8 | 9                | nil      | 17           |
| SC           | Mazhabi Sikh   |        1 | nil              | nil      | nil          |
| SC           | Meena          |        1 | nil              | nil      | nil          |
| SC           | Nayak          |        2 | nil              | nil      | nil          |
| SC           | Od             |        3 | nil              | 16       | nil          |
| SC           | Rai Sikh       |       15 | nil              | nil      | nil          |

** Land relations
** Food security
** Cropping pattern, Production, Input use
** Labour Deployment
** Employment
** Livestock
** Housing and Sanitation
** Health and Education
** Assets and Indebtedness

#+INCLUDE: assets.org

* Kill Connections                                                 :noexport:

#+NAME: kill-ssh-connections
#+BEGIN_SRC R :results silent :exports none
  dbDisconnect(surveypg)
  GrepResults<-system2("ps",c("ax | grep 'ssh -L 3333'| grep 'singdehri'"),stdout=TRUE)
  Processes<-as.numeric(sub(" .*","",GrepResults)) 
  tools::pskill(Processes)
#+END_SRC

* 
