#+TITLE: Data Entry and Analysis of Data from the Haryana Surveys
#+AUTHOR: SSER
#+OPTIONS: H:3 ^:{}
#+LATEX_HEADER: \usepackage{booktabs}
#+LATEX_HEADER: \usepackage{tabularx}
#+TODO: TODO EDIT CHECK | DONE
#+PROPERTY: header-args:R :session haryana :eval never-export
#+SETUPFILE: https://fniessen.github.io/org-html-themes/setup/theme-readtheorg.setup
#+HTML_HEAD: <style>#content{max-width:1200px;} </style>
#+MACRO: hlmacro (eval (org-table-insert-hline))


* Preliminaries                                                    :noexport:



#+NAME: load-libraries
#+BEGIN_SRC R :results silent :exports none
    options(width=170)
    require(RPostgreSQL)
    require(ggplot2)
    require(data.table)
    addhead<-function(d1,v1,v2) {
      CJ(levels(v1),levels(v2))->tabhead
      c(1:nrow(tabhead))->tabhead$rank
      ave(tabhead$rank,tabhead$V1,FUN=rank)->tabhead$rank
      ave(tabhead$rank,tabhead$V1,FUN=length)->tabhead$len
      tabhead$V1[tabhead$rank!=1]<-""
      ifelse(tabhead$V1=="","",paste("<",tabhead$len,"colc>",tabhead$V1,sep=""))->tabhead$V1
      transpose(tabhead[,c(1:2)])->tabhead
      as.data.frame(rbind(tabhead,d1,fill=TRUE))->tabhead2
      levels(tabhead2[,ncol(tabhead2)])<-c(levels(tabhead2[,ncol(tabhead2)]),names(tabhead2)[length(names(tabhead2))],"{{{hlmacro}}}")
      names(tabhead2)[length(names(tabhead2))] ->tabhead2[1,ncol(tabhead2)]
      "{{{hlmacro}}}"->tabhead2[2,ncol(tabhead2)]
       tabhead2[,c(ncol(tabhead2),1:ncol(tabhead2)-1)]->tabhead2
      ## tabhead2[2,1]<-""
      tabhead2
    }

#+END_SRC

#+NAME: open-database-connection
#+BEGIN_SRC R :results silent :exports none
source("~/vikascloud/surveymonitor/sserconnect.R")
#+END_SRC

#+NAME: read-data-code
#+BEGIN_SRC R :results silent :exports none
  dbListTables(surveypg)->t

  data.table(dbReadTable(surveypg,"ruralsurvey_household"))->household
  data.table(dbReadTable(surveypg,"ruralsurvey_sampledesign"))->sampledesign
  data.table(dbReadTable(surveypg,"ruralsurvey_member"))->member
  data.table(dbReadTable(surveypg,"ruralsurvey_codecaste"))->castes
  data.table(dbReadTable(surveypg,"ruralsurvey_codereligion"))->religions
  data.table(dbReadTable(surveypg,"ruralsurvey_codevillage"))->villages
  data.table(dbReadTable(surveypg,"ruralsurvey_coderelationship"))->relationship
  data.table(dbReadTable(surveypg,"ruralsurvey_codeoccupationcategory"))->occupationcode
  data.table(dbReadTable(surveypg,"ruralsurvey_occupations_household_members"))->occupations
  sampledesign[,id:=NULL]
  merge(household,sampledesign,by.x=c("village_id","stratum_number"),by.y=c("village_id","stratum_number"),all.x=T)->household
  household[household_number<9990]->household
  household[is.na(multiplier),multiplier:=1]
  merge(household,villages,by.x="village_id",by.y="id")->household
  merge(household,castes,by.x="caste_tribe_id",by.y="id")->household
  merge(household,religions,by.x="religion_id",by.y="id")->household

  household[,c(39,5,6,4,16,38,41,42)]->hhid
  setkey(hhid,id)
  factor(hhid$village_name,levels=c("Khandrai","Cheher Kalan","Birdhana","Jamalpur Shekhan","Gijji","Bhadas"))->hhid$village_name
  levels(hhid$village_name)<-c("खंदरई","चहर कलां","भिरढाणा","जमालपुर शेखां","गिज्जी","भादस")
  #dbDisconnect(surveypg)
#+END_SRC

#+NAME: list-tables-code
#+BEGIN_SRC R :results value :exports none :colnames yes :hlines yes
  dbListTables(surveypg)->t
  t
#+END_SRC

#+NAME: list-tables
#+RESULTS: list-tables-code
| x                                                               |
|-----------------------------------------------------------------|
| auth_user_groups                                                |
| auth_group_permissions                                          |
| auth_permission                                                 |
| ruralsurvey_household                                           |
| ruralsurvey_assets                                              |
| ruralsurvey_housing_materials                                   |
| ruralsurvey_incidence_of_diseases_over_last_one_month_disea4551 |
| ruralsurvey_incidence_of_inpatient_treatment_disease_category   |
| ruralsurvey_team_members                                        |
| ruralsurvey_asset_ownership_other                               |
| ruralsurvey_code_asset_electrical                               |
| ruralsurvey_asset_ownership_land_buildings                      |
| ruralsurvey_code_others_irrigation_other_nature_ex              |
| ruralsurvey_codeplaces                                          |
| ruralsurvey_agricultural_labouring_out                          |
| ruralsurvey_crop_sales                                          |
| ruralsurvey_code_quantity_unit                                  |
| ruralsurvey_codeeducationalinstitution                          |
| ruralsurvey_code_reason_no_treatment                            |
| ruralsurvey_codereligion                                        |
| ruralsurvey_codeitem                                            |
| ruralsurvey_purchases_from_the_public_distribution_system       |
| ruralsurvey_member                                              |
| ruralsurvey_codecaste                                           |
| ruralsurvey_codeoccupationcategory                              |
| ruralsurvey_codecrop                                            |
| ruralsurvey_access_to_education_questions                       |
| ruralsurvey_acquisition_and_loss_of_major_assets                |
| ruralsurvey_animal_resources_for_last_one_year_sale_disposal    |
| ruralsurvey_animal_resources_sale_production                    |
| ruralsurvey_animal_resources_work_done_by_household_members     |
| ruralsurvey_animal_resources_milk                               |
| ruralsurvey_animal_resources_for_last_one_year_inventory        |
| ruralsurvey_animal_resources_feed                               |
| ruralsurvey_asset_ownership_electrical                          |
| ruralsurvey_agricultural_loans_borrowed_last_year_and_repaid    |
| ruralsurvey_agricultural_non_agricultura_labour_services        |
| ruralsurvey_animal_resources_other_costs                        |
| ruralsurvey_asset_ownership_transport                           |
| ruralsurvey_code_asset_inventories                              |
| ruralsurvey_code_asset_furniture                                |
| ruralsurvey_business_and_artisan_earnings_household_members     |
| ruralsurvey_asset_ownership_inventories                         |
| ruralsurvey_code_asset                                          |
| ruralsurvey_code_asset_transport                                |
| ruralsurvey_asset_ownership_furniture                           |
| ruralsurvey_bank_post_office_accounts                           |
| ruralsurvey_code_bank_account_type                              |
| ruralsurvey_child_help                                          |
| ruralsurvey_business_and_artisan_earnings                       |
| ruralsurvey_code_commodity                                      |
| ruralsurvey_codeanimaltype                                      |
| ruralsurvey_code_card_type                                      |
| ruralsurvey_codecropcommodity                                   |
| ruralsurvey_code_reasons_for_sale                               |
| ruralsurvey_code_cooking_energy_source                          |
| ruralsurvey_code_description_of_buyer_lessee                    |
| ruralsurvey_code_credit_institutions                            |
| ruralsurvey_code_source_of_borrowing                            |
| ruralsurvey_code_materials                                      |
| ruralsurvey_code_source_of_lighting                             |
| ruralsurvey_codecontractduration                                |
| ruralsurvey_code_payer                                          |
| ruralsurvey_codediseasecategory                                 |
| ruralsurvey_code_kind_commodity                                 |
| ruralsurvey_code_food                                           |
| ruralsurvey_code_informal_saving_institions                     |
| ruralsurvey_codeinputcategory                                   |
| ruralsurvey_codeirrigationsource                                |
| ruralsurvey_codeseasons                                         |
| ruralsurvey_coderelationship                                    |
| ruralsurvey_codeinputtype                                       |
| ruralsurvey_codetenurialstatus                                  |
| ruralsurvey_codevariety                                         |
| ruralsurvey_codesampletype                                      |
| ruralsurvey_codeplaceofbirth                                    |
| ruralsurvey_codeownershiptype                                   |
| ruralsurvey_codelabourunit                                      |
| ruralsurvey_codevillage                                         |
| ruralsurvey_coderentunit                                        |
| ruralsurvey_codepowersource                                     |
| ruralsurvey_codemodeoftransport                                 |
| ruralsurvey_housing                                             |
| ruralsurvey_for_long_term_agricultural_workers                  |
| ruralsurvey_consumption_of_frequent_food_week                   |
| ruralsurvey_expenditure_on_education                            |
| ruralsurvey_freedom_of_employment                               |
| ruralsurvey_cropping_pattern_schedule_production_and_sales      |
| ruralsurvey_costs                                               |
| ruralsurvey_housing_assistance                                  |
| ruralsurvey_experience_of_food_insecurity                       |
| ruralsurvey_current_ownership_holdings                          |
| ruralsurvey_incidence_of_inpatient_treatment                    |
| ruralsurvey_income_from_salaries                                |
| ruralsurvey_housing_q                                           |
| ruralsurvey_land_leased_in_fixed_rent                           |
| ruralsurvey_income_from_hiring_out_machinery                    |
| ruralsurvey_incidence_of_diseases_over_last_one_month           |
| ruralsurvey_labour_days_employed_and_wage_rates_agri            |
| ruralsurvey_input_use_for_crops_crop_number                     |
| ruralsurvey_input_use_for_crops                                 |
| ruralsurvey_impact_of_specified_events_on_access_to_livelihoods |
| ruralsurvey_land_tenancy_mortgage                               |
| ruralsurvey_land_mortgaged_out                                  |
| ruralsurvey_means_of_prod                                       |
| ruralsurvey_medical_insurance                                   |
| ruralsurvey_membership_in_self_help_groups                      |
| ruralsurvey_non_agricultural_manual_labouring_out               |
| ruralsurvey_nrega_job_cards                                     |
| ruralsurvey_land_leased_out_share_rent                          |
| ruralsurvey_land_leased_out_fixed_rent                          |
| ruralsurvey_payments_made_to_managers_and_long_term_workers_gen |
| ruralsurvey_source_of_water_for_domestic_use                    |
| ruralsurvey_ration_question                                     |
| ruralsurvey_occupations_household_members                       |
| ruralsurvey_scholarships_pensions_rents_remittances             |
| ruralsurvey_use_of_informal_institutions_for_savings            |
| ruralsurvey_ration_cards                                        |
| ruralsurvey_wells_ownership                                     |
| ruralsurvey_other_costs_incurred_last_year                      |
| ruralsurvey_outstanding_loans                                   |
| ruralsurvey_payments_made_to_managers_and_long_term_workers     |
| django_content_type                                             |
| auth_user                                                       |
| auth_group                                                      |
| ruralsurvey_access_to_food_in_school_or_anganwadi               |
| auth_user_user_permissions                                      |
| django_admin_log                                                |
| ruralsurvey_access_to_education_children                        |
| django_migrations                                               |
| django_session                                                  |
| ruralsurvey_annual_consumption_of_major_items_of_food           |
| ruralsurvey_code_asset_others                                   |
| ruralsurvey_code_purpose_of_borrowing                           |
| ruralsurvey_comments_and_investigators                          |
| ruralsurvey_irrigation_ownership_holdings                       |
| ruralsurvey_land_mortgaged_in                                   |
| ruralsurvey_sampledesign                                        |
| ruralsurvey_work_done_by_household_members_under_nrega          |


* Data Entry
** Overall Decisions Regarding Data Entry

This section records any overall decisions that are taken.

***** TODO Decide on how to deal with ranges
***** TODO Fix social group for each caste
+ Each caste belongs to a unique social group. This needs to be correctly identified and informed to all data operators.
***** DONE Standard values of assets                              :Vikas:
CLOSED: [2018-11-11 Sun 05:56]
****** Compute unit price from available data, and provide a table of summary statistics for each type of asset

** Database Corrections                                              :Vikas:
****** TODO FIES filter on names
****** TODO Comments on FIES questions
****** TODO Crops filter
****** DONE CodePlaces
****** DONE Make a block/page-wise table of data operators
CLOSED: [2018-11-11 Sun 06:59]

****** Type of contract in labouring out should be foreign key

****** Labour and Input Use

*** Corrections in design of land tables                         :noexport:

#+NAME: separate-irrigation
#+BEGIN_SRC R 
  drv <- dbDriver("PostgreSQL")

    surveypg <- dbConnect(drv, dbname = "ssersurveydata",
                     host = "localhost", port = 5432,)

    dbListTables(surveypg)

    ave(ownershipholding$id,ownershipholding$sno_id,FUN=rank)->ownershipholding$parcel_number
    names(ownershipholding)
    ownershipholding[,c(1,16,9:12,15,14)]->irrigation
  irrigation[is.na(irrigation_src_type)&is.na(comments),irrigation_src_type:="Unirrigated"]

  sql_truncate <- paste("TRUNCATE ", "ruralsurvey_irrigation_ownership_holdings")
  res <- dbSendQuery(conn=surveypg, statement=sql_truncate)
  dbWriteTable(surveypg,"ruralsurvey_irrigation_ownership_holdings",irrigation,row.names=FALSE,append=TRUE)
    dbReadTable(surveypg,"ruralsurvey_irrigation_ownership_holdings")
    dbDisconnect(surveypg)
#+END_SRC

#+NAME: combine-leases
#+BEGIN_SRC R
  drv <- dbDriver("PostgreSQL")

  surveypg <- dbConnect(drv, dbname = "ssersurveydata",
                     host = "localhost", port = 5432,)

  dbListTables(surveypg)

  as.data.table(dbReadTable(surveypg,"ruralsurvey_land_leased_in_fixed_rent"))->leasecontracts
  leasecontracts$transfer_in_out<-"In"
  leasecontracts$contract_type<-"Fixed rent"

  as.data.table(dbReadTable(surveypg,"ruralsurvey_land_leased_out_fixed_rent"))->leaseoutfixed
  leaseoutfixed$transfer_in_out<-"Out"
  leaseoutfixed$contract_type<-"Fixed rent"

  names(leasecontracts)[c(1:6)]->names(leaseoutfixed)[c(1:6)]
  names(leaseoutfixed)[names(leaseoutfixed)=="loans_from_owner"]<-"loans_from_to_partner"
  names(leaseoutfixed)[names(leaseoutfixed)=="tenant_caste_id"]<-"partner_caste_id"
  names(leaseoutfixed)[names(leaseoutfixed)=="tenant_occupation_id"]<-"partner_occupation_id"
  names(leaseoutfixed)[names(leaseoutfixed)=="kind_unit_id"]<-"crop_qty_unit_id"
  names(leaseoutfixed)[names(leaseoutfixed)=="kind"]<-"crop_qty"
  paste("SYO: ",leaseoutfixed$syo,"; ",leaseoutfixed$comments,sep="")->leaseoutfixed$comments
  leaseoutfixed[,syo:=NULL]

  rbindlist(list(leasecontracts,leaseoutfixed), use.names=TRUE, fill=TRUE, idcol=TRUE)->a
  a[,.id:=NULL]
  #ownershipholding[,c(1,16,9:12,15,14)]->irrigation
  #irrigation[is.na(irrigation_src_type)&is.na(comments),irrigation_src_type:="Unirrigated"]



  ave(a$id,a$sno_id,FUN=rank)->a$parcel_number

  a[,c(41,2,3,39,40,4,5,7,19,17,16,18)]->a1

  sql_truncate <- paste("TRUNCATE ", "ruralsurvey_land_tenancy_mortgage") ##unconditional DELETE FROM…
  res <- dbSendQuery(conn=surveypg, statement=sql_truncate)
  dbWriteTable(surveypg,"ruralsurvey_land_tenancy_mortgage",a1,row.names=FALSE,append=TRUE)

  a->a2
  a2[,transfer_in_out:=NULL]
  a2[,contract_type:=NULL]
  a2[,id:=NULL]
  sql_truncate <- paste("TRUNCATE ", "ruralsurvey_land_leased_in_fixed_rent") ##unconditional DELETE FROM…
  res <- dbSendQuery(conn=surveypg, statement=sql_truncate)
  dbWriteTable(surveypg,"ruralsurvey_land_leased_in_fixed_rent",a2,row.names=FALSE,append=TRUE)




  dbDisconnect(surveypg)
#+END_SRC

** Inconsistencies in Data                                     :Sonia:Jesim:

*** Tests to be done

**** Land, cropping pattern, production, input use

[[file:labour-database.org][Prachi's Corrections for Input Use and Labour]]

***** Match operational holding
***** Boxplots of per acre yield for different crops
***** Boxplots of seed use, fertiliser use and total expense on PPC per acre for different crops

**** Labour Deployment
***** Check total labour use by crops, and labour use at the primary level of disaggregation of crop operations.
**** Animal resources
**** Employment
***** For casual workers, look at the distribution of total days of employment
**** Incomes
**** Housing, sanitation, drinking water
**** Health
**** Education
*** TODO Households for which data are missing for critical variables

This section lists data gaps that are critical. Sonia to attend to these, in consultation with Jesim, where required.

#+NAME: identifying-missing-data
#+BEGIN_SRC R :results value :exports results :colnames yes :hline yes

  data.table(dbReadTable(surveypg,"ruralsurvey_codeoccupationcategory"))->codeoccupation
  codeoccupation[order(id)]->codeoccupation
  factor(codeoccupation$id)->codeoccupation$id2
  levels(codeoccupation$id2)<-codeoccupation$occupation_category
  codeoccupation[,.(id,occupation_category=id2)]->codeoccupation
  data.table(dbReadTable(surveypg,"ruralsurvey_occupations_household_members"))->occupations
  merge(occupations,codeoccupation,by.x="occupation_category_id",by.y="id")->occupations
  member[,c(1,3,4,5,16)]->t
  merge(occupations,t,by.x=c("sno_id","name_id"),by.y=c("sno_id","id"),all.y=T)->occupations
  household[,c(1,2,3,12,24,25,26)]->t
  merge(occupations,t,by.x="sno_id",by.y="id")->occupations
  merge(occupations,castes,by.x="caste_tribe_id",by.y="id")->occupations
  merge(occupations,villages,by.x="village_id",by.y="id")->occupations
  occupations[is.na(id)&age>7,.(village_name,household_number,person_number,name,sex,age)]
#+END_SRC

#+NAME: missing-occupations
#+CAPTION: These persons have no information on occupations
#+RESULTS: identifying-missing-data
| village_name     | household_number | name        | sex | age |
|------------------+------------------+-------------+-----+-----|
| Cheher Kalan     |              101 | Amarchand   | M   |  74 |
| Cheher Kalan     |              101 | Chamha Devi | F   |  70 |
| Cheher Kalan     |               45 | Tanuj Kumar | M   |   8 |
| Birdhana         |              106 | Jamnadash   | M   |  75 |
| Jamalpur Shekhan |               55 | Raj Kumar   | M   |   8 |
| Jamalpur Shekhan |               14 | Sanjana     | F   |   9 |

#+NAME: missing-data-code
#+BEGIN_SRC R :results value :exports results :colnames yes :hline yes
  merge(household,villages,by.x="village_id",by.y="id")->t
  merge(member,t,by.x="sno_id",by.y="id")->t
  merge(t,relationship,by.x="relationship_id",by.y="id")->t
  t[is.na(marital_status),.(village_name,household_number,age.x,blankfield="marital_status",detail=relationship)][order(village_name,household_number)]
#+END_SRC

#+NAME: missing-data-code
#+CAPTION: Households with data missing for critical variables
#+RESULTS: missing-data-code
| village_name     | household_number | age.x | blankfield     | detail        |
|------------------+------------------+-------+----------------+---------------|
| Birdhana         |               63 |    31 | marital_status | Son           |
| Birdhana         |               71 |    24 | marital_status | Son           |
| Birdhana         |               71 |    23 | marital_status | Son           |
| Birdhana         |              101 |    27 | marital_status | Son           |
| Cheher Kalan     |               27 |    23 | marital_status | Son           |
| Cheher Kalan     |               27 |    14 | marital_status | Son           |
| Cheher Kalan     |               45 |    10 | marital_status | Granddaughter |
| Cheher Kalan     |               45 |     8 | marital_status | Grandson      |
| Jamalpur Shekhan |               31 |    34 | marital_status | Son           |
| Jamalpur Shekhan |               37 |   nil | marital_status | Mother        |
| Jamalpur Shekhan |               51 |   nil | marital_status | Grandson      |
| Jamalpur Shekhan |               51 |   nil | marital_status | Grandson      |
| Jamalpur Shekhan |               51 |   nil | marital_status | Grandson      |
| Jamalpur Shekhan |               51 |   nil | marital_status | Grandson      |
| Jamalpur Shekhan |               56 |   4.5 | marital_status | Granddaughter |
| Jamalpur Shekhan |               56 |    10 | marital_status | Grandson      |
| Jamalpur Shekhan |               73 |    80 | marital_status | Mother        |

*** Data categorisation issues
***** TODO Majhabi Sikh and Rai Sikh are perhaps same
***** DONE Jhimar and Dhinvar are same
***** DONE Lohar categorised as both BC and SC
***** TODO Change occupation category "unemployed" to "Not engaged in any specified activity"
*** Abnormal asset prices

#+NAME: asset_outlier_code
#+BEGIN_SRC R :results value :exports results :colnames yes :hline yes

  dbReadTable(surveypg,"ruralsurvey_asset_ownership_other")->t0
  dbReadTable(surveypg,"ruralsurvey_code_asset_others")->code
  merge(t0,code,by.x="asset_id",by.y="id")->t0

  dbReadTable(surveypg,"ruralsurvey_asset_ownership_transport")->t1
  dbReadTable(surveypg,"ruralsurvey_code_asset_transport")->code
  merge(t1,code,by.x="asset_id",by.y="id")->t1

  dbReadTable(surveypg,"ruralsurvey_asset_ownership_electrical")->t2
  dbReadTable(surveypg,"ruralsurvey_code_asset_electrical")->code
  merge(t2,code,by.x="asset_id",by.y="id")->t2

  dbReadTable(surveypg,"ruralsurvey_asset_ownership_furniture")->t3
  dbReadTable(surveypg,"ruralsurvey_code_asset_furniture")->code
  merge(t3,code,by.x="asset_id",by.y="id")->t3


  dbReadTable(surveypg,"ruralsurvey_asset_ownership_inventories")->t4
  dbReadTable(surveypg,"ruralsurvey_code_asset_inventories")->code
  merge(t4,code,by.x="asset_id",by.y="id")->t4

  data.table(rbind(t0,t1,t2,t3))->t
  merge(household,villages,by.x="village_id",by.y="id")->h
  merge(t,h,by.x="sno_id",by.y="id")->t
  t$value/t$no->t$price
  t[!is.na(price)]->t
  t[asset=="Scooter/motorcycle"][price>100000][,.(village_name,household_number,asset,price)]->t1
  rbind(t1,t[asset=="Refrigerator"][price>10000][,.(village_name,household_number,asset,price)])->t1
  rbind(t1,t[asset=="Almirah/cupboard"][price>10000][,.(village_name,household_number,asset,price)])->t1
  rbind(t1,t[asset=="Tape recorder/Two-in-one"][price>5000][,.(village_name,household_number,asset,price)])->t1
  t1
#+END_SRC

#+name: asset_outlier
#+CAPTION: Abnormal values of asset prices
#+RESULTS: asset_outlier_code
| village_name     | household_number | asset              |  price |
|------------------+------------------+--------------------+--------|
| Cheher Kalan     |               50 | Scooter/motorcycle | 125000 |
| Cheher Kalan     |               22 | Refrigerator       |  20000 |
| Khandrai         |                1 | Refrigerator       |  25000 |
| Jamalpur Shekhan |               67 | Refrigerator       |  14000 |
| Jamalpur Shekhan |                9 | Almirah/cupboard   |  35000 |

***** Match homestead land with housing information. Check if value of house and land are recorded.

* Analysis of Data
** Information for Data Users

*** Using this repo

+ Please make a git branch for your work, and push it upstream when you want something merged with the master branch.
+ The master branch shows up on the surveymonitor website. Vikas merges the branches into master. If needed, notify him to do so.

*** Sample design and multiplier

+ Database Table 'ruralsurvey_sampledesign' contains the multipliers. Merge household table with ruralsurvey_sampledesign using stratum_number field, and then merge it with any other database table to get the multipliers.

*** Birdhana dhanis

+ For all analysis, Birdhana dhani sample (Village Birdhana, Stratum number 10) should be treated separately from Birdhana village. Since the two were sampled from different sample frames, with the total number of households in Dhanis not being known, we do not yet have a way of creating a population estimate. This needs to be discussed. For the moment, all estimates should be made separately for "Birdhana" and "Birdhana dhanis".

** Emerging patterns

This section will provide a compilation of tables and graphs on different aspects of social and economic conditions in the village.

*** Caste Composition

Dhanak and Chamar are the main dalit castes in Khandrai.

Cheher Kalan is a predominantly Jat village with very few households belonging to dalit and OBC castes. Jamalpur Shekhan is dominated by households belonging to dalit and OBC castes, with very few other caste Hindu households.


#+NAME: social-group-composition-code
#+BEGIN_SRC R :results value :exports results :colnames yes :hline yes
  merge(household,villages,by.x="village_id",by.y="id")->t
  merge(t,castes,by.x="caste_tribe_id",by.y="id")->t
  t[,.(Number=round(sum(multiplier))),keyby=.(village_name,if_sc_st)]->t1
  ave(t1$Number,t1$village_name,FUN=sum)->t1$Total
  round(t1$Number*100/t1$Total,1)->t1$Number
  t1[CJ(unique(village_name),unique(if_sc_st))][,as.list(Number),by=.(if_sc_st)]->t1
  t1[!(is.na(V1)&is.na(V3)&is.na(V3)&is.na(V4)&is.na(V5))]->t1
  names(t1)[c(2:ncol(t1))]<-sort(unique(t$village_name))
  factor(t1$if_sc_st,levels=c("SC","BC","Other"))->t1$if_sc_st
  levels(t1$if_sc_st)<-c("Scheduled Castes","Backward Classes","Other Castes")
  t1[order(t1$if_sc_st)]->t1
  names(t1)[1]<-c("Social group")
  t1
#+END_SRC

#+NAME: social-group-composition
#+CAPTION: Proportion of households belonging to different social groups, by village (per cent)
#+RESULTS: social-group-composition-code
| Social group     | Birdhana | Cheher Kalan | Gijji | Jamalpur Shekhan | Khandrai |
|------------------+----------+--------------+-------+------------------+----------|
| Scheduled Castes |       56 |         12.3 |  48.3 |             57.8 |     45.6 |
| Backward Classes |     31.5 |         11.8 |  29.2 |             32.4 |     10.1 |
| Other Castes     |     12.5 |         75.8 |  22.5 |              9.8 |     44.4 |

#+NAME: caste-composition-code
#+BEGIN_SRC R :results value :exports results :colnames yes :hline yes
  merge(household,villages,by.x="village_id",by.y="id")->t
  merge(t,castes,by.x="caste_tribe_id",by.y="id")->t
  t[,.(Number=round(sum(multiplier))),keyby=.(village_name,if_sc_st,caste_tribe)][CJ(unique(village_name),unique(if_sc_st),unique(caste_tribe))][,as.list(Number),by=.(if_sc_st,caste_tribe)]->t1
  t1[!(is.na(V1)&is.na(V3)&is.na(V3)&is.na(V4))]->t1
  names(t1)[c(3:ncol(t1))]<-sort(unique(t$village_name))
  names(t1)[c(1:2)]<-c("Social group","Caste")
  t1
#+END_SRC

#+NAME: caste-composition-code
#+CAPTION: Caste composition of households in the villages
#+RESULTS: caste-composition-code
| Social group | Caste              | Birdhana | Cheher Kalan | Gijji | Jamalpur Shekhan | Khandrai |
|--------------+--------------------+----------+--------------+-------+------------------+----------|
| BC           | Bairagi            |      nil | nil          | 17    | nil              | nil      |
| BC           | Bhatra sikh        |      nil | nil          | nil   | 1                | nil      |
| BC           | Chhipi             |      nil | nil          | 4     | nil              | nil      |
| BC           | Jhimar/Dhinwar     |       31 | nil          | nil   | nil              | 47       |
| BC           | Kamboj             |       68 | nil          | nil   | 37               | nil      |
| BC           | Kamboj Sikh        |      nil | nil          | nil   | 11               | nil      |
| BC           | Khati              |      nil | 30           | 8     | 18               | 9        |
| BC           | Kumhar             |       31 | 10           | 4     | nil              | 14       |
| BC           | Lodhi              |        1 | nil          | nil   | nil              | nil      |
| BC           | Lohar              |       32 | 5            | 1     | 1                | nil      |
| BC           | Mali               |       31 | nil          | nil   | nil              | nil      |
| BC           | Manihar            |      nil | nil          | 1     | nil              | nil      |
| BC           | Nai                |       62 | 25           | nil   | 55               | nil      |
| BC           | Rebari             |      254 | nil          | nil   | nil              | nil      |
| BC           | Saini              |      nil | nil          | nil   | 408              | nil      |
| BC           | Teli               |        1 | nil          | nil   | nil              | nil      |
| Other        | Baniya             |       31 | 9            | nil   | nil              | nil      |
| Other        | Bishnoi            |       68 | nil          | nil   | nil              | nil      |
| Other        | Garg               |      nil | nil          | nil   | 11               | nil      |
| Other        | Jat                |       60 | 423          | 27    | 43               | 322      |
| Other        | Jat sikh           |      nil | nil          | nil   | 54               | nil      |
| Other        | Khati              |      nil | nil          | nil   | 18               | nil      |
| Other        | Mehta/Arora/Khatri |       38 | nil          | nil   | 34               | nil      |
| Other        | Sunar              |        5 | 3            | nil   | nil              | nil      |
| SC           | Bairagi            |      nil | nil          | 3     | nil              | nil      |
| SC           | Balmiki            |      nil | nil          | 8     | 153              | 4        |
| SC           | Bawaria            |      nil | nil          | nil   | 0                | 4        |
| SC           | Bazigar            |       32 | nil          | nil   | 111              | nil      |
| SC           | Chamar             |      125 | 44           | 22    | 174              | 70       |
| SC           | Dhanak             |      109 | 29           | 24    | nil              | 256      |
| SC           | Jat                |      nil | nil          | 1     | nil              | nil      |
| SC           | Mazhabi Sikh       |        1 | nil          | nil   | nil              | nil      |
| SC           | Meena              |        1 | nil          | nil   | nil              | nil      |
| SC           | Nayak              |       32 | nil          | nil   | nil              | nil      |
| SC           | Od                 |       33 | nil          | nil   | 509              | nil      |
| SC           | Rai Sikh           |      576 | nil          | nil   | nil              | nil      |

**** TODO Social group composition to be checked with the Census numbers

*** Occupations

+ More peasants identified among men than among women. Is it because women do not participate in farming operations? Tasks in which female labour was deployed have become mechanised/chemicalised? What are the main tasks in which women continue to work? Women routinely participate in guarding of fields and in delivering food for make workers on the farm. Delivering food on the farm is a major task that involves spending an hour or two every day. Is this accounted for anywhere? We perhaps need some case studies on this.
+ More women participating in maintenance of animal resources than participating in farm operations on household operational holdings. More women participate in maintenance of animal resources than men, though participation of men is far from being negligible.
+ A rather small proportion of workers are engaged in non-agricultural manual labour. In Cheher Kalan, a higher proportion of women did non-agricultural manual labour than men. What is it? CHECK.
+ Proportion of receivers of pensions, scholarships and remittances is higher in Cheher Kalan than in other villages. What is the explanation? Out-migration from Cheher Kalan?


#+NAME: occupation-preliminary-code
#+BEGIN_SRC R :results silent :exports none
  data.table(dbReadTable(surveypg,"ruralsurvey_codeoccupationcategory"))->codeoccupation
  codeoccupation[order(id)]->codeoccupation
  factor(codeoccupation$id)->codeoccupation$id2
  levels(codeoccupation$id2)<-codeoccupation$occupation_category
  codeoccupation[,.(id,occupation_category=id2)]->codeoccupation
    data.table(dbReadTable(surveypg,"ruralsurvey_occupations_household_members"))->occupations
    merge(occupations,codeoccupation,by.x="occupation_category_id",by.y="id")->occupations
  ## household[,c(1,2,3,12,24,25,26,38)]->t
  copy(hhid)->t
  merge(occupations,t,by.x="sno_id",by.y="id")->occupations
  ## merge(occupations,castes,by.x="caste_tribe_id",by.y="id")->occupations
  ## merge(occupations,villages,by.x="village_id",by.y="id")->occupations
  member[,c(1,3,4,5,16)]->t
  merge(occupations,t,by.x=c("sno_id","name_id"),by.y=c("sno_id","id"))->occupations
  #merge(occupations,sampledesign,by.x=c("village_id","stratum_number"),by.y=c("village_id","stratum"),all.x=T)->occupations
    levels(occupations$occupation_category)[levels(occupations$occupation_category)=="Sweetmeat seller/Halwai"]<-"Self-employed, business owner"
    levels(occupations$occupation_category)[levels(occupations$occupation_category)=="Shopkeeper"]<-"Self-employed, business owner"
    levels(occupations$occupation_category)[levels(occupations$occupation_category)=="Trader/Merchant"]<-"Self-employed, business owner"
    levels(occupations$occupation_category)[levels(occupations$occupation_category)=="Caterer"]<-"Self-employed, business owner"
    levels(occupations$occupation_category)[levels(occupations$occupation_category)=="Private tutor"]<-"Self-employed, business owner"
    levels(occupations$occupation_category)[levels(occupations$occupation_category)=="Private school owner"]<-"Self-employed, business owner"
    levels(occupations$occupation_category)[levels(occupations$occupation_category)=="Coaching centre owner"]<-"Self-employed, business owner"
    levels(occupations$occupation_category)[levels(occupations$occupation_category)=="Street vendor/seller"]<-"Self-employed, business owner"
    levels(occupations$occupation_category)[levels(occupations$occupation_category)=="Milk dairy owner"]<-"Self-employed, business owner"
    levels(occupations$occupation_category)[levels(occupations$occupation_category)=="Deals in livestock"]<-"Self-employed, business owner"
    levels(occupations$occupation_category)[levels(occupations$occupation_category)=="Livestock trader"]<-"Self-employed, business owner"
    levels(occupations$occupation_category)[levels(occupations$occupation_category)=="Doctor"]<-"Self-employed, business owner"
    levels(occupations$occupation_category)[levels(occupations$occupation_category)=="Advocate/Lawyer"]<-"Self-employed, business owner"
    levels(occupations$occupation_category)[levels(occupations$occupation_category)=="Factory/business owner"]<-"Self-employed, business owner"
    levels(occupations$occupation_category)[levels(occupations$occupation_category)=="Mechanic"]<-"Self-employed, business owner"
    levels(occupations$occupation_category)[levels(occupations$occupation_category)=="Moneylender"]<-"Self-employed, business owner"
    levels(occupations$occupation_category)[levels(occupations$occupation_category)=="Retired pensioner"]<-"Recipient of pension/remittance"
    levels(occupations$occupation_category)[levels(occupations$occupation_category)=="Widow pension beneficiary"]<-"Recipient of pension/remittance"
    levels(occupations$occupation_category)[levels(occupations$occupation_category)=="Welfare pension beneficiary"]<-"Recipient of pension/remittance"
    levels(occupations$occupation_category)[levels(occupations$occupation_category)=="Barber"]<-"Caste occupations/artisans"
    levels(occupations$occupation_category)[levels(occupations$occupation_category)=="Blacksmith"]<-"Caste occupations/artisans"
    levels(occupations$occupation_category)[levels(occupations$occupation_category)=="Cobbler"]<-"Caste occupations/artisans"
    levels(occupations$occupation_category)[levels(occupations$occupation_category)=="Weaver"]<-"Caste occupations/artisans"
    levels(occupations$occupation_category)[levels(occupations$occupation_category)=="Dhobi/launderer"]<-"Caste occupations/artisans"
    levels(occupations$occupation_category)[levels(occupations$occupation_category)=="Potmaker"]<-"Caste occupations/artisans"
    levels(occupations$occupation_category)[levels(occupations$occupation_category)=="Mason"]<-"Caste occupations/artisans"
    levels(occupations$occupation_category)[levels(occupations$occupation_category)=="Artisan"]<-"Caste occupations/artisans"
    levels(occupations$occupation_category)[levels(occupations$occupation_category)=="Tailor"]<-"Caste occupations/artisans"
    levels(occupations$occupation_category)[levels(occupations$occupation_category)=="Carpenter"]<-"Caste occupations/artisans"
    levels(occupations$occupation_category)[levels(occupations$occupation_category)=="Goldsmith"]<-"Caste occupations/artisans"
    levels(occupations$occupation_category)[levels(occupations$occupation_category)=="Electrician"]<-"Caste occupations/artisans"
    levels(occupations$occupation_category)[levels(occupations$occupation_category)=="Plumber"]<-"Caste occupations/artisans"

    levels(occupations$occupation_category)[levels(occupations$occupation_category)=="Salaried government employee (other)"]<-"Salaried government employee"
    levels(occupations$occupation_category)[levels(occupations$occupation_category)=="Army service"]<-"Salaried government employee"
    levels(occupations$occupation_category)[levels(occupations$occupation_category)=="Police"]<-"Salaried government employee"
    levels(occupations$occupation_category)[levels(occupations$occupation_category)=="Village officials"]<-"Salaried government employee"
    levels(occupations$occupation_category)[levels(occupations$occupation_category)=="Teachers"]<-"Salaried government employee"
    levels(occupations$occupation_category)[levels(occupations$occupation_category)=="Salaried private office worker"]<-"Salaried private employee"
    levels(occupations$occupation_category)[levels(occupations$occupation_category)=="Salaried private worker (other)"]<-"Salaried private employee"
    levels(occupations$occupation_category)[levels(occupations$occupation_category)=="Driver"]<-"Salaried private employee"

    levels(occupations$occupation_category)[levels(occupations$occupation_category)=="Construction labour"]<-"Non-agricultural manual labour"
    levels(occupations$occupation_category)[levels(occupations$occupation_category)=="Sweeper/cleaner"]<-"Non-agricultural manual labour"
    levels(occupations$occupation_category)[levels(occupations$occupation_category)=="Casual non-agricultural labour (other)"]<-"Non-agricultural manual labour"
    levels(occupations$occupation_category)[levels(occupations$occupation_category)=="NREGA workers/Labour in other public works"]<-"Non-agricultural manual labour"
    levels(occupations$occupation_category)[levels(occupations$occupation_category)=="Domestic work"]<-"Non-agricultural manual labour"
    levels(occupations$occupation_category)[levels(occupations$occupation_category)=="Too old to work"]<-"Unable to work because of age or poor health"
    levels(occupations$occupation_category)[levels(occupations$occupation_category)=="Unable to work because of medical reasons"]<-"Unable to work because of age or poor health"
    levels(occupations$occupation_category)[levels(occupations$occupation_category)=="Child not going to school or work"]<-"Unable to work because of age or poor health"
    levels(occupations$occupation_category)[levels(occupations$occupation_category)=="Agricultural machinery operator"]<-"Agricultural labour"
    levels(occupations$occupation_category)[levels(occupations$occupation_category)=="Specialised agricultural labour"]<-"Agricultural labour"
    levels(occupations$occupation_category)[levels(occupations$occupation_category)=="Longterm agricultural worker - Siri"]<-"Agricultural labour"
    levels(occupations$occupation_category)[levels(occupations$occupation_category)=="Longterm agricultural worker - other"]<-"Agricultural labour"
    levels(occupations$occupation_category)[levels(occupations$occupation_category)=="Tenant peasant"]<-"Peasant"
    levels(occupations$occupation_category)[levels(occupations$occupation_category)=="Apprentice"]<-"Student"

  factor(occupations$occupation_category,levels=c("Landlord","Peasant","Tending animals","Agricultural labour","Non-agricultural manual labour","Salaried government employee","Salaried private employee","Self-employed, business owner","Caste occupations/artisans","Recipient of pension/remittance","Apprentice","Collection of CPRs","Unemployed","Student","Housework","Unable to work because of age or poor health","Other"))->occupations$occupation_category

#+END_SRC

#+NAME: occupation-table1-code
#+BEGIN_SRC R :results value :exports results :colnames no
  ##household[,c(1,2,3,26,38)]->t1
  copy(hhid)->t1
  merge(member,t1,by.x="sno_id",by.y="id")->t1
  ##merge(t1,villages,by.x="village_id",by.y="id")->t1
  t1[village_name=="भिरढाणा" & stratum_number==10,village_name:="भिरढाणा ढाणियाँ"]
  t1[as.numeric(age)>=15,.(population=sum(multiplier)),keyby=.(village_name,sex)]->t1
  occupations[village_name=="भिरढाणा" & stratum_number==10,village_name:="भिरढाणा ढाणियाँ"]
  occupations[as.numeric(age)>=15,.(numberofworkers=sum(multiplier)),keyby=.(village_name,sex,occupation_category)]->t
  merge(t,t1,by=c("village_name","sex")) ->t
  round(t$numberofworkers*100/t$population,1)->t$numberofworkers
  setkey(t,village_name,sex,occupation_category)
  dcast(t,occupation_category~village_name+sex,sum,value.var="numberofworkers")->t1
  names(t1)[1]<-c("विभिन्न प्रकार का काम")
  addhead(t1,occupations$village_name,factor(occupations$sex))
#+END_SRC

#+NAME: occupation
#+CAPTION: Proportion of population engaged in different occupations, persons aged 7 years and above, by sex and village (per cent)
#+RESULTS: occupation-table1-code
| भिरढाणा ढाणियाँ_M | <2colc>खंदरई |     | <2colc>गिज्जी |     | <2colc>चहर कलां |     | <2colc>जमालपुर शेखां |     | <2colc>भादस |     | <2colc>भिरढाणा |     | <2colc>भिरढाणा ढाणियाँ |     | nil                                          |  nil |  nil |  nil |  nil |  nil |  nil |  nil |  nil |  nil |  nil |  nil |  nil |  nil |
|    {{{hlmacro}}} | F           | M   | F            | M   | F              | M   | F                 | M   | F           | M   | F              | M   | F                     | M   | nil                                          |  nil |  nil |  nil |  nil |  nil |  nil |  nil |  nil |  nil |  nil |  nil |  nil |  nil |
|                0 | nil         | nil | nil          | nil | nil            | nil | nil               | nil | nil         | nil | nil            | nil | nil                   | nil | Landlord                                     |    0 |  0.1 |    0 |  3.7 |    0 |  0.4 |    0 |  0.1 |    0 |    0 |  0.2 |    0 |    0 |
|             59.6 | nil         | nil | nil          | nil | nil            | nil | nil               | nil | nil         | nil | nil            | nil | nil                   | nil | Peasant                                      | 13.6 | 28.4 | 23.7 | 47.5 | 12.5 | 32.6 |  8.9 | 16.2 | 18.6 | 26.4 | 30.7 | 34.8 | 33.3 |
|             40.4 | nil         | nil | nil          | nil | nil            | nil | nil               | nil | nil         | nil | nil            | nil | nil                   | nil | Tending animals                              | 35.8 | 26.8 | 50.3 | 33.3 | 48.1 | 22.7 | 31.5 | 16.9 | 44.5 | 28.8 | 53.5 | 47.1 |   60 |
|               17 | nil         | nil | nil          | nil | nil            | nil | nil               | nil | nil         | nil | nil            | nil | nil                   | nil | Agricultural labour                          | 15.4 | 12.9 |   13 | 23.3 | 22.6 |   16 | 25.8 | 18.2 | 12.8 |  7.8 | 25.4 | 12.6 | 13.3 |
|             14.9 | nil         | nil | nil          | nil | nil            | nil | nil               | nil | nil         | nil | nil            | nil | nil                   | nil | Non-agricultural manual labour               |  6.2 | 27.3 | 11.5 |  7.4 |  9.6 | 23.2 |   16 | 26.1 |  7.3 | 16.2 |  1.7 | 19.3 |  4.4 |
|              2.1 | nil         | nil | nil          | nil | nil            | nil | nil               | nil | nil         | nil | nil            | nil | nil                   | nil | Salaried government employee                 |  3.7 |  4.6 |  1.1 |  8.1 |  0.9 |  2.2 |  1.3 |  1.8 |  1.5 |  7.2 |  2.4 |    2 |    0 |
|              8.5 | nil         | nil | nil          | nil | nil            | nil | nil               | nil | nil         | nil | nil            | nil | nil                   | nil | Salaried private employee                    |  0.3 |  8.7 |    0 |  2.9 |    1 |   13 |    0 | 10.4 |  1.1 |   24 |  2.4 | 26.7 |    0 |
|              2.1 | nil         | nil | nil          | nil | nil            | nil | nil               | nil | nil         | nil | nil            | nil | nil                   | nil | Self-employed, business owner                |  4.9 |   16 |  0.5 |  5.6 |  0.9 |   23 |    6 | 21.7 |  1.5 | 11.7 |  0.5 | 14.6 |    0 |
|                0 | nil         | nil | nil          | nil | nil            | nil | nil               | nil | nil         | nil | nil            | nil | nil                   | nil | Caste occupations/artisans                   |  2.2 |  1.1 |    1 |  7.7 |  5.1 |  3.3 |  4.3 |  7.5 |  1.1 |  3.6 |    0 |  3.4 |    0 |
|             14.9 | nil         | nil | nil          | nil | nil            | nil | nil               | nil | nil         | nil | nil            | nil | nil                   | nil | Recipient of pension/remittance              | 15.5 | 11.4 |   19 | 28.7 | 16.6 |  8.6 | 14.5 |  9.1 | 20.1 | 15.3 |  9.8 |  4.9 |  4.4 |
|                0 | nil         | nil | nil          | nil | nil            | nil | nil               | nil | nil         | nil | nil            | nil | nil                   | nil | Unemployed                                   |  1.4 |  0.6 |    0 |  8.2 |    0 |  0.1 |    0 |  0.3 |  0.4 |  3.6 |  0.2 |  3.6 |    0 |
|             21.3 | nil         | nil | nil          | nil | nil            | nil | nil               | nil | nil         | nil | nil            | nil | nil                   | nil | Student                                      | 21.5 | 16.9 | 18.4 |    8 | 12.6 | 16.9 | 12.7 | 17.8 | 14.6 | 18.3 |  7.4 | 15.5 | 15.6 |
|              2.1 | nil         | nil | nil          | nil | nil            | nil | nil               | nil | nil         | nil | nil            | nil | nil                   | nil | Housework                                    | 77.1 |  0.7 | 51.3 |  0.6 | 74.7 |  1.8 | 54.4 |  1.2 | 87.6 |  2.7 | 90.4 |    2 | 77.8 |
|                0 | nil         | nil | nil          | nil | nil            | nil | nil               | nil | nil         | nil | nil            | nil | nil                   | nil | Unable to work because of age or poor health |  2.5 |  7.8 |  4.4 |  5.8 |  0.4 |    3 |  1.6 |  3.3 |  0.4 |  5.1 |  0.7 |  2.9 |    0 |
|                0 | nil         | nil | nil          | nil | nil            | nil | nil               | nil | nil         | nil | nil            | nil | nil                   | nil | Other                                        |    0 |    0 |    0 |    0 |    0 |    0 |    0 |    0 |    0 |    0 |    0 |    0 |    0 |
|                0 | nil         | nil | nil          | nil | nil            | nil | nil               | nil | nil         | nil | nil            | nil | nil                   | nil | nil                                          |  1.5 |  3.4 |    4 |  1.1 |  0.5 |  1.8 |  0.3 |  2.4 |  0.7 |  0.3 |    0 |  0.9 |    0 |

***** TODO Check if all women who participate in labour on household operational holding are indeed recorded as peasants.

*** Land relations


**** भूमिहीनता और जमीन के वितरण में असमानता

+ 57 प्रतिशत परिवारों के पास निजी खेती की जमीन नहीं है; NSS के आँकड़ों के हिसाब से यह सिर्फ़ 28 प्रतिशत है।
+ सबसे बड़े 20 प्रतिशत किसानों के पास 78 प्रतिशत जमीन है; NSS के आँकड़ों के हिसाब से यह 70 प्रतिशत है।
+ सबसे बड़े  20 प्रतिशत किसानों के पास जोत का 86 प्रतिशत है; NSS के आँकड़ों के हिसाब से यह 67 प्रतिशत है।


#+name: land-distribution-code
#+begin_src R :results value :exports results :colnames yes :hlines yes
  data.table(dbReadTable(surveypg,"ruralsurvey_current_ownership_holdings"))->ownland
  data.table(dbReadTable(surveypg,"ruralsurvey_land_tenancy_mortgage"))->leaseland
  ownland[,.(ownhold=sum(extent)),keyby="sno_id"]->ownland
  hhid->t
  t[ownland, `:=`(ownhold=i.ownhold)]->t
  t[is.na(ownhold),ownhold:=0]
  leaseland[!is.na(transfer_in_out)][,.(tenmort=sum(extent)),keyby=.(sno_id,transfer_in_out)][CJ(unique(sno_id),unique(transfer_in_out))][,as.list(tenmort),by=.(sno_id)]->t1
  #t1[is.na(V1),V1:=0][is.na(V2),V2:=0]
  names(t1)<-c("sno_id","leased_in","leased_out")
  merge(t,t1,by.x="id",by.y="sno_id",all.x=T)->t
  t[is.na(leased_in),leased_in:=0][is.na(leased_out),leased_out:=0]
  t[,ophold:=ownhold+leased_in-leased_out]

  t->t1
  t1[order(ownhold),owncum:=cumsum(ownhold*multiplier)/sum(ownhold*multiplier)][order(ophold),opcum:=cumsum(ophold*multiplier)/sum(ophold*multiplier)]
  t1[order(owncum),hhrank:=cumsum(multiplier)/sum(multiplier)]
  t1[hhrank<=0.2,ownq:=1][hhrank>0.2 & hhrank<=0.4,ownq:=2][hhrank>0.4 & hhrank<=0.6,ownq:=3][hhrank>0.6 & hhrank<=0.8,ownq:=4][hhrank>0.8,ownq:=5]
  t1[,.(ownshare=round((max(owncum)-min(owncum))*100)),keyby=ownq]->t2

  t1[order(opcum),hhrank:=cumsum(multiplier)/sum(multiplier)]
  t1[hhrank<=0.2,opq:=1][hhrank>0.2 & hhrank<=0.4,opq:=2][hhrank>0.4 & hhrank<=0.6,opq:=3][hhrank>0.6 & hhrank<=0.8,opq:=4][hhrank>0.8,opq:=5]
  t1[,.(opshare=round((max(opcum)-min(opcum))*100)),keyby=opq]->t3

  t2[t3]->t2

  t2$ownq<-c("सबसे कम जमीन वाले 20% परिवार","20--40%","40--60%","60--80%","सबसे ज्यादा जमीन वाले 20% परिवार")
  names(t2)<-c("वर्ग","जमीन के स्वामित्व में हिस्सा","कुल जोत में हिस्सा")
  t2
#+end_src

#+name: land-distribution
#+CAPTION: जमीन के स्वामित्व और जोत का वितरण (प्रतिशत)
#+RESULTS: land-distribution-code
|                           वर्ग | जमीन के स्वामित्व में हिस्सा | कुल जोत में हिस्सा |
|-------------------------------+------------------------+----------------|
|    सबसे कम जमीन वाले 20% परिवार |                      0 |              0 |
|                       20--40% |                      0 |              0 |
|                       40--60% |                      1 |              0 |
|                       60--80% |                     19 |             12 |
| सबसे ज्यादा जमीन वाले 20% परिवार |                     78 |             86 |


**** जमीन और जाति का सम्बन्ध

+ दलित, मुस्लिम और पिछड़ी जातियों में भूमिहीनता उच्च जाति के परिवारों के मुकाबले बहुत ज्यादा है।

#+name: land-socialgrp-code
#+begin_src R :results value :exports results :colnames yes :hlines yes
  data.table(dbReadTable(surveypg,"ruralsurvey_current_ownership_holdings"))->ownland
  ownland[,.(ownhold=sum(extent)),keyby="sno_id"]->ownland
  copy(hhid)->t
  t[ownland, `:=`(ownhold=i.ownhold)]
  t[is.na(ownhold),ownhold:=0]
  t[religion=="Muslim",if_sc_st:="Muslim"]
  t[,.(allhh=sum(multiplier)),keyby=if_sc_st]->t1
  t[ownhold==0,.(landless=sum(multiplier)),keyby=if_sc_st]->t2
  t1[t2]->t1
  t1[,landlesspc:=round(landless*100/allhh)]
  factor(t1$if_sc_st,levels=c("SC","Muslim","BC","Other"))->t1$if_sc_st
  levels(t1$if_sc_st)<-c("दलित","मुस्लिम","पिछड़ी जातियाँ","अन्य")
  t1[order(if_sc_st),c(1,4)]->t1
  names(t1)<-c("जाति","भूमिहीन परिवारों का अनुपात")
  t1
#+end_src

#+name: land-socialgrp
#+CAPTION: विभिन्न सामाजिक/जातिय समूहों में भूमिहीन परिवारों का अनुपात (प्रतिशत)
#+RESULTS: land-socialgrp-code
| जाति         | भूमिहीन परिवारों का अनुपात |
|--------------+-------------------------|
| दलित         |                      82 |
| मुस्लिम        |                      71 |
| पिछड़ी जातियाँ |                      50 |
| अन्य          |                       9 |

**** सिंचाई
+ न केवल बड़े किसानों के पास ज्यादा जमीन है, उनके पास सबसे अच्छी जमीन है।
+ उदाहरण के तौर पर, लगभग सभी गाँवों में, बड़े किसानों की जमीनों में ट्यूबवेल से सिंचित जमीन का अनुपात छोटे किसानों के मुकाबले ज्यादा है।

#+name: irrigation1-code
#+begin_src R :results value :exports results :colnames yes :hlines yes
  data.table(dbReadTable(surveypg,"ruralsurvey_current_ownership_holdings"))->ownland
  data.table(dbReadTable(surveypg,"ruralsurvey_irrigation_ownership_holdings"))->ownirr

  merge(ownland,ownirr,by=c("sno_id","parcel_number"),all.x=T)->t
  t[is.na(irrigation_src_type),irrigation_src_type:="Unirrigated"]
  unique(t[,c(1,2,6,15)])->t
  dcast(t,sno_id+parcel_number~irrigation_src_type,sum,value.var="extent")->t
  ownland[,c(10,12,4)]->t1
  merge(t,t1,by=c("sno_id","parcel_number"),all.y=T)->t2
  merge(t2,hhid,by.x="sno_id",by.y="id",all.y=T)->t2
  names(t2)[c(4,6)]<-c("pond","tubewell")
  t2[is.na(extent),extent:=0][is.na(extent),tubewell:=0]

  t2->t1
  t1[order(extent),owncum:=cumsum(extent*multiplier)/sum(extent*multiplier),village_name]
  t1[order(owncum),hhrank:=cumsum(multiplier)/sum(multiplier),village_name]
  t1[hhrank<=0.2,ownq:=1][hhrank>0.2 & hhrank<=0.4,ownq:=2][hhrank>0.4 & hhrank<=0.6,ownq:=3][hhrank>0.6 & hhrank<=0.8,ownq:=4][hhrank>0.8,ownq:=5]
  t1[,.(tubewell=sum(tubewell),extent=sum(extent)),keyby=.(village_name,ownq)]->t1
  t1[is.na(tubewell),tubewell:=0][,tubewellpc:=round(tubewell*100/extent)]

  dcast(t1,ownq~village_name,sum,value.var="tubewellpc")->t1

  t1$ownq<-c("सबसे कम जमीन वाले 20% परिवार","20--40%","40--60%","60--80%","सबसे ज्यादा जमीन वाले 20% परिवार")
  names(t1)[1]<-"वर्ग"
  t1
#+end_src

#+name: irrigation1
#+CAPTION: ट्यूबवेल से सिंचित जमीन का कुल निजी जमीन में अनुपात (प्रतिशत)
#+RESULTS: irrigation1-code
|                           वर   | खंदरई | चहर कलां | भिरढाणा | जमालपुर शेखां | गिज्जी | भादस |
|-------------------------------+------+---------+---------+------------+-------+------|
|    सबसे कम जमीन वाले 20% परिवार |  nil |       0 |     nil | nil        |   nil |  nil |
|                       20--40% |  nil |      42 |     nil | nil        |     0 |  nil |
|                       40--60% |    0 |      64 |       0 | nil        |    86 |    0 |
|                       60--80% |   74 |      78 |     100 | 0          |    88 |   43 |
| सबसे ज्यादा जमीन वाले 20% परिवार |   96 |      85 |      83 | 97         |   100 |   48 |


**** बटाई और ठेके के प्रकार

**** Burden of rent


**** [[file:land-contracts.org][Analysis of land contracts]]
*** Food security
*** Cropping pattern, Production, Input use
*** Labour Deployment
*** Employment
*** Livestock
*** Housing and Sanitation
*** Health and Education
*** Assets and Indebtedness

#+INCLUDE: assets.org

* Kill Connections                                                 :noexport:

#+NAME: kill-ssh-connections
#+BEGIN_SRC R :results silent :exports none
  dbDisconnect(surveypg)
  GrepResults<-system2("ps",c("ax | grep 'ssh -L 3333'| grep 'singdehri'"),stdout=TRUE)
  Processes<-as.numeric(sub(" .*","",GrepResults)) 
  tools::pskill(Processes)
#+END_SRC


