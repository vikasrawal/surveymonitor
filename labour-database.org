#+TITLE: Prachi's Corrections for Input Use and Labour
#+PROPERTY: header-args:R :eval never-export :session labour
#+SETUPFILE: https://fniessen.github.io/org-html-themes/setup/theme-readtheorg.setup
#+HTML_HEAD: <style>#content{max-width:1200px;} </style>
#+MCRO: hlmacro (eval (org-table-insert-hline))

#+NAME: read-data
#+BEGIN_SRC R :results value silent :exports none :session labour
  require(RPostgreSQL)
  source("sserconnect.R")
#+END_SRC


* Guidelines for data entry

+ If information on number of days men/women/children worked is given when contract was on piece rate basis- it should be entered in labour days column.

+ Check cropping pattern to verify if any fodder crop was grown. If it is grown the labour use should be entered for such crops.

+ Entry for loading, unloading and  transporting the produce to home (at least, if not market) should be made for each crop (not for fodder crop)

+ In case of fodder crops, harvesting days should be entered. Based on standard in the village.

+ If harvesting is done using combine, entry for threshing should not be there
+ If harvesting is done by hand, mandatory entry for threshing
+ If crop is destroyed, an entry should exist in the cropping pattern.
+ In case of Wheat crop, an entry for reaper should be made if the crop was cut by combine.
+ In case of threshing, an entry for threshing machine operator and an additional entry for manual labour which is hired plus family labour if they engage in agricultural work should be made for accounting the work of loading etc done during threshing.
+ NOTE that machine hours are total hours,
 not daily hours
+ If children have been reported to work in the field, necessary adjustment in labour use is to be made.
+ Add "999" in case the information is missing
+ All codes should be entered in ascending order.
+ NOTE: All inputs that are used for a particular crop should have an equivalent entry in labour use. For example an entry for applying manure must exist if manure is reported in input use. Check the same for spray, fertilisers, pesticides etc.

+ For entering data on machinery, one entry for the operator, one for the machine and one for any extra manual labour that was used should be made separately.

* Read data
#+NAME: load-libraries
#+BEGIN_SRC R :results silent :exports none
  require(RPostgreSQL)
  require(ggplot2)
  require(data.table)
  library(ggrepel)
    addhead<-function(d1,v1,v2) {
          CJ(unique(v1),unique(v2))->tabhead
           c(1:nrow(tabhead))->tabhead$rank
           ave(tabhead$rank,tbhead$V1,FUN=rank)->tabhead$rank
           ave(tabhead$rank,tabhead$V1,FUN=length)->tabhead$len
           tabhead$V1[tabhead$rank!=1]<-""
           ifelse(tabhead$V1=="","",paste("<",tabhead$len,"colc>",tabhead$V1,sep=""))->tabhead$V1
           transpose(tabhead[,c(1:2)])->tabhead
           as.data.frame(rbind(tabhead,d1,fill=TRUE))->tabhead2
           levels(tabhead2[,ncol(tabhead2)])<-c(levels(tabhead2[,ncol(tabhead2)]),names(tabhead2)[length(names(tabhead2))],"{{{hlmacro}}}")
           names(tabhead2)[length(names(tabhead2))] ->tabhead2[1,ncol(tabhead2)]
           "{{{hlmacro}}}"->tabhead2[2,ncol(tabhead2)]
           tabhead2[,c(ncol(tabhead2),1:ncol(tabhead2)-1)]->tabhead2
  #         tabhead2[2,1]<-""
          tabhead2
      }

#+END_SRC

#+NAME: read-data-code
#+BEGIN_SRC R :results silent :exports none
     dbListTables(surveypg)->t

     data.table(dbReadTable(surveypg,"ruralsurvey_household"))->household
     data.table(dbReadTable(surveypg,"ruralsurvey_sampledesign"))->sampledesign
     data.table(dbReadTable(surveypg,"ruralsurvey_member"))->member
     data.table(dbReadTable(surveypg,"ruralsurvey_codecaste"))->castes
     data.table(dbReadTable(surveypg,"ruralsurvey_codecrop"))->code_crop
   data.table(dbReadTable(surveypg,"ruralsurvey_codecropcommodity"))->sale_item
   data.table(dbReadTable(surveypg,"ruralsurvey_code_quantity_unit"))->unit
     data.table(dbReadTable(surveypg,"ruralsurvey_codevillage"))->villages
     data.table(dbReadTable(surveypg,"ruralsurvey_coderelationship"))->relationship
     data.table(dbReadTable(surveypg,"ruralsurvey_codeoccupationcategory"))->occupationcode
     data.table(dbReadTable(surveypg,"ruralsurvey_occupations_household_members"))->occupations
     data.table(dbReadTable(surveypg,"ruralsurvey_current_ownership_holdings"))->land
     data.table(dbReadTable(surveypg,"ruralsurvey_irrigation_ownership_holdings"))->irrigation
  data.table(dbReadTable(surveypg,"ruralsurvey_cropping_pattern_schedule_production_and_sales"))->crop
  data.table(dbReadTable(surveypg,"ruralsurvey_codereligion"))->religions
  data.table(dbReadTable(surveypg,"ruralsurvey_crop_sales"))->crop_sale
   data.table(dbReadTable(surveypg,"ruralsurvey_codeirrigationsource"))->code_irrigation
   data.table(dbReadTable(surveypg,"ruralsurvey_means_of_prod"))->means_prod
   data.table(dbReadTable(surveypg,"ruralsurvey_land_leased_in_fixed_rent"))->land_fixed_rent
  sampledesign[,id:=NULL]
   data.table(dbReadTable(surveypg,"ruralsurvey_input_use_for_crops_crop_number"))->input
   data.table(dbReadTable(surveypg,"ruralsurvey_input_use_for_crops"))->cropinput
   data.table(dbReadTable(surveypg,"ruralsurvey_codeinputtype"))->input_type
   data.table(dbReadTable(surveypg,"ruralsurvey_labour_days_employed_and_wage_rates_agri"))->labouruse
   data.table(dbReadTable(surveypg,"ruralsurvey_codeinputcategory"))->input_category
   data.table(dbReadTable(surveypg,"ruralsurvey_codelabourunit"))->measurement_unit
   merge(household,sampledesign,by=c("village_id","stratum_number"),all.x=T)->household
  household[household_number<9990]->household
   household[is.na(multiplier),multiplier:=1]
   merge(household,villages,by.x="village_id",by.y="id",all.x=TRUE)->household
   merge(household,castes,by.x="caste_tribe_id",by.y="id",all.x=TRUE)->household
   merge(household,religions,by.x="religion_id",by.y="id",all.x=TRUE)->household
  household[is.na(multiplier),multiplier:=1]
  household[,c(39,5,6,4,16,38,41,42)]->hhid
   setkey(hhid,id)
   hhid[village_name=="Birdhana" & stratum_number==10,village_name:="Birdhana Dhanis"]
   factor(hhid$village_name,levels=c("Khandrai","Cheher Kalan","Birdhana","Birdhana Dhanis","Jamalpur Shekhan","Gijji","Bhadas"))->hhid$village_name
   levels(hhid$village_name)<-c("खंदरई","चहर कलां","भिरढाणा","भिरढाणा ढाणियाँ","जमालपुर शेखां","गिज्जी","भादस")

     #dbDisconnect(surveypg)

#+END_SRC
* Missing input data
#+NAME: missing-data-code
#+BEGIN_SRC R :results value :exports results :colnames yes :hline yes
  household[,.(village_name,household_number,id)]->t

  merge(crop,t,by.x="sno_id",by.y="id",all.y=TRUE)->t
  t[!is.na(crop_number)]->t
  merge(t,input,by.x="id",by.y="cropping_pattern_schedule_production_and_sales_id")->t

  merge(t,cropinput,by.x="input_use_for_crops_id",by.y="id")->t
  merge(t,input_type,by.x="input_type_id",by.y="id",all.x=TRUE)->t
  merge(t,input_category,by.x="input_category_id",by.y="id",all.x=TRUE)->t
  t[is.na(source),.(village_name,household_number,serial_number,balnkfield="source",input_category,input_type)]->t1
  t[input_category=="Chemical fertiliser" & is.na(input_type),.(village_name,household_number,serial_number,balnkfield="input_type",input_category,input_type)]->t2
  rbind(t1,t2)->t3
  t3[order(village_name,household_number)]->t3
  t3
#+END_SRC

#+RESULTS: missing-data-code
| village_name | household_number | serial_number | balnkfield | input_category            | input_type         |
|--------------+------------------+---------------+------------+---------------------------+--------------------|
| Bhadas       |              207 |             1 | source     | Seed/Planting material    | nil                |
| Birdhana     |                1 |             2 | source     | Plant protection chemical | nil                |
| Khandrai     |               33 |             1 | source     | Water                     | Diesel/Electricity |
| Khandrai     |               33 |             3 | source     | Seed/Planting material    | nil                |
| Khandrai     |               33 |             4 | source     | Seed/Planting material    | nil                |
| Khandrai     |               33 |             5 | source     | Seed/Planting material    | nil                |
| Khandrai     |               44 |             1 | input_type | Chemical fertiliser       | nil                |

#+NAME: missing-data-code-2
#+BEGIN_SRC R :results value :exports results :colnames yes :hline yes
  merge(household,villages,by.x="village_id",by.y="id")->t
  t[,.(village_name,household_number,id)]->t

  merge(crop,t,by.x="sno_id",by.y="id",all.y=TRUE)->t
  t[!is.na(crop_number)]->t
  merge(t,input,by.x="id",by.y="cropping_pattern_schedule_production_and_sales_id")->t

  merge(t,cropinput,by.x="input_use_for_crops_id",by.y="id")->t
  merge(t,input_type,by.x="input_type_id",by.y="id",all.x=TRUE)->t
  merge(t,input_category,by.x="input_category_id",by.y="id",all.x=TRUE)->t
  merge(t,labouruse,by.x=c("sno_id","crop_id"),by.y=c("sno_id","crop_id"))->p

  p[is.na(crop_operation_code),.(village_name,household_number,crop_no,blankfield="crop_operation_code",crop_operation_stage)]->t1
  p[is.na(crop_operation_stage),.(village_name,household_number,crop_no,blankfield="crop_operation_stage",crop_operation_code)]->t2
  p[is.na(crop_no),.(village_name,household_number,blankfield="crop_no",crop_operation_code,"crop_operation_stage")]->t3


  p[type_of_worker=="Piece-rated workers"& measurement_unit_id==1,.(village_name,household_number,crop_no,blankfield="crop_operation_code")]->s # fixing piece rate





  rbind(t1,t2,t3,fill=TRUE)->p1


  t[is.na(source),.(village_name,household_number,serial_number,blankfield="source",input_category,input_type)]->t1


  t[input_category=="Plant protection chemical"& is.na(input_type),.(village_name,household_number,serial_number,balnkfield="input_type",input_category,input_type)]->t2
  rbind(t1,t2)->t3
  t3[order(village_name,household_number)]->t3
  t3
#+END_SRC



#+NAME: missing-data-code-3
#+BEGIN_SRC R :results value :exports results :colnames yes :hline yes
 
  household[,.(village_name,household_number,id)]->t

  merge(crop,t,by.x="sno_id",by.y="id",all.y=TRUE)->t
  t[!is.na(crop_number)]->t
  merge(t,labouruse,by.x=c("sno_id","crop_id"),by.y=c("sno_id","crop_id"))->p
  p[type_of_worker=="Piece-rated workers"& measurement_unit_id==1,.(village_name,household_number,crop_no)]->s # fixing piece rate
  s
#+END_SRC


#+CAPTION: The table has piece rate contract but measurement unit is days. 
#+RESULTS: missing-data-code-3
| village_name | household_number | crop_no |
|--------------+------------------+---------|
| Cheher Kalan |               13 |       2 |
| Khandrai     |               10 |       2 |
| Cheher Kalan |               44 |       3 |
| Birdhana     |               78 |       1 |



#+NAME: missing-data-code-5
#+BEGIN_SRC R :results value :exports results :colnames yes :hline yes
  household[,.(village_name,household_number,id)]->t

  merge(crop,t,by.x="sno_id",by.y="id",all.y=TRUE)->t1
  t1[!is.na(crop_number)]->t1
  t1[village_name=="Jamalpur Shekhan"|village_name=="Khandrai",.(village_name,household_number,crop_id)]->a

  merge(t,labouruse,by.x=c("id"),by.y=c("sno_id"))->p
  p[village_name=="Jamalpur Shekhan"|village_name=="Khandrai",.(village_name,household_number,crop_id)]->a1
  
  unique(a1)->a1
  merge(a1,code_crop,by.x="crop_id",by.y="id")->k
  merge(a,code_crop,by.x="crop_id",by.y="id")->k1
  library(dplyr)
  anti_join(k1,k)->l
  data.table(l)->l
  l[,.(crop),by=.(village_name,household_number)]->l
  l

  #anti_join(k,k1)->l1 #check hhd 12 and 48 plus crops
#+END_SRC

#+CAPTION: Entry is missing in labour use column
#+RESULTS: missing-data-code-5
| village_name     | household_number | crop                     |
|------------------+------------------+--------------------------|
| Khandrai         |                6 | Wheat                    |
| Khandrai         |                6 | Paddy                    |
| Khandrai         |                6 | Jowar fodder             |
| Khandrai         |                6 | Sugarcane (planted)      |
| Khandrai         |                6 | Barseem                  |
| Khandrai         |               21 | Wheat                    |
| Khandrai         |               21 | Paddy                    |
| Khandrai         |               21 | Sugarcane (planted)      |
| Khandrai         |               21 | Vegetables               |
| Khandrai         |               27 | Wheat                    |
| Khandrai         |               47 | Jowar fodder             |
| Khandrai         |               47 | Barseem                  |
| Khandrai         |               24 | Vegetables               |
| Khandrai         |               10 | Fallow                   |
| Khandrai         |               10 | Fallow                   |
| Khandrai         |               11 | Fallow                   |
| Khandrai         |               25 | Fallow                   |
| Khandrai         |               28 | Fallow                   |
| Khandrai         |               28 | Fallow                   |
| Khandrai         |               29 | Fallow                   |
| Khandrai         |               32 | Fallow                   |
| Khandrai         |               32 | Fallow                   |
| Jamalpur Shekhan |               16 | Fallow                   |
| Jamalpur Shekhan |               16 | Fallow                   |
| Jamalpur Shekhan |               30 | Fallow                   |
| Jamalpur Shekhan |               30 | Fallow                   |
| Jamalpur Shekhan |               49 | Fallow                   |
| Jamalpur Shekhan |               71 | Fallow                   |
| Jamalpur Shekhan |               71 | Fallow                   |
| Khandrai         |               44 | Sugarcane (first ratoon) |

#+NAME: missing-data-code-6
#+BEGIN_SRC R :results value :exports results :colnames yes :hline yes
 
  household[,.(village_name,household_number,id)]->t

  merge(crop,t,by.x="sno_id",by.y="id",all.x=TRUE)->t1
  t1[is.na(months_of_sowing),.(village_name,household_number,crop_number,blankfield="months_of_sowing")]->s
  s
#+END_SRC

#+CAPTION: Missing month of sowing
#+RESULTS: missing-data-code-6
| village_name | household_number | crop_number | blankfield       |
|--------------+------------------+-------------+------------------|
| Cheher Kalan |                8 |           6 | months_of_sowing |
| Cheher Kalan |               12 |           3 | months_of_sowing |
| Cheher Kalan |               13 |           3 | months_of_sowing |
| Cheher Kalan |               13 |           2 | months_of_sowing |
| Cheher Kalan |               13 |           4 | months_of_sowing |
| Cheher Kalan |               13 |           1 | months_of_sowing |
| Cheher Kalan |               13 |           5 | months_of_sowing |
| Cheher Kalan |               13 |           6 | months_of_sowing |
| Cheher Kalan |               13 |           7 | months_of_sowing |
| Cheher Kalan |               23 |         1.1 | months_of_sowing |
| Khandrai     |               10 |           6 | months_of_sowing |
| Khandrai     |               10 |           7 | months_of_sowing |
| Khandrai     |               11 |           4 | months_of_sowing |
| Khandrai     |               24 |           6 | months_of_sowing |
| Khandrai     |               25 |           5 | months_of_sowing |
| Khandrai     |               28 |           6 | months_of_sowing |
| Khandrai     |               28 |           7 | months_of_sowing |
| Khandrai     |               29 |           5 | months_of_sowing |
| Khandrai     |               32 |           4 | months_of_sowing |
| Khandrai     |               32 |           5 | months_of_sowing |
| Khandrai     |               35 |           4 | months_of_sowing |
| Cheher Kalan |               29 |           3 | months_of_sowing |
| Khandrai     |               44 |           1 | months_of_sowing |
| Khandrai     |               47 |           6 | months_of_sowing |
| Khandrai     |               47 |           7 | months_of_sowing |
| Khandrai     |               47 |           8 | months_of_sowing |
| Khandrai     |               47 |           5 | months_of_sowing |
| Cheher Kalan |               39 |           5 | months_of_sowing |
| Birdhana     |                1 |           7 | months_of_sowing |
| Cheher Kalan |               50 |           1 | months_of_sowing |
| Birdhana     |               13 |           6 | months_of_sowing |
| Birdhana     |               13 |           7 | months_of_sowing |
| Birdhana     |               33 |           4 | months_of_sowing |
| Birdhana     |               36 |           3 | months_of_sowing |
| Birdhana     |               36 |           4 | months_of_sowing |
| Birdhana     |               35 |           2 | months_of_sowing |
| Birdhana     |               35 |           4 | months_of_sowing |
| Birdhana     |               63 |           2 | months_of_sowing |
| Birdhana     |               63 |           4 | months_of_sowing |
| Birdhana     |               67 |           5 | months_of_sowing |
| Birdhana     |               67 |           3 | months_of_sowing |
| Birdhana     |               67 |           4 | months_of_sowing |
| Birdhana     |               57 |           6 | months_of_sowing |
| Birdhana     |               58 |           3 | months_of_sowing |
| Birdhana     |               58 |           4 | months_of_sowing |
| Birdhana     |               58 |           5 | months_of_sowing |
| Birdhana     |               58 |           1 | months_of_sowing |
| Birdhana     |               70 |           1 | months_of_sowing |
| Birdhana     |               70 |           2 | months_of_sowing |
| Birdhana     |               77 |           6 | months_of_sowing |
| Birdhana     |               77 |           3 | months_of_sowing |
| Birdhana     |               78 |           3 | months_of_sowing |
| Birdhana     |               78 |           4 | months_of_sowing |
| Birdhana     |               81 |           4 | months_of_sowing |
| Birdhana     |               81 |           7 | months_of_sowing |
| Birdhana     |               83 |           6 | months_of_sowing |
| Birdhana     |               86 |           6 | months_of_sowing |
| Birdhana     |               87 |           8 | months_of_sowing |
| Birdhana     |               88 |           2 | months_of_sowing |
| Birdhana     |               90 |           6 | months_of_sowing |
| Birdhana     |               92 |           3 | months_of_sowing |
| Birdhana     |               92 |           4 | months_of_sowing |
| Birdhana     |               93 |           2 | months_of_sowing |
| Birdhana     |               96 |           8 | months_of_sowing |
| Birdhana     |               97 |           3 | months_of_sowing |
| Birdhana     |               97 |           6 | months_of_sowing |
| Birdhana     |               97 |           7 | months_of_sowing |
| Gijji        |              154 |           4 | months_of_sowing |
| Bhadas       |               79 |           2 | months_of_sowing |




#+NAME: misc-data-4
#+BEGIN_SRC R :results value :exports results :colnames yes :hline yes
  merge(household,villages,by.x="village_id",by.y="id")->t
  t[,.(village_name,household_number,id)]->t

  merge(crop,t,by.x="sno_id",by.y="id",all.y=TRUE)->t
  t[!is.na(crop_number)]->t
  merge(t,code_crop,by.x="crop_id",by.y="id")->k
  k[crop=="Jowar" & village_name=="Gijji"]->k1

  k[crop=="Barseem" & crop_number!=1&crop_number!=2& crop_number!=3&crop_number!=4 &crop_number!=5&crop_number!=6]->k1

  k1[,.(village_name,household_number)]->k1
  k[!is.na(k$Cost)]->k
  merge(k,code_crop,by.x="crop_id",by.y="id")->k
  ggplot(k,aes(x=crop,y=Cost))->k1
  k1+geom_boxplot()






  p[is.na(crop_operation_code),.(village_name,household_number,crop_no,blankfield="crop_operation_code",crop_operation_stage)]->t1
  p[is.na(crop_operation_stage),.(village_name,household_number,crop_no,blankfield="crop_operation_stage",crop_operation_code)]->t2
  p[is.na(crop_no),.(village_name,household_number,blankfield="crop_no",crop_operation_code,"crop_operation_stage")]->t3


  p[type_of_worker=="Piece-rated workers"& measurement_unit_id==1,.(village_name,household_number,crop_no,blankfield="crop_operation_code")]->s # fixing piece rate





  rbind(t1,t2,t3,fill=TRUE)->p1


  t[is.na(source),.(village_name,household_number,serial_number,blankfield="source",input_category,input_type)]->t1


  t[input_category=="Plant protection chemical"& is.na(input_type),.(village_name,household_number,serial_number,balnkfield="input_type",input_category,input_type)]->t2
  rbind(t1,t2)->t3
  t3[order(village_name,household_number)]->t3
  t3
#+END_SRC




#+NAME: missing-data-7
#+BEGIN_SRC R :results value :exports results :colnames yes :hline yes
  merge(household,villages,by.x="village_id",by.y="id")->t
  t[,.(village_name,household_number,id)]->t

  merge(crop,t,by.x="sno_id",by.y="id",all.x=TRUE)->t
  merge(t,code_crop,by.x="crop_id",by.y="id")->k
  k[Production_main_product!=Human_consumption_main_product+Rent_main_product+wage_main_product]

  k1[,.(village_name,household_number)]->k1
  k[!is.na(k$Cost)]->k
  merge(k,code_crop,by.x="crop_id",by.y="id")->k
  ggplot(k,aes(x=crop,y=Cost))->k1
  k1+geom_boxplot()



#+END_SRC


#+NAME: missing-data-8
#+BEGIN_SRC R :results value :exports results :colnames yes :hline yes
  
  household[,.(village_name,household_number,id)]->t

  merge(crop,t,by.x="sno_id",by.y="id",all.y=TRUE)->t
  t[!is.na(crop_number)]->t
  merge(t,labouruse,by.x=c("sno_id","crop_id"),by.y=c("sno_id","crop_id"))->p
  p[type_of_worker!="Machine labour" & type_of_worker!="Piece-rated workers"]->p1
  p1[,.(sno_id,crop_id,Extent.in.acres,household_number,village_name,crop_operation_stage,crop_operation_code,type_of_worker,measurement_unit_id,work_units,daily_hours,total_payment_in_cash)]->p2
  merge(p2,measurement_unit,by.x="measurement_unit_id",by.y="id")->p2
  p2[labourunit!="Days",.(village_name,crop_id,crop_operation_code,type_of_worker,labourunit),by=household_number]
#+END_SRC

#+RESULTS: missing-data-8
| household_number | village_name | crop_id | crop_operation_code | type_of_worker   | labourunit      |
|------------------+--------------+---------+---------------------+------------------+-----------------|
|                7 | Khandrai     |       4 |                6120 | Daily labour     | Acre            |
|                7 | Cheher Kalan |       3 |                3100 | Family labour    | Irrigation pipe |
|                9 | Khandrai     |       5 |                2320 | Daily labour     | Acre            |
|                9 | Khandrai     |       6 |                2320 | Daily labour     | Acre            |
|                9 | Khandrai     |       3 |                5200 | Daily labour     | Kg              |
|               10 | Khandrai     |       7 |                6610 | Long-term labour | Acre            |
|               19 | Khandrai     |       3 |                6430 | Family labour    | Acre            |
|               19 | Khandrai     |       3 |                6610 | Family labour    | Tractor-trolley |
|               36 | Khandrai     |       3 |                6150 | Family labour    | Acre            |
|               31 | Khandrai     |       7 |                6610 | Family labour    | Tractor-trolley |
|               31 | Khandrai     |       7 |                6610 | Family labour    | Tractor-trolley |
|               31 | Khandrai     |      27 |                6610 | Family labour    | Tractor-trolley |


#+NAME: missing-data-9
#+BEGIN_SRC R :results value :exports results :colnames yes :hline yes
  merge(household,villages,by.x="village_id",by.y="id")->t
  t[,.(village_name,household_number,id)]->t

  merge(crop,t,by.x="sno_id",by.y="id",all.y=TRUE)->t
  t[!is.na(crop_number)]->t
  merge(t,labouruse,by.x=c("sno_id","crop_id"),by.y=c("sno_id","crop_id"))->p
  p[type_of_worker!="Piece-rated workers"]->p1
  p1[,.(sno_id,crop_id,Extent.in.acres,household_number,village_name,crop_operation_stage,crop_operation_code,type_of_worker,measurement_unit_id,work_units,daily_hours,total_payment_in_cash,manual_machine_or_operator)]->p2
  merge(p2,measurement_unit,by.x="measurement_unit_id",by.y="id")->p2
  p2[labourunit=="Days",.(village_name,household_number,crop_id,crop_operation_stage,crop_operation_code,type_of_worker,labourunit,daily_hours,work_units,Extent.in.acres,manual_machine_or_operator,sno_id)]->p2
  #p2[,.(diff1=length(manual_machine_or_operator=="Operator"),diff2=length(manual_machine_or_operator=="Machine"))]



  p2[work_units!=999 & daily_hours!=999,.(labour_time=sum(work_units*daily_hours)),by=,.(Extent.in.acres,crop_id,crop_operation_code,crop_operation_stage,sno_id)]->k
  k[,.(labour_time=sum(labour_time)),by=,.(sno_id,crop_id,crop_operation_stage)]->k2
  k[,.(acreage=(Extent.in.acres)),by=,.(sno_id,crop_id)]->k3
  unique(k3)->k3
  merge(k2,k3,by=c("sno_id","crop_id"))->a
  a[,.(labour_use=sum(labour_time)/sum(acreage)),by=,.(crop_id,crop_operation_stage)]->a
  merge(a,code_crop,by.x="crop_id",by.y="id")->a
  a[,.(Crop=crop,Operation=crop_operation_stage,"labour hours per acre"=round(labour_use,2))]


#+END_SRC

#+RESULTS: missing-data-9
| Crop                     | Operation                           | labour hours per acre |
|--------------------------+-------------------------------------+-----------------------|
| Cotton - Badi/Kapas      | Land preparation                    |                  6.04 |
| Cotton - Badi/Kapas      | Planting                            |                  4.07 |
| Cotton - Badi/Kapas      | Intercultural water management      |                 11.95 |
| Cotton - Badi/Kapas      | Other intercultural operations      |                 18.25 |
| Cotton - Badi/Kapas      | Weeding                             |                 59.57 |
| Coantialias tton - Badi/Kapas      | Harvest and post-harvest operations |                108.67 |
| Mustard                  | Planting                            |                   9.1 |
| Mustard                  | Harvest and post-harvest operations |                 28.12 |
| Mustard                  | Land preparation                    |                     4 |
| Mustard                  | Other intercultural operations      |                     4 |
| Mustard                  | Intercultural water management      |                    10 |
| Wheat                    | Land preparation                    |                  4.04 |
| Wheat                    | Intercultural water management      |                  7.73 |
| Wheat                    | Other intercultural operations      |                  8.94 |
| Wheat                    | Harvest and post-harvest operations |                   5.8 |
| Wheat                    | Planting                            |                  1.85 |
| Wheat                    | Weeding                             |                 61.54 |
| Paddy                    | Land preparation                    |                 15.28 |
| Paddy                    | Other intercultural operations      |                 20.58 |
| Paddy                    | Weeding                             |                  24.9 |
| Paddy                    | Intercultural water management      |                 182.2 |
| Paddy                    | Harvest and post-harvest operations |                  7.51 |
| Paddy                    | Planting                            |                 18.22 |
| Jowar fodder             | Land preparation                    |                 23.72 |
| Jowar fodder             | Planting                            |                  0.92 |
| Jowar fodder             | Intercultural water management      |                 19.22 |
| Jowar fodder             | Other intercultural operations      |                  5.16 |
| Jowar fodder             | Harvest and post-harvest operations |                261.59 |
| Sugarcane (planted)      | Land preparation                    |                  6.12 |
| Sugarcane (planted)      | Other intercultural operations      |                 27.38 |
| Sugarcane (planted)      | Intercultural water management      |                160.62 |
| Sugarcane (planted)      | Planting                            |                    40 |
| Sugarcane (planted)      | Weeding                             |                     2 |
| Barseem                  | Other intercultural operations      |                 11.24 |
| Barseem                  | Land preparation                    |                  4.76 |
| Barseem                  | Planting                            |                  2.19 |
| Barseem                  | Harvest and post-harvest operations |                392.17 |
| Barseem                  | Intercultural water management      |                 41.33 |
| Vegetables               | Land preparation                    |                   1.6 |
| Vegetables               | Other intercultural operations      |                  7.36 |
| Vegetables               | Intercultural water management      |                   6.4 |
| Vegetables               | Harvest and post-harvest operations |                   960 |
| Flower                   | Land preparation                    |                 49.33 |
| Flower                   | Intercultural water management      |                    60 |
| Flower                   | Weeding                             |                 66.67 |
| Flower                   | Planting                            |                     2 |
| Flower                   | Other intercultural operations      |                 17.33 |
| Sugarcane (first ratoon) | Other intercultural operations      |                    78 |
| Sugarcane (first ratoon) | Intercultural water management      |                   320 |




#+NAME: missing-data-10
#+BEGIN_SRC R :results value :exports results :colnames yes :hline yes
  household[villages,on=c(village_id="id")]->t
  villages[household,on=c(id="village_id")]->a1
  villages[!household,on=c(id="village_id")]->a1
  household[villages,on=c(village_id="id"),mult="first"]->a #merge and shows head
  DT[X, sum(v), by=.EACHI, on="x"]
  household[villages,.("Number of households"=length(household_number)),by=.EACHI,on=c(village_id="id")]->p

  merge(household,villages,by.x="village_id",by.y="id")->t
  t[,.(village_name,household_number,id)]->t

  merge(crop,t,by.x="sno_id",by.y="id",all.y=TRUE)->t1
  t1[!is.na(crop_number)]->t1
  t1[village_name=="Jamalpur Shekhan",.(household_number,crop_id)]->a

  merge(t,labouruse,by.x=c("id"),by.y=c("sno_id"))->p
  p[village_name=="Jamalpur Shekhan",.(household_number,crop_id)]->a1
  unique(a1)->a1
  merge(a1,code_crop,by.x="crop_id",by.y="id")->k
  merge(a,code_crop,by.x="crop_id",by.y="id")->k1
  k1[!k]->a1 #anti join



  library(dplyr)
  anti_join(k1,k)->l
  data.table(l)->l
  l[,.(crop),by=household_number]->l
  l


  merge(household,villages,by.x="village_id",by.y="id")->t
  t[,.(village_name,household_number,id)]->t

  merge(crop,t,by.x="sno_id",by.y="id",all.y=TRUE)->t
  t[!is.na(crop_number)]->t
  merge(t,labouruse,by.x=c("sno_id","crop_id"),by.y=c("sno_id","crop_id"))->p
  p[type_of_worker!="Piece-rated workers"]->p1
  p1[,.(sno_id,crop_id,Extent.in.acres,household_number,village_name,crop_operation_stage,crop_operation_code,type_of_worker,measurement_unit_id,work_units,daily_hours,total_payment_in_cash,manual_machine_or_operator)]->p2
  merge(p2,measurement_unit,by.x="measurement_unit_id",by.y="id")->p2
  p2[labourunit=="Days",.(village_name,household_number,crop_id,crop_operation_stage,crop_operation_code,type_of_worker,labourunit,daily_hours,work_units,Extent.in.acres,manual_machine_or_operator,sno_id)]->p2
  #p2[,.(diff1=length(manual_machine_or_operator=="Operator"),diff2=length(manual_machine_or_operator=="Machine"))]



  p2[work_units!=999 & daily_hours!=999,.(labour_time=sum(work_units*daily_hours)),by=,.(Extent.in.acres,crop_id,crop_operation_code,crop_operation_stage,sno_id)]->k
  k[,.(labour_time=sum(labour_time)),by=,.(sno_id,crop_id,crop_operation_stage)]->k2
  k[,.(acreage=(Extent.in.acres)),by=,.(sno_id,crop_id)]->k3
  unique(k3)->k3
  merge(k2,k3,by=c("sno_id","crop_id"))->a
  a[,.(labour_use=sum(labour_time)/sum(acreage)),by=,.(crop_id,crop_operation_stage)]->a
  merge(a,code_crop,by.x="crop_id",by.y="id")->a
  a[,.(Crop=crop,Operation=crop_operation_stage,"labour hours per acre"=round(labour_use,2))]


#+END_SRC

#+NAME: na-production
#+BEGIN_SRC R :results value :exports results :colnames yes :hline yes
  household[,.(village_name,household_number,id)]->t
  t[crop,on=c(id="sno_id")][is.na(Production_main_product)&crop_id!=12,.(village_name,household_number,crop_number)]->t1
#+END_SRC

#+CAPTION: The Production is not reported for all these crops. Khandrai, Bhirdana, Cheher Kalan to be fixed by Amit and rest 3 villages to be fixed by Pawan. 
#+RESULTS: na-production
| village_name | household_number | crop_number |
|--------------+------------------+-------------|
| Khandrai     |               34 |           3 |
| Khandrai     |               34 |           6 |
| Khandrai     |               36 |           7 |
| Khandrai     |               33 |           3 |
| Khandrai     |               33 |           5 |
| Khandrai     |               35 |           4 |
| Khandrai     |               27 |           4 |
| Khandrai     |               27 |           7 |
| Khandrai     |               35 |           2 |
| Khandrai     |               37 |           2 |
| Khandrai     |               29 |           4 |
| Khandrai     |               29 |           2 |
| Khandrai     |               37 |           3 |
| Khandrai     |               35 |           5 |
| Birdhana     |               76 |           1 |
| Birdhana     |               86 |           6 |
| Birdhana     |                4 |           2 |
| Birdhana     |                4 |           4 |
| Birdhana     |                1 |           4 |
| Birdhana     |                1 |           6 |
| Birdhana     |                1 |           7 |
| Birdhana     |                5 |           2 |
| Birdhana     |               83 |           4 |
| Birdhana     |               83 |           5 |
| Birdhana     |               78 |           3 |
| Birdhana     |               78 |           4 |
| Birdhana     |               81 |           5 |
| Birdhana     |               85 |           3 |
| Birdhana     |               85 |           5 |
| Birdhana     |               77 |           5 |
| Birdhana     |               84 |           3 |
| Birdhana     |               84 |           6 |
| Birdhana     |               88 |           2 |
| Birdhana     |               88 |           4 |
| Birdhana     |               76 |           4 |
| Birdhana     |               89 |           2 |
| Birdhana     |               90 |           3 |
| Birdhana     |               90 |           5 |
| Birdhana     |               89 |           4 |
| Gijji        |               80 |           2 |
| Birdhana     |               87 |           2 |
| Birdhana     |               87 |           7 |
| Birdhana     |               87 |           5 |
| Birdhana     |               96 |           4 |
| Gijji        |               80 |           4 |
| Birdhana     |               97 |           3 |
| Birdhana     |               97 |           6 |
| Birdhana     |               95 |           3 |
| Birdhana     |                9 |           3 |
| Birdhana     |                9 |           5 |
| Birdhana     |               17 |           2 |
| Birdhana     |               17 |           4 |
| Birdhana     |               58 |           4 |
| Birdhana     |               58 |           5 |
| Birdhana     |               27 |           7 |
| Birdhana     |               14 |           5 |
| Birdhana     |               34 |           3 |
| Birdhana     |               34 |           5 |
| Birdhana     |               36 |           3 |
| Birdhana     |               36 |           4 |
| Birdhana     |               16 |           2 |
| Birdhana     |               16 |           4 |
| Birdhana     |               35 |           2 |
| Birdhana     |               35 |           4 |
| Birdhana     |               68 |           4 |
| Birdhana     |               68 |           6 |
| Cheher Kalan |               50 |           1 |
| Cheher Kalan |               45 |         2.2 |
| Cheher Kalan |               40 |           2 |
| Cheher Kalan |               39 |           5 |
| Cheher Kalan |               43 |           3 |
| Birdhana     |               67 |           3 |
| Cheher Kalan |               29 |           5 |
| Cheher Kalan |               21 |         2.2 |
| Khandrai     |               21 |           4 |
| Khandrai     |               30 |           4 |
| Birdhana     |               63 |           2 |
| Birdhana     |               63 |           4 |
| Birdhana     |               63 |           5 |
| Birdhana     |               96 |           7 |
| Birdhana     |               95 |           4 |
| Khandrai     |                8 |           2 |
| Khandrai     |               30 |           2 |
| Khandrai     |               24 |           6 |
| Khandrai     |               25 |           3 |
| Khandrai     |               25 |           4 |
| Cheher Kalan |               39 |           4 |
| Cheher Kalan |               32 |           4 |
| Cheher Kalan |               48 |           5 |
| Khandrai     |                6 |           4 |
| Khandrai     |                6 |           5 |
| Khandrai     |               10 |           3 |
| Khandrai     |               10 |           5 |
| Gijji        |               87 |           4 |
| Khandrai     |               44 |           4 |
| Khandrai     |               47 |           6 |
| Khandrai     |               47 |           7 |
| Khandrai     |               47 |           8 |
| Gijji        |              101 |           2 |
| Gijji        |              106 |           1 |
| Gijji        |              126 |           5 |
| Gijji        |              154 |           2 |
| Gijji        |              154 |           3 |
| Gijji        |               85 |           4 |
| Bhadas       |               76 |           2 |
| Bhadas       |              194 |           1 |
| Bhadas       |              198 |           1 |
| Bhadas       |              199 |           1 |
| Bhadas       |              201 |           1 |
| Bhadas       |              207 |           1 |
| Bhadas       |              215 |           1 |
| Bhadas       |              215 |           2 |
| Birdhana     |               14 |           3 |

#+NAME: na-measurement-id
#+BEGIN_SRC R :results value :exports results :colnames yes :hline yes
  household[villages,on=c(village_id="id")][,.(village_name,household_number,id)]->t
  t[labouruse,on=c(id="sno_id")][is.na(measurement_unit_id),.(village_name,household_number,crop_id)]->t1
#+END_SRC

#+CAPTION: Measurement id is NA
#+RESULTS: na-measurement-id
| village_name     | household_number | crop_id |
|------------------+------------------+---------|
| Jamalpur Shekhan |               16 |       4 |
| Jamalpur Shekhan |               12 |      24 |
| Jamalpur Shekhan |                5 |       4 |
| Jamalpur Shekhan |                9 |       5 |
| Jamalpur Shekhan |               14 |       4 |
| Jamalpur Shekhan |                9 |       4 |
| Jamalpur Shekhan |               16 |       4 |
| Jamalpur Shekhan |               19 |       3 |
| Jamalpur Shekhan |               19 |       3 |
| Jamalpur Shekhan |               36 |       3 |
| Jamalpur Shekhan |               36 |       3 |
| Jamalpur Shekhan |               36 |       3 |
| Jamalpur Shekhan |               36 |       3 |
| Jamalpur Shekhan |               51 |       4 |
| Jamalpur Shekhan |               51 |       4 |
| Jamalpur Shekhan |               51 |       3 |
| Khandrai         |               38 |       3 |
| Birdhana         |               80 |       4 |
| Khandrai         |               33 |       3 |
| Khandrai         |               36 |       1 |
| Khandrai         |               36 |       3 |
| Khandrai         |               36 |       3 |
| Birdhana         |               16 |       1 |
| Birdhana         |               24 |       4 |
| Birdhana         |               24 |       4 |
| Birdhana         |               24 |       4 |
| Birdhana         |               24 |       4 |
| Khandrai         |               47 |      32 |
| Cheher Kalan     |               21 |       1 |
| Cheher Kalan     |               46 |       3 |
| Cheher Kalan     |               13 |       1 |
| Cheher Kalan     |               20 |       3 |
| Cheher Kalan     |               20 |       3 |
| Cheher Kalan     |               45 |       6 |
| Cheher Kalan     |               44 |       1 |
| Birdhana         |               63 |       3 |
| Birdhana         |               89 |     nil |
| Birdhana         |               36 |       4 |
| Cheher Kalan     |               49 |     nil |
| Birdhana         |                1 |     nil |


#+NAME: na-crop-operation-stage
#+BEGIN_SRC R :results value :exports results :colnames yes :hline yes
  household[villages,on=c(village_id="id")][,.(village_name,household_number,id)]->t
  t[labouruse,on=c(id="sno_id")][is.na(crop_operation_stage),.(village_name,household_number,crop_id)]->t1
#+END_SRC

#+CAPTION: Crop operation stage is NA
#+RESULTS: na-crop-operation-stage
| village_name | household_number | crop_id |
|--------------+------------------+---------|
| Birdhana     |               80 | 4       |
| Birdhana     |               16 | 1       |
| Birdhana     |               89 | nil     |
| Birdhana     |               36 | 4       |
| Cheher Kalan |               49 | nil     |
| Birdhana     |                1 | nil     |


#+NAME: na-crop-operation-code
#+BEGIN_SRC R :results value :exports results :colnames yes :hline yes
  household[villages,on=c(village_id="id")][,.(village_name,household_number,id)]->t
  t[labouruse,on=c(id="sno_id")][is.na(crop_operation_code),.(village_name,household_number,crop_id)]->t1
#+END_SRC

#+CAPTION: Crop operation code is NA
#+RESULTS: na-crop-operation-code
| village_name     | household_number | crop_id |
|------------------+------------------+---------|
| Jamalpur Shekhan |               12 |      24 |
| Jamalpur Shekhan |               12 |      24 |
| Birdhana         |               80 |       4 |
| Birdhana         |               16 |       1 |
| Cheher Kalan     |               13 |       1 |
| Cheher Kalan     |               44 |       1 |
| Birdhana         |               63 |       4 |
| Birdhana         |               63 |       4 |
| Birdhana         |               63 |       4 |
| Birdhana         |               63 |       3 |
| Birdhana         |               78 |       1 |
| Birdhana         |               89 |     nil |
| Birdhana         |               36 |       4 |
| Cheher Kalan     |               49 |     nil |
| Birdhana         |                1 |     nil |


#+NAME: na-extent-in-acres
#+BEGIN_SRC R :results value :exports results :colnames yes :hline yes
  household[villages,on=c(village_id="id")][,.(village_name,household_number,id)]->t
  t[crop,on=c(id="sno_id"),.(village_name,household_number,crop_number,Extent.in.acres)][is.na(Extent.in.acres)]
#+END_SRC

#+NAME: na-extent-in-acres-out
#+CAPTION: Pawan to fix these cases where land is reported as NA
#+RESULTS: na-extent-in-acres
| village_name | household_number | crop_number | Extent.in.acres |
|--------------+------------------+-------------+-----------------|
| Birdhana     |               96 |           8 | nil             |
| Birdhana     |               67 |           5 | nil             |
| Cheher Kalan |               43 |           3 | nil             |
| Birdhana     |               67 |           4 | nil             |
| Cheher Kalan |               23 |         1.1 | nil             |
| Khandrai     |               24 |           6 | nil             |
| Cheher Kalan |               39 |           4 | nil             |

* Boxplot

#+NAME: boxplot-labour
#+BEGIN_SRC R :results output graphics :file boxplot.png :width 1200 :height 800 
  household[villages,on=c(village_id="id")][,.(village_name,household_number,id)]->t
  merge(crop,t,by.x="sno_id",by.y="id",all.x=TRUE)->t
  merge(t,labouruse,by.x=c("sno_id","crop_id"),by.y=c("sno_id","crop_id"))->p
  p[,.(sno_id,crop_id,Extent.in.acres,household_number,village_name,crop_operation_stage,crop_operation_code,type_of_worker,measurement_unit_id,work_units,daily_hours,total_payment_in_cash,manual_machine_or_operator)]->p2
  merge(p2,measurement_unit,by.x="measurement_unit_id",by.y="id")->p2
  p2[labourunit=="Days",.(village_name,household_number,crop_id,crop_operation_stage,crop_operation_code,type_of_worker,labourunit,daily_hours,work_units,Extent.in.acres,manual_machine_or_operator,sno_id)]->p2
  #p2[,.(diff1=length(manual_machine_or_operator=="Operator"),diff2=length(manual_machine_or_operator=="Machine"))]
  p2[work_units!=999 & daily_hours!=999 & manual_machine_or_operator!="Machine",.(labour_time=sum(work_units*daily_hours)),by=,.(village_name,Extent.in.acres,crop_id,crop_operation_code,crop_operation_stage,type_of_worker,manual_machine_or_operator,sno_id)]->k
  k[,.(labour_time=sum(labour_time)),by=,.(village_name,sno_id,crop_id,crop_operation_stage)]->k2
  k[,.(acreage=(Extent.in.acres)),by=,.(village_name,sno_id,crop_id)]->k3
  unique(k3)->k3
  merge(k2,k3,by=c("village_name","sno_id","crop_id"))->a
  a[,.(labour_use=sum(labour_time)/sum(acreage)),by=,.(village_name,sno_id,crop_id,crop_operation_stage)]->a
  merge(a,code_crop,by.x="crop_id",by.y="id")->a
  a[crop=="Paddy"|crop=="Wheat"|crop=="Barseem"]->a1
  ggplot(a1,aes(x=crop_operation_stage,y=labour_use))->a1
  a1+geom_boxplot()+scale_y_continuous(limits=c(0,1000))+facet_grid(~crop)+theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5))


  labour.graph <- function(df, na.rm = TRUE, ...){

    for (i in 1:27) {plot1 <- 
                         ggplot(subset(a,as.numeric(crop_id)==1),
                                aes(x=crop_operation_stage,y=labour_use)) +geom_boxplot()+scale_y_continuous(limits=c(0,500))
                         plot1
    }


  ## }

  ## labour.graph(a)

#+END_SRC

#+RESULTS: boxplot-labour
[[file:boxplot.png]]

#+NAME: Piece-rated
#+BEGIN_SRC R :results output graphics :file boxplot.png :width 1200 :height 800 
   household[villages,on=c(village_id="id")][,.(village_name,household_number,id)]->t
   merge(crop,t,by.x="sno_id",by.y="id",all.x=TRUE)->t
   merge(t,labouruse,by=c("sno_id","crop_id"))->p
  merge(p,measurement_unit,by.x="measurement_unit_id",by.y="id")->p2
  merge(p2,code_crop,by.x="crop_id",by.y="id")->a
  a[village_name!="Khandrai"]->a
  a[labourunit=="Days" & work_units==999,.(entries_blank=length(unique(sno_id))),by=.(crop,crop_operation_stage,crop_operation_code)]->m
  a[labourunit=="Days" & work_units!=999,.(entries_filled=length(unique(sno_id))),by=.(crop,crop_operation_stage,crop_operation_code)]->m1
  merge(m,m1,by=c("crop","crop_operation_stage","crop_operation_code"),all.x=TRUE)->j
  j[entries_filled>9]->j1
  p2[labourunit=="Days",.(village_name,household_number,crop_id,crop_operation_stage,crop_operation_code,type_of_worker,labourunit,daily_hours,work_units,Extent.in.acres,manual_machine_or_operator,sno_id)]->p2
    p2[work_units!=999 & daily_hours!=999 & manual_machine_or_operator!="Machine",.(labour_time=sum(work_units*daily_hours)),by=,.(village_name,Extent.in.acres,crop_id,crop_operation_code,crop_operation_stage,type_of_worker,manual_machine_or_operator,sno_id)]->k
    k[,.(labour_time=sum(labour_time)),by=,.(village_name,sno_id,crop_id,crop_operation_stage,crop_operation_code)]->k2
    k[,.(acreage=(Extent.in.acres)),by=,.(village_name,sno_id,crop_id)]->k3
    unique(k3)->k3
    merge(k2,k3,by=c("village_name","sno_id","crop_id"))->a
  a[,.(labour_use=sum(labour_time)/sum(acreage)),by=,.(village_name,sno_id,crop_id,crop_operation_stage,crop_operation_code)]->a
  subset(a,village_name!="Khandrai")->a
  merge(a,code_crop,by.x="crop_id",by.y="id")->a
  merge(j1,a,by=c("crop","crop_operation_stage","crop_operation_code"),all.x=TRUE)->l


  l[crop=="Cotton - Badi/Kapas"|crop=="Jowar"]->a1
  ggplot(a1,aes(x=factor(crop_operation_code),y=labour_use,group=crop_operation_code))->a1
  a1+geom_boxplot()+scale_y_continuous(limits=c(0,100))+facet_grid(~crop)+theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5))

























   p2[type_of_worker=="Piece-rated workers"&labourunit=="Acre",.(per_acre_cost=total_payment_in_cash/work_units,sno_id,crop_id,Extent.in.acres,household_number,village_name,crop_operation_stage,crop_operation_code,type_of_worker,measurement_unit_id,work_units,daily_hours,total_payment_in_cash,manual_machine_or_operator)]->p2


   merge(p2,code_crop,by.x="crop_id",by.y="id")->a
   a[crop=="Paddy"|crop=="Wheat"|crop=="Barseem"]->a1
   a1[,.(entries=length(unique(sno_id))),by=.(crop,crop_operation_stage)]->k
   ggplot(a1,aes(x=crop_operation_stage,y=per_acre_cost))->a1
   a1+geom_boxplot()+scale_y_continuous(limits=c(0,5000))+facet_grid(~crop)+theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5))


  household[villages,on=c(village_id="id")][,.(village_name,household_number,id)]->t
   merge(crop,t,by.x="sno_id",by.y="id",all.x=TRUE)->t
   merge(t,labouruse,by.x=c("sno_id","crop_id"),by.y=c("sno_id","crop_id"))->p
   p[,.(sno_id,crop_id,Extent.in.acres,household_number,village_name,crop_operation_stage,crop_operation_code,type_of_worker,measurement_unit_id,work_units,daily_hours,total_payment_in_cash,manual_machine_or_operator,machine_hours)]->p2
   merge(p2,measurement_unit,by.x="measurement_unit_id",by.y="id")->p2
   p2[type_of_worker=="Machine labour",.(village_name,household_number,crop_id,crop_operation_stage,crop_operation_code,type_of_worker,labourunit,daily_hours,work_units,Extent.in.acres,manual_machine_or_operator,sno_id,machine_hours,total_payment_in_cash)]->p2
   #p2[,.(diff1=length(manual_machine_or_operator=="Operator"),diff2=length(manual_machine_or_operator=="Machine"))]
  p2[work_units!=999 & machine_hours!=999 & manual_machine_or_operator=="Machine" ,.(labour_time=sum(work_units*machine_hours)),by=,.(village_name,Extent.in.acres,crop_id,crop_operation_code,crop_operation_stage,type_of_worker,manual_machine_or_operator,sno_id)]->k
   k[,.(labour_time=sum(labour_time)),by=,.(village_name,sno_id,crop_id,crop_operation_stage)]->k2
   k[,.(acreage=(Extent.in.acres)),by=,.(village_name,sno_id,crop_id)]->k3
   unique(k3)->k3
   merge(k2,k3,by=c("village_name","sno_id","crop_id"))->a
   a[,.(machine_labour_use=sum(labour_time)/sum(acreage)),by=,.(village_name,sno_id,crop_id,crop_operation_stage)]->a
   merge(a,code_crop,by.x="crop_id",by.y="id")->a
   a[crop=="Paddy"|crop=="Wheat"|crop=="Barseem"]->a1
   ggplot(a1,aes(x=crop_operation_stage,y=machine_labour_use))->a1
   a1+geom_boxplot()+scale_y_continuous(limits=c(0,300))+facet_grid(~crop)+theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5))





#+END_SRC

#+RESULTS: na-crop-operation-sta
[[file:boxplot.png]]



* Other entries

#+NAME: na-sale-unit-id
#+BEGIN_SRC R :results value :exports results :colnames yes :hline yes
  household[villages,on=c(village_id="id")][,.(village_name,household_number,id)][crop,on=c(id="sno_id")][crop_sale,on=c(id="crop_number_id")]->a



  merge(t,crop_sale,by.x=c("sno_id","crop_id"),by.y=c("sno_id","crop_number_id"),all.y=TRUE)->t
  t[crop_sale,on=c(sno_id="id",crop_number_id="crop_id")]->a
  t[crop_sale,on=c("sno_id"=id,"crop_number_id"=crop_id)]->a
  t[crop_sale,on=c(id="sno_id",crop_id="crop_number_id")]->a




  t[is.na(sale_unit_id),.(village_name,household_number,crop_id,sale_number)]->a
#+END_SRC

#+NAME: na-sale-unit-id
#+BEGIN_SRC R :results value :exports results :colnames yes :hline yes
  household[villages,on=c(village_id="id")][,.(village_name,household_number,id)]->t
  merge(crop,t,by.x="sno_id",by.y="id",all.x=TRUE)->t
  merge(t,crop_sale,by.x=c("sno_id","crop_id"),by.y=c("sno_id","crop_number_id"),all.x=TRUE)->t

  t[is.na(sale_unit_id),.(village_name,household_number,crop_id,sale_number)]->a
#+END_SRC
#+NAME: Piece-rated
#+BEGIN_SRC R :results output graphics :file boxplot.png :width 1200 :height 800 
  household[villages,on=c(village_id="id")][,.(village_name,household_number,id)]->t
  merge(crop,t,by.x="sno_id",by.y="id",all.x=TRUE)->t
  merge(t,crop_sale,by.x=c("sno_id","crop_id"),by.y=c("sno_id","crop_number_id"),all.x=TRUE)->t
  crop_sale[,.(crop_number_id,sale_number,Price_main_product,Sale_main_product,sale_commodity_id,sale_unit_id,sno_id)]->m




  m[,.(sum(Sale_main_product)),by=.(sno_id,crop_number_id,sale_unit_id)]->m1




  merge(t,labouruse,by=c("sno_id","crop_id"))->p
  merge(p,measurement_unit,by.x="measurement_unit_id",by.y="id")->p2
  merge(p2,code_crop,by.x="crop_id",by.y="id")->a
  a[village_name!="Khandrai"]->a
  a[labourunit=="Days" & work_units==999,.(entries_blank=length(unique(sno_id))),by=.(crop,crop_operation_stage,crop_operation_code)]->m
  a[labourunit=="Days" & work_units!=999,.(entries_filled=length(unique(sno_id))),by=.(crop,crop_operation_stage,crop_operation_code)]->m1
  merge(m,m1,by=c("crop","crop_operation_stage","crop_operation_code"),all.x=TRUE)->j
  j[entries_filled>9]->j1
  p2[labourunit=="Days",.(village_name,household_number,crop_id,crop_operation_stage,crop_operation_code,type_of_worker,labourunit,daily_hours,work_units,Extent.in.acres,manual_machine_or_operator,sno_id)]->p2
    p2[work_units!=999 & daily_hours!=999 & manual_machine_or_operator!="Machine",.(labour_time=sum(work_units*daily_hours)),by=,.(village_name,Extent.in.acres,crop_id,crop_operation_code,crop_operation_stage,type_of_worker,manual_machine_or_operator,sno_id)]->k
    k[,.(labour_time=sum(labour_time)),by=,.(village_name,sno_id,crop_id,crop_operation_stage,crop_operation_code)]->k2
    k[,.(acreage=(Extent.in.acres)),by=,.(village_name,sno_id,crop_id)]->k3
    unique(k3)->k3
    merge(k2,k3,by=c("village_name","sno_id","crop_id"))->a
  a[,.(labour_use=sum(labour_time)/sum(acreage)),by=,.(village_name,sno_id,crop_id,crop_operation_stage,crop_operation_code)]->a
  subset(a,village_name!="Khandrai")->a
  merge(a,code_crop,by.x="crop_id",by.y="id")->a
  merge(j1,a,by=c("crop","crop_operation_stage","crop_operation_code"),all.x=TRUE)->l


  l[crop=="Cotton - Badi/Kapas"|crop=="Jowar"]->a1
  ggplot(a1,aes(x=factor(crop_operation_code),y=labour_use,group=crop_operation_code))->a1
  a1+geom_boxplot()+scale_y_continuous(limits=c(0,100))+facet_grid(~crop)+theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5))

























   p2[type_of_worker=="Piece-rated workers"&labourunit=="Acre",.(per_acre_cost=total_payment_in_cash/work_units,sno_id,crop_id,Extent.in.acres,household_number,village_name,crop_operation_stage,crop_operation_code,type_of_worker,measurement_unit_id,work_units,daily_hours,total_payment_in_cash,manual_machine_or_operator)]->p2


   merge(p2,code_crop,by.x="crop_id",by.y="id")->a
   a[crop=="Paddy"|crop=="Wheat"|crop=="Barseem"]->a1
   a1[,.(entries=length(unique(sno_id))),by=.(crop,crop_operation_stage)]->k
   ggplot(a1,aes(x=crop_operation_stage,y=per_acre_cost))->a1
   a1+geom_boxplot()+scale_y_continuous(limits=c(0,5000))+facet_grid(~crop)+theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5))


  household[villages,on=c(village_id="id")][,.(village_name,household_number,id)]->t
   merge(crop,t,by.x="sno_id",by.y="id",all.x=TRUE)->t
   merge(t,labouruse,by.x=c("sno_id","crop_id"),by.y=c("sno_id","crop_id"))->p
   p[,.(sno_id,crop_id,Extent.in.acres,household_number,village_name,crop_operation_stage,crop_operation_code,type_of_worker,measurement_unit_id,work_units,daily_hours,total_payment_in_cash,manual_machine_or_operator,machine_hours)]->p2
   merge(p2,measurement_unit,by.x="measurement_unit_id",by.y="id")->p2
   p2[type_of_worker=="Machine labour",.(village_name,household_number,crop_id,crop_operation_stage,crop_operation_code,type_of_worker,labourunit,daily_hours,work_units,Extent.in.acres,manual_machine_or_operator,sno_id,machine_hours,total_payment_in_cash)]->p2
   #p2[,.(diff1=length(manual_machine_or_operator=="Operator"),diff2=length(manual_machine_or_operator=="Machine"))]
  p2[work_units!=999 & machine_hours!=999 & manual_machine_or_operator=="Machine" ,.(labour_time=sum(work_units*machine_hours)),by=,.(village_name,Extent.in.acres,crop_id,crop_operation_code,crop_operation_stage,type_of_worker,manual_machine_or_operator,sno_id)]->k
   k[,.(labour_time=sum(labour_time)),by=,.(village_name,sno_id,crop_id,crop_operation_stage)]->k2
   k[,.(acreage=(Extent.in.acres)),by=,.(village_name,sno_id,crop_id)]->k3
   unique(k3)->k3
   merge(k2,k3,by=c("village_name","sno_id","crop_id"))->a
   a[,.(machine_labour_use=sum(labour_time)/sum(acreage)),by=,.(village_name,sno_id,crop_id,crop_operation_stage)]->a
   merge(a,code_crop,by.x="crop_id",by.y="id")->a
   a[crop=="Paddy"|crop=="Wheat"|crop=="Barseem"]->a1
   ggplot(a1,aes(x=crop_operation_stage,y=machine_labour_use))->a1
   a1+geom_boxplot()+scale_y_continuous(limits=c(0,300))+facet_grid(~crop)+theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5))





#+END_SRC




* Basic Tables                                                     :noexport:
#+NAME: number_of_households
#+BEGIN_SRC R :results value :exports results :colnames yes :hline yes
  household[villages, .(Village=village_name,"Number of households"=length(household_number)),by=.EACHI,on=c(village_id="id")][,village_id :=NULL]
#+END_SRC

#+NAME: number_of_households
#+BEGIN_SRC R :results value :exports results :colnames yes :hline yes
  household[villages,on=c(village_id="id")][castes,on=c(caste_tribe_id="id")]->household


#+END_SRC

#+NAME: hhd_no_out
#+CAPTION: Number of households, survey data, 2018-19
#+RESULTS: number_of_households




* Householdwise table

#+NAME: number_of_households_table
#+BEGIN_SRC R :results value :exports results :colnames yes :hline yes
    ## #+ Prices adjustment
    crop_sale[crop,on=c(crop_number_id="id")][code_crop,on=c(crop_id="id")][household,on=c(sno_id="id")][villages,on=c(village_id="id")][!is.na(Price_main_product)&!is.na(sale_unit_id),.(Price_main_product,sale_unit_id),by=.(village_name,crop)]->k
    k[sale_unit_id==10,.(median_price=median(Price_main_product)),by=.(village_name,crop,sale_unit_id)]->prices_main

    # Matrix
    household[villages,on=c(village_id="id")][crop,on=c(id="sno_id")][code_crop,on=c(crop_id="id")][,.(area=Extent.in.acres,main=Production_main_product,by=Production_by_product,unit_main=main_unit_id,unit_by=by_unit_id),by=.(village_name,household_number,crop_number,crop)][,total:=main+by]->p
    prices_main[p,on=c(village_name="village_name",crop="crop")]->p


  t
    ifelse(p$unit_main==1,p$main/100,p$main)->p$main_qtl
    ifelse(p$crop=="Barseem" & p$unit_main==3,main=main_qtl*20,ifelse(p$crop=="Barseem" & p$unit_main==4,main=main_qtl*7,ifelse(p$crop=="Barseem" & p$unit_main==5,main=main_qtl*0.4,ifelse(p$crop=="Jowar fodder" & unit_main==3, main=main_qtl*20,ifelse(p$crop=="Jowar fodder" & p$unit_main==5,main=main_qtl*0.2)))))

    ifelse(p$crop=="Wheat"& p$unit_by==3,by_product=by*20,ifelse(p$crop=="Bajra" & p$unit_by==5,by_product=by*0.05,ifelse(p$crop=="Bajra" & p$unit_by==3,by_product=by*10)
    ifelse(p$crop=="Jowar fodder" & p$unit_by==5,by_product=by*0.2)
    ifelse(p$crop=="Cotton - Badi/Kapas",by_product=10*area,p$crop=="Mustard",by_product=10*area,by_product)
    ifelse(p$crop=="Paddy" & unit_by==3,by_product==20*by,p$crop=="Paddy" & unit_by==4,by_product=7*by,by)->p$by_product


    #p[unit_main!=10 &unit_main!=1|unit_by!=10 &unit_by!=1,.(unit_main,unit_by),by=crop]->j

    ifelse(p$crop=="Maize",1000,p$median_price)->p$median_price
    ifelse(p$crop=="Tur/Arhar (Dal)",4000,p$median_price)->p$median_price


     ## crop_sale[crop,on=c(crop_number_id="id")][code_crop,on=c(crop_id="id")][sale_item,on=c(sale_commodity_id="id")][household,on=c(sno_id="id")][villages,on=c(village_id="id")][!is.na(Price_main_product)&!is.na(sale_unit_id)&crop_commodity=="Hay/Straw",.(Price_main_product,sale_unit_id),by=.(village_name,crop)]
    ## ## crop_sale[crop,on=c(crop_number_id="id"),mult="all"]->b




    ## merge(household,villages,by.x="village_id",by.y="id")->t
    ## t[,.(village_name,household_number,id,caste_tribe_id)]->t
    ## merge(crop,t,by.x="sno_id",by.y="id",all.y=TRUE)->t
    ## merge(t,input,by.x="id",by.y="cropping_pattern_schedule_production_and_sales_id")->t

    ## merge(t,cropinput,by.x="input_use_for_crops_id",by.y="id")->t
    ## merge(t,input_type,by.x="input_type_id",by.y="id",all.x=TRUE)->t
    ## merge(t,input_category,by.x="input_category_id",by.y="id",all.x=TRUE)->t
#+END_SRC



* Amit's tables
#+NAME: number_of_schedules_labour
#+BEGIN_SRC R :results value :exports results :colnames yes :hline yes
  merge(villages,household,by.x="id",by.y="village_id",all.y=TRUE)->t
  t[,.(village_name,household_number,id.y)]->t
  merge(t,occupations,by.x="id.y",by.y="sno_id",all.y=TRUE)->t
  t[occupation_category_id==5|occupation_category_id==6|occupation_category_id==7|occupation_category_id==44|occupation_category_id==45,.(village_name,household_number)]->y
  y[village_name=="Bhadas"]->y1
unique(y1)

#+END_SRC

#+RESULTS: number_of_schedules_labour
| village_name | household_number |
|--------------+------------------|
| Bhadas       |                1 |
| Bhadas       |                4 |
| Bhadas       |               24 |
| Bhadas       |               25 |
| Bhadas       |               35 |
| Bhadas       |               37 |
| Bhadas       |               41 |
| Bhadas       |               42 |
| Bhadas       |               44 |
| Bhadas       |               54 |
| Bhadas       |               60 |
| Bhadas       |               63 |
| Bhadas       |               64 |
| Bhadas       |               65 |
| Bhadas       |               66 |
| Bhadas       |               67 |
| Bhadas       |               75 |
| Bhadas       |               81 |
| Bhadas       |               95 |
| Bhadas       |               96 |
| Bhadas       |               98 |
| Bhadas       |               99 |
| Bhadas       |              100 |
| Bhadas       |              103 |
| Bhadas       |              105 |
| Bhadas       |              106 |
| Bhadas       |              107 |
| Bhadas       |              109 |
| Bhadas       |              112 |
| Bhadas       |              115 |
| Bhadas       |              116 |
| Bhadas       |              118 |
| Bhadas       |              119 |
| Bhadas       |              124 |
| Bhadas       |              126 |
| Bhadas       |              132 |
| Bhadas       |              134 |
| Bhadas       |              140 |
| Bhadas       |              142 |
| Bhadas       |              143 |
| Bhadas       |              145 |
| Bhadas       |              149 |
| Bhadas       |              150 |
| Bhadas       |              151 |
| Bhadas       |              153 |
| Bhadas       |              155 |
| Bhadas       |              156 |
| Bhadas       |              158 |
| Bhadas       |              161 |
| Bhadas       |              163 |
| Bhadas       |              164 |
| Bhadas       |              165 |
| Bhadas       |              166 |
| Bhadas       |              174 |
| Bhadas       |              176 |
| Bhadas       |              177 |
| Bhadas       |              178 |
| Bhadas       |              181 |
| Bhadas       |              182 |
| Bhadas       |              183 |
| Bhadas       |              190 |
| Bhadas       |              196 |
| Bhadas       |              202 |
| Bhadas       |              203 |
| Bhadas       |              204 |
| Bhadas       |              215 |
| Bhadas       |              220 |
| Bhadas       |              222 |
| Bhadas       |              225 |
* Unit correction
#+NAME: number_of_households_table1
#+BEGIN_SRC R :results value :exports results :colnames yes :hline yes

  household[villages,on=c(village_id="id")][crop,on=c(id="sno_id")][code_crop,on=c(crop_id="id")][,.(main=Production_main_product,by=Production_by_product,unit_main=main_unit_id,unit_by=by_unit_id),by=.(village_name,household_number,crop)][,total:=main+by]->p
   p[is.na(unit_main)&crop!="Fallow"]->p
p[order(village_name,household_number)]

#+END_SRC

#+RESULTS: number_of_households_table1
| village_name | household_number | crop                | main | by  | unit_main | unit_by | total |
|--------------+------------------+---------------------+------+-----+-----------+---------+-------|
| Bhadas       |               56 | Bajra               | 0    | 0   | nil       | nil     | 0     |
| Bhadas       |               76 | Wheat               | nil  | nil | nil       | nil     | nil   |
| Bhadas       |              194 | Jowar fodder        | nil  | nil | nil       | nil     | nil   |
| Bhadas       |              198 | Jowar fodder        | nil  | nil | nil       | nil     | nil   |
| Bhadas       |              199 | Jowar fodder        | nil  | nil | nil       | nil     | nil   |
| Bhadas       |              201 | Jowar fodder        | nil  | nil | nil       | nil     | nil   |
| Bhadas       |              207 | Jowar fodder        | nil  | nil | nil       | nil     | nil   |
| Bhadas       |              215 | Bajra               | nil  | nil | nil       | nil     | nil   |
| Bhadas       |              215 | Jowar fodder        | nil  | nil | nil       | nil     | nil   |
| Birdhana     |                1 | Wheat               | 130  | nil | nil       | nil     | nil   |
| Birdhana     |                1 | Paddy               | 255  | nil | nil       | nil     | nil   |
| Birdhana     |                1 | Barseem             | nil  | nil | nil       | nil     | nil   |
| Birdhana     |                1 | Vegetables          | nil  | nil | nil       | nil     | nil   |
| Birdhana     |                1 | Jowar fodder        | nil  | nil | nil       | nil     | nil   |
| Birdhana     |                5 | Barseem             | 25   | nil | nil       | nil     | nil   |
| Birdhana     |                5 | Jowar fodder        | nil  | nil | nil       | nil     | nil   |
| Birdhana     |               14 | Wheat               | 130  | 130 | nil       | nil     | 260   |
| Birdhana     |               14 | Barseem             | nil  | nil | nil       | nil     | nil   |
| Birdhana     |               16 | Wheat               | 36   | 36  | nil       | nil     | 72    |
| Birdhana     |               16 | Barseem             | nil  | nil | nil       | nil     | nil   |
| Birdhana     |               16 | Jowar fodder        | nil  | nil | nil       | nil     | nil   |
| Birdhana     |               17 | Barseem             | nil  | nil | nil       | nil     | nil   |
| Birdhana     |               17 | Jowar fodder        | nil  | nil | nil       | nil     | nil   |
| Birdhana     |               27 | Mustard             | nil  | nil | nil       | nil     | nil   |
| Birdhana     |               34 | Barseem             | nil  | nil | nil       | nil     | nil   |
| Birdhana     |               34 | Jowar fodder        | nil  | nil | nil       | nil     | nil   |
| Birdhana     |               35 | Barseem             | nil  | nil | nil       | nil     | nil   |
| Birdhana     |               35 | Jowar fodder        | nil  | nil | nil       | nil     | nil   |
| Birdhana     |               58 | Wheat               | 260  | nil | nil       | nil     | nil   |
| Birdhana     |               58 | Barseem             | nil  | nil | nil       | nil     | nil   |
| Birdhana     |               58 | Jowar fodder        | nil  | nil | nil       | nil     | nil   |
| Birdhana     |               63 | Barseem             | nil  | nil | nil       | nil     | nil   |
| Birdhana     |               63 | Jowar fodder        | nil  | nil | nil       | nil     | nil   |
| Birdhana     |               67 | Eucalyptus          | nil  | nil | nil       | nil     | nil   |
| Birdhana     |               68 | Barseem             | 100  | nil | nil       | nil     | nil   |
| Birdhana     |               77 | Barseem             | nil  | nil | nil       | nil     | nil   |
| Birdhana     |               78 | Barseem             | nil  | nil | nil       | nil     | nil   |
| Birdhana     |               78 | Jowar fodder        | nil  | nil | nil       | nil     | nil   |
| Birdhana     |               81 | Moong               | nil  | nil | nil       | nil     | nil   |
| Birdhana     |               84 | Cotton - Badi/Kapas | 24   | nil | nil       | nil     | nil   |
| Birdhana     |               84 | Wheat               | 420  | 252 | nil       | nil     | 672   |
| Birdhana     |               84 | Barseem             | nil  | nil | nil       | nil     | nil   |
| Birdhana     |               84 | Jowar fodder        | nil  | nil | nil       | nil     | nil   |
| Birdhana     |               85 | Barseem             | nil  | nil | nil       | nil     | nil   |
| Birdhana     |               85 | Jowar fodder        | nil  | nil | nil       | nil     | nil   |
| Birdhana     |               87 | Chana               | nil  | nil | nil       | nil     | nil   |
| Birdhana     |               88 | Wheat               | 210  | 250 | nil       | nil     | 460   |
| Birdhana     |               88 | Barseem             | nil  | nil | nil       | nil     | nil   |
| Birdhana     |               88 | Jowar fodder        | nil  | nil | nil       | nil     | nil   |
| Birdhana     |               89 | Barseem             | nil  | nil | nil       | nil     | nil   |
| Birdhana     |               89 | Jowar fodder        | nil  | nil | nil       | nil     | nil   |
| Birdhana     |               95 | Barseem             | nil  | nil | nil       | nil     | nil   |
| Birdhana     |               95 | Jowar fodder        | nil  | nil | nil       | nil     | nil   |
| Birdhana     |               96 | Wheat               | 344  | 216 | nil       | nil     | 560   |
| Birdhana     |               96 | Barseem             | nil  | nil | nil       | nil     | nil   |
| Birdhana     |               96 | Jowar fodder        | nil  | nil | nil       | nil     | nil   |
| Birdhana     |               97 | Barseem             | nil  | nil | nil       | nil     | nil   |
| Birdhana     |               97 | Jowar fodder        | nil  | nil | nil       | nil     | nil   |
| Cheher Kalan |               21 | Wheat               | 28   | 28  | nil       | nil     | 56    |
| Cheher Kalan |               21 | Jayee               | nil  | nil | nil       | nil     | nil   |
| Cheher Kalan |               23 | Wheat               | 32   | 32  | nil       | nil     | 64    |
| Cheher Kalan |               29 | Mustard             | nil  | nil | nil       | nil     | nil   |
| Cheher Kalan |               29 | Wheat               | 30   | 30  | nil       | nil     | 60    |
| Cheher Kalan |               39 | Jowar fodder        | nil  | nil | nil       | nil     | nil   |
| Cheher Kalan |               40 | Jowar fodder        | nil  | nil | nil       | nil     | nil   |
| Cheher Kalan |               43 | Jowar fodder        | nil  | nil | nil       | nil     | nil   |
| Cheher Kalan |               45 | Jayee               | nil  | nil | nil       | nil     | nil   |
| Cheher Kalan |               48 | Jowar fodder        | nil  | nil | nil       | nil     | nil   |
| Cheher Kalan |               50 | Bajra               | nil  | nil | nil       | nil     | nil   |
| Gijji        |               80 | Barseem             | nil  | nil | nil       | nil     | nil   |
| Gijji        |               80 | Jowar fodder        | nil  | nil | nil       | nil     | nil   |
| Gijji        |               85 | Jowar fodder        | nil  | nil | nil       | nil     | nil   |
| Gijji        |               87 | Bajra               | nil  | nil | nil       | nil     | nil   |
| Gijji        |               99 | Bajra               | 0    | 0   | nil       | nil     | 0     |
| Gijji        |              101 | Jowar fodder        | nil  | nil | nil       | nil     | nil   |
| Gijji        |              106 | Wheat               | nil  | nil | nil       | nil     | nil   |
| Gijji        |              126 | Jowar fodder        | nil  | nil | nil       | nil     | nil   |
| Gijji        |              149 | Jantar              | 0    | 0   | nil       | nil     | 0     |
| Gijji        |              154 | Barseem             | nil  | nil | nil       | nil     | nil   |
| Gijji        |              154 | Jowar fodder        | nil  | nil | nil       | nil     | nil   |
| Khandrai     |               21 | Vegetables          | nil  | nil | nil       | nil     | nil   |
| Khandrai     |               24 | Vegetables          | nil  | nil | nil       | nil     | nil   |
| Khandrai     |               27 | Barseem             | nil  | nil | nil       | nil     | nil   |
| Khandrai     |               27 | Jowar fodder        | nil  | nil | nil       | nil     | nil   |
| Khandrai     |               30 | Barseem             | nil  | nil | nil       | nil     | nil   |
| Khandrai     |               33 | Paddy               | 60   | 16  | nil       | nil     | 76    |
| Khandrai     |               33 | Barseem             | nil  | nil | nil       | nil     | nil   |
| Khandrai     |               33 | Jowar fodder        | nil  | nil | nil       | nil     | nil   |
| Khandrai     |               34 | Barseem             | nil  | nil | nil       | nil     | nil   |
| Khandrai     |               34 | Jowar fodder        | nil  | nil | nil       | nil     | nil   |
| Khandrai     |               35 | Barseem             | nil  | nil | nil       | nil     | nil   |
| Khandrai     |               35 | Sugarcane (planted) | nil  | nil | nil       | nil     | nil   |
| Khandrai     |               35 | Jowar fodder        | nil  | nil | nil       | nil     | nil   |
| Khandrai     |               44 | Barseem             | nil  | nil | nil       | nil     | nil   |
| Khandrai     |               47 | Bajra               | nil  | nil | nil       | nil     | nil   |
| Khandrai     |               47 | Barseem             | nil  | nil | nil       | nil     | nil   |
| Khandrai     |               47 | Jowar fodder        | nil  | nil | nil       | nil     | nil   |
| nil          |              nil | Wheat+Mustard       | nil  | nil | nil       | nil     | nil   |
| nil          |              nil | Barseem+Vegetables  | nil  | nil | nil       | nil     | nil   |
| nil          |              nil | Ber                 | nil  | nil | nil       | nil     | nil   |



* DONE Input correction
  CLOSED: [2019-02-27 Wed 22:47]
#+NAME: to-see-later
#+BEGIN_SRC R :results value :exports results :colnames yes :hline yes

  household[,.(village_name,household_number,id)]->t
  #this merge works only for crops which have inputs
  t[crop,on=c(id="sno_id")][code_crop,on=c(crop_id="id")][!is.na(i.id),crop_table_id:=i.id][,i.id:=NULL][!is.na(crop_number)]->t1

  t1[input,on=c(crop_table_id="cropping_pattern_schedule_production_and_sales_id")][cropinput,on=c(input_use_for_crops_id="id")]->l
  input_category[l,on=c(id="input_category_id")]->l

  input_type[l,on=c(id="input_type_id")]->l
  k[,.(village_name,household_number,crop_number,crop_id,crop,Extent.in.acres,input_number,input_category,input_type,source,quantity,quantity_unit_id,value,lessor_quantity,lessor_value)]->k
  k[is.na(value),value:=0]->k
  k[is.na(lessor_value),lessor_value:=0]->k


#+END_SRC


#+NAME: corrections-input-matrix
#+BEGIN_SRC R :results value :exports results :colnames yes :hline yes

  household[,.(village_name,household_number,id)]->t
  t$qid <- paste(substr(t$village_name,1,3),t$household_number,sep="-")
  t[crop,on=c(id="sno_id")][code_crop,on=c(crop_id="id")][!is.na(i.id),crop_table_id:=i.id][,i.id:=NULL][!is.na(crop_number)]->t1
  t1[input,on=c(crop_table_id="cropping_pattern_schedule_production_and_sales_id")][cropinput,on=c(input_use_for_crops_id="id")]->l
  input_category[l,on=c(id="input_category_id")]->l
  input_type[l,on=c(id="input_type_id")]->l
  l[,.(qid,village_name,household_number,crop_number,crop_id,crop,Extent.in.acres,input_number,input_category,input_type,source,quantity,quantity_unit_id,value,lessor_quantity,lessor_value)]->k
  k[is.na(value),value:=0]->k
  k[is.na(lessor_value),lessor_value:=0]->k
  k[value!=999]->k1
  k1[lessor_value!=999]->k1
  dcast(k1,qid+village_name+household_number+crop+input_category+input_type+Extent.in.acres~.,sum,value.var=c("value","lessor_value") )->k

  k[!is.na(Extent.in.acres)]->k #fix these cases
  k$value+k$lessor_value->k$total_value
  k$total_value/k$Extent.in.acres->k$per_acre_input
  is_outlier <- function(x) {
      return(x < quantile(x, 0.25) - 1.5 * IQR(x) | x > quantile(x, 0.75) + 1.5 * IQR(x))
  }
  k[,outlier:=is_outlier(per_acre_input),by=,.(crop,input_type,input_category)]->k
  k[,label:=ifelse(outlier,qid,"")]->k

  copy(k)->input_matrix

#+END_SRC

#+RESULTS: corrections-input-matrix




#+NAME: urea_boxplot
#+BEGIN_SRC R :results output graphics :file urea-boxplot.png :width 1200 :height 800 

input_matrix[crop=="Paddy"|crop=="Wheat"|crop=="Cotton - Badi/Kapas"|crop=="Sugarcane (planted)"|crop=="Sugarcane (first ratoon)"|crop=="Barseem"|crop=="Mustard"]->a1
a1[input_type=="Urea"]->a2
ggplot(a2,aes(x=crop,y=per_acre_input))->a3
a3+geom_boxplot()+geom_text_repel(aes(label=label),hjust=-0.3)+scale_y_continuous(name="Per acre Urea value")

#+END_SRC

#+RESULTS: urea_boxplot
[[file:urea-boxplot.png]]


#+NAME: dap_boxplot
#+BEGIN_SRC R :results output graphics :file dap-boxplot.png :width 1200 :height 800 

input_matrix[crop=="Paddy"|crop=="Wheat"|crop=="Cotton - Badi/Kapas"|crop=="Sugarcane (planted)"|crop=="Sugarcane (first ratoon)"|crop=="Barseem"|crop=="Mustard"]->a1
a1[input_type=="DAP"]->a2
ggplot(a2,aes(x=crop,y=per_acre_input))->a3
a3+geom_boxplot()+geom_text_repel(aes(label=label),hjust=-0.3)+scale_y_continuous(name="Per acre DAP value")

#+END_SRC

#+RESULTS: dap_boxplot
[[file:dap-boxplot.png]]


#+NAME: seed_boxplot
#+BEGIN_SRC R :results output graphics :file seed-boxplot.png :width 1200 :height 800 

  input_matrix[crop=="Paddy"|crop=="Wheat"|crop=="Cotton - Badi/Kapas"|crop=="Sugarcane (planted)"|crop=="Sugarcane (first ratoon)"|crop=="Barseem"|crop=="Mustard"]->a1
  a1[input_category=="Seed/Planting material"]->a2
  ggplot(a2,aes(x=crop,y=per_acre_input))->a3
  a3+geom_boxplot()+geom_text_repel(aes(label=label),hjust=-0.3)+scale_y_continuous(name="Per acre Seed value")

#+END_SRC

#+RESULTS: seed_boxplot
[[file:seed-boxplot.png]]

#+NAME: manure_boxplot
#+BEGIN_SRC R :results output graphics :file manure-boxplot.png :width 1200 :height 800 
  input_matrix[crop=="Paddy"|crop=="Wheat"|crop=="Cotton - Badi/Kapas"|crop=="Sugarcane (planted)"|crop=="Sugarcane (first ratoon)"|crop=="Barseem"|crop=="Mustard"]->a1
  a1[input_category=="Farm yard manure"]->a2
  ggplot(a2,aes(x=crop,y=per_acre_input))->a3
  a3+geom_boxplot()+geom_text_repel(aes(label=label),hjust=-0.3)+scale_y_continuous(name="Per acre Manure value")

#+END_SRC

#+RESULTS: manure_boxplot
[[file:manure-boxplot.png]]


#+NAME: ppc_boxplot
#+BEGIN_SRC R :results output graphics :file ppc-boxplot.png :width 1200 :height 800 
  input_matrix[crop=="Paddy"|crop=="Wheat"|crop=="Cotton - Badi/Kapas"|crop=="Sugarcane (planted)"|crop=="Sugarcane (first ratoon)"|crop=="Barseem"|crop=="Mustard"]->a1
  a1[input_category=="Plant protection chemical"]->a2

  ggplot(a2,aes(x=crop,y=per_acre_input))->a3
  a3+geom_boxplot()+geom_text_repel(aes(label=label),hjust=-0.3)+scale_y_continuous(name="Per acre Pesticides and Herbicides")

  #CHECK BIRDHANA HOUSEHOLD NUMBER 1: DAP is listed as plant chemical
#+END_SRC

#+RESULTS: ppc_boxplot
[[file:ppc-boxplot.png]]


#+NAME: water_boxplot
#+BEGIN_SRC R :results output graphics :file water-boxplot.png :width 1200 :height 800 
  input_matrix[crop=="Paddy"|crop=="Wheat"|crop=="Cotton - Badi/Kapas"|crop=="Sugarcane (planted)"|crop=="Sugarcane (first ratoon)"|crop=="Barseem"|crop=="Mustard"]->a1
  a1[input_category=="Water"]->a2

  ggplot(a2,aes(x=crop,y=per_acre_input))->a3
  a3+geom_boxplot()+geom_text_repel(aes(label=label),hjust=-0.3)+scale_y_continuous(name="Per acre water")

#+END_SRC

#+RESULTS: water_boxplot
[[file:water-boxplot.png]]
* Yield correction
